[{"title": "I am building a ReadMe for tips on coding with python. It is for beginners and gives you a some nice tips on different situations when programming with Python", "score": 0, "id": "11xmn0j", "url": "https://github.com/raiyanyahya/100-Tips-on-Coding-in-Python", "comms_num": 0, "created": 1679417279.0, "body": ""}, {"title": "chat-toolkit: an extensible package for creating ML-powered chatbots", "score": 1, "id": "11xm82u", "url": "https://www.reddit.com/r/Python/comments/11xm82u/chattoolkit_an_extensible_package_for_creating/", "comms_num": 0, "created": 1679416462.0, "body": "Hello!\n\nI would like to share my first public PyPI project.\n\n    pip install -U chat-toolkit\n\nsource code: [https://github.com/danb27/chat-toolkit](https://github.com/danb27/chat-toolkit)\n\nThis is a quick way to proof of concept a ChatGPT chatbot from the terminal: `python -m chat_toolkit`. But it is also much more.\n\nWhile I have seen other packages/repos recently that also require an OpenAI API key and provide an easy way to access ChatGPT from the terminal, my package is not designed exclusively around the terminal or ChatGPT. It also has the following features:\n\n* Is an extensible framework for making different types of components for conversational AI. Currently, the three types of components are Chatbots, Speech-to-Text, and Text-to-Speech. Each component type currently only supports a single API to start with: OpenAI's ChatGPT (paid), OpenAI's Whisper (paid), and pyttsx3 (free), respectively.\n* Using these three (for now) types of components allows the user to proof of concept more complicated chatbots, such as a Speech to Speech chatbot that you can speak directly with and hear responses from: `python -m chat_toolkit --speech-to-text --text-to-speech`\n* Users can subclass the component base classes to proof of concept currently unsupported algorithms. This is the same process I will use to add support for more algorithms. Components of the same type can be hot-swapped for each other.\n* Extensible components can be used directly for developing your own applications, not just creating a quick proof of concept in the terminal.\n\nWould appreciate any constructive and respectful feedback.\n\nEDIT:\n\n\\- formatting"}, {"title": "Twitter API - free, no tokens required", "score": 2, "id": "11xlw5k", "url": "https://www.reddit.com/r/Python/comments/11xlw5k/twitter_api_free_no_tokens_required/", "comms_num": 0, "created": 1679415820.0, "body": "A complete implementation of the Twitter API (1.1/2/graphql)\n\n- automate account actions (tweet,dm,like, etc.)\n- pull data (async)\n- search (async)\n\nhttps://pypi.org/project/twitter-api-client/"}, {"title": "GPT-4 API Reference Guide with Python Examples", "score": 1, "id": "11xlrka", "url": "https://medium.com/sopmac-ai/gpt-4-api-reference-guide-e4ba18bcbc5f", "comms_num": 1, "created": 1679415567.0, "body": ""}, {"title": "A Simple Python Guide to Concatenating DataFrames", "score": 0, "id": "11xkakr", "url": "https://blog.trymito.io/concatenating-dataframes-in-pnadas/", "comms_num": 0, "created": 1679412692.0, "body": ""}, {"title": "How to check if pip package is malicious", "score": 1, "id": "11xj3ua", "url": "https://www.reddit.com/r/Python/comments/11xj3ua/how_to_check_if_pip_package_is_malicious/", "comms_num": 0, "created": 1679410227.0, "body": "I'm looking for some tips on what to look for when evaluating a pip package for malicious code.    \nHere is an actual example I recently went through:\n\nThere is a fairly known pip package called **Cython**: [https://pypi.org/project/Cython/](https://pypi.org/project/Cython/).   \nAt the same time there is a lesser known package very similarly called **cPython**: [https://pypi.org/project/cPython/](https://pypi.org/project/cPython/)^1\n\nIt's easy to mistype:\n`pip install cpython`\ninstead of:\n`pip install cython`\n\nSince pip install executes code from the package itself I thought it would be useful to investigate what this package contains so went through the following steps:\n\n1. Went to project homepage under pypi.org https://pypi.org/project/cPython/ and downloaded the latest package version since I'm assuming this is what pip install fetches if no version is provided. The latest version seems to be 0.0.6 under Downloads: https://pypi.org/project/cPython/#files\n2. Uncompressed the file, it's a tar.gz\n3. Checked the following files:\n    1. setup.py : no suspicious code at first sight. Also looked at dependencies (install_requires) and got 2: pymongo and requests, which are well known packages\n    2. cPython.py in subdirectory cPython: I'm assuming this file is not executed by pip install but I'm not sure if the imports are not resolved, it seems there are more dependencies in this file than listed under setup.py, but none triggers any concerns.\n    3. __init__.py in same subdirectory cPython: empty, similar comment to above.\n\nIt seems this particular package does not distribute binary components so this makes reviewing easier.\n\nWould you think these kind of checks are sufficient or can there be some more hidden traps one can miss even on a simple package as in this example?\n\n\n^1 I should note that at the time of this writing there is no information to assume that malicious code is delivered through the cPython package, although it's not very clear why the author went with this name for what seems to be just a wrapper script."}, {"title": "Solomon: Data Exploration tool.", "score": 0, "id": "11xiaov", "url": "https://www.reddit.com/r/Python/comments/11xiaov/solomon_data_exploration_tool/", "comms_num": 0, "created": 1679408459.0, "body": "Wanted to try making use of OpenAI to create a data exploration tool. It makes use of the code-davinci-002 (soon to be deprecated) streamlit and pandas.\n\nhttps://github.com/Onlyartist9/Solomon"}, {"title": "[ZnFlow] Play around with Graphs", "score": 4, "id": "11xhb4a", "url": "https://www.reddit.com/r/Python/comments/11xhb4a/znflow_play_around_with_graphs/", "comms_num": 0, "created": 1679406255.0, "body": "I wrote a small package [ZnFlow](https://github.com/zincware/ZnFlow) ``pip install znflow`` that allows you to build computational graphs based on functions and/or classes. You can define your graph using inheritance or decorators and connect them in what ever way you like. The graph will only be executed when you call ``graph.run()``.\n\nHere is a small example:\n\n```python\nimport znflow\nimport dataclasses\n\n@znflow.nodify\ndef compute_mean(x, y):\n    return (x + y) / 2\n\n@dataclasses.dataclass\nclass ComputeMean(znflow.Node):\n    x: float\n    y: float\n    \n    results: float = None\n    \n    def run(self):\n        self.results = (self.x + self.y) / 2\n        \nwith znflow.DiGraph() as graph:\n    n1 = ComputeMean(2, 8)\n    n2 = compute_mean(13, 7)\n    # connecting classes and functions to a Node\n    n3 = ComputeMean(n1.results, n2) \n    \ngraph.run()\nprint(n3.results)\n# >>> 7.5\n```\n\nSo far there is no parallel execution and this is ment as a playground for writing graphs. The graph is stored using ``networkx`` and can be visualized as such."}, {"title": "Executing Python Scripts With a Shebang \u2013 Real Python", "score": 2, "id": "11xgvij", "url": "https://realpython.com/python-shebang/", "comms_num": 0, "created": 1679405317.0, "body": ""}, {"title": "Hello everyone, this is my deep learning project to recognize pokemon by image on Github, hope you enjoy!", "score": 4, "id": "11xgqwf", "url": "https://www.reddit.com/r/Python/comments/11xgqwf/hello_everyone_this_is_my_deep_learning_project/", "comms_num": 1, "created": 1679405028.0, "body": "Code: [https://github.com/vovod/pytorch-who-is-that-pokemon](https://github.com/vovod/pytorch-who-is-that-pokemon)\n\nhttps://preview.redd.it/ngx9x2cxf3pa1.png?width=640&format=png&auto=webp&v=enabled&s=ad674ab21c8530d82ab595d40170717c40225163"}, {"title": "[I] created a discord chatgpt bot.", "score": 1, "id": "11xgfxp", "url": "https://www.reddit.com/r/Python/comments/11xgfxp/i_created_a_discord_chatgpt_bot/", "comms_num": 0, "created": 1679404323.0, "body": "Just create a bot, put in API keys and you're done!\n\nIt will reply to all messages but not itself. It's locked to one single guild per bot only for safety reasons.\n\nPRs welcomed. Enjoy!\n\n[https://github.com/Lodimup/discord-gpt](https://github.com/Lodimup/discord-gpt)\n\n&#x200B;\n\n[mandatory inf. loop when developing](https://preview.redd.it/eyr0mfuld3pa1.png?width=1167&format=png&auto=webp&v=enabled&s=75fa4b185780d6ccf68451a67f1eba479c048084)"}, {"title": "How do you decide to use a Python Package", "score": 15, "id": "11xfo9c", "url": "https://www.reddit.com/r/Python/comments/11xfo9c/how_do_you_decide_to_use_a_python_package/", "comms_num": 22, "created": 1679402428.0, "body": "Hey guys,\n\nso I was wondering how do you decide on using a Python package? Of course there is the obvious answer that you chose a package based on functionality that you need (Pytorch for neural networks, requests for well... requests, etc.).\n\nThere are though in my eyes other factors that are important, especially in professional development and that is both safety of the package and also quality of the package. So my question is how do you judge those two parameters? Do you fly over the source code? Do you look at test coverage? Do you check for documentation before installing or are there any resources that provide insights into different packages? \n\nThanks in advance for your answers!"}, {"title": "Deep Learning for Audio: A library for audio and music analysis", "score": 103, "id": "11xfa47", "url": "https://github.com/libAudioFlux/audioFlux", "comms_num": 8, "created": 1679401447.0, "body": ""}, {"title": "Made a basic system monitor with pygame", "score": 1, "id": "11xeeuj", "url": "https://www.reddit.com/r/Python/comments/11xeeuj/made_a_basic_system_monitor_with_pygame/", "comms_num": 0, "created": 1679399172.0, "body": "Full app can be found at: [https://drive.google.com/drive/folders/1-K8IfYNAVmEw35yT2aoZwWBRaK3Ju3fi?usp=share\\_link](https://drive.google.com/drive/folders/1-K8IfYNAVmEw35yT2aoZwWBRaK3Ju3fi?usp=share_link)\n\nAlthough this is a showcase of the app, feel free to let me know if there's major problems\n\n[System Display](https://reddit.com/link/11xeeuj/video/zc3cmsw0z2pa1/player)"}, {"title": "Fitness Tracking using Python & Mediapipe Tutorial -Angle Tracking", "score": 1, "id": "11xe2av", "url": "https://youtu.be/bhoraBX2Dnk", "comms_num": 0, "created": 1679398134.0, "body": ""}, {"title": "Why you need to use CBVs over FBVs in django", "score": 0, "id": "11xd7d9", "url": "https://simplifiedweb.netlify.app/django-cbvs-or-fbvs/", "comms_num": 1, "created": 1679395331.0, "body": ""}, {"title": "Opinion on the monaco lib ?", "score": 34, "id": "11xbg6o", "url": "https://www.reddit.com/r/Python/comments/11xbg6o/opinion_on_the_monaco_lib/", "comms_num": 8, "created": 1679389054.0, "body": "Hi everyone,\n\nI want to develop Monte Carlo simulations for various uses, with tkinter as GUI. I initially planned to interface python with c++, but i just came across the monaco lib. Maybe it is enough for what i need (simulation of traffic jams for example), and could avoid me to interface python and c++ which doesn't seem to be that easy. Do you guys have experience with monaco ? Is it fast / flexible ?\n\nThanks !"}, {"title": "Feel free to shit on my code this is a script for finding if a number is even or odd", "score": 0, "id": "11xarii", "url": "https://www.reddit.com/r/Python/comments/11xarii/feel_free_to_shit_on_my_code_this_is_a_script_for/", "comms_num": 11, "created": 1679386759.0, "body": "\\# lists off numbers  \nodd = \\[1, 3, 5, 7, 9\\]  \n\n\n\\# requests input and checks for illegal characters  \ninput = input(\"Number?\")  \nif not input.isdigit():  \n print(\"error\")  \n exit()  \n\n\n\\# finds last digit of number  \nnum = int(repr(int(input))\\[-1\\])  \n\\# compares the listed digits and the last digit of the number  \nif num in odd:  \n print(\"odd\")  \nelse:  \n print(\"even\")"}, {"title": "Tuesday Daily Thread: Advanced questions", "score": 1, "id": "11x0no5", "url": "https://www.reddit.com/r/Python/comments/11x0no5/tuesday_daily_thread_advanced_questions/", "comms_num": 5, "created": 1679356809.0, "body": "Have some burning questions on advanced Python topics? Use this thread to ask more advanced questions related to Python.\n\n**If your question is a beginner question we hold a beginner Daily Thread tomorrow (Wednesday) where you can ask any question! We may remove questions here and ask you to resubmit tomorrow.**\n\nThis thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response."}, {"title": "List of reasons to avoid side effects", "score": 0, "id": "11wzf3o", "url": "https://www.reddit.com/r/Python/comments/11wzf3o/list_of_reasons_to_avoid_side_effects/", "comms_num": 6, "created": 1679353864.0, "body": "Hello, I'm trying to compile a list of reasons why unnecessary side effects are long-term-harmful.\n\nThere are some nice resources out there: for example [this awesome thread](https://softwareengineering.stackexchange.com/questions/15269/why-are-side-effects-considered-evil-in-functional-programming) or Eric Elliot's post about [simplicity and side effects](https://medium.com/javascript-scene/the-single-biggest-mistake-programmers-make-every-day-62366b432308). Then there are more specific good posts about Python [import-time side effects](https://chrismorgan.info/blog/say-no-to-import-side-effects-in-python/) in Python and generic observation that side effect lead to [mocking in tests](https://blog.thecodewhisperer.com/permalink/you-dont-hate-mocks-you-hate-side-effects). The majority of side-effect-related posts discuss it in the context of functional programming ([this one](https://thejs.dev/jmitchell/what-are-side-effects-and-what-you-can-do-about-them-jws), another [very good one from Jesse Warden](https://jessewarden.com/books/real-world-functional-programming/part1/01_input_output_side_effects.html), [one more](https://www.yld.io/blog/the-not-so-scary-guide-to-functional-programming/)).\n\nBut I just wanted to make a short list that you can pull out when needed. So here we go:\n\nCode with side effects\n\n* is fragile\n* leads to unexpected crashes\n* is unexpectedly slow and is hard to optimize\n* is hard to use concurrently\n* is hard to read and understand\n* it is hard to reuse\n* is hard to debug, release and write tests\n\nI put more detailed arguments into [a Medium post](https://levelup.gitconnected.com/all-dangers-of-side-effects-for-python-coders-fdf0743457a3) on each of those items.\n\nNow, in Python pull request review, sometimes: \"Is it possible to refactor this without unnecessary side effects\". Then you get a response back in the spirit of \"why if it doesn't change the logic\".\n\n*Edit:* To clarify, I\u2019m trying to improve the code with minimal effort. Should you should argue about this on a PR? I think that depends on how easy it is to refactor. In a little contrived example, I would argue that this:\n\n    def my_function(argument):\n       global g_variable\n       g_variable = logic(argument)\n    \n    if __name__ == '__main__':\n       my_function(arg)\n       print(g_variable)\n\nshould be refactored into\n\n    def my_function(argument):\n       return logic(argument)\n    \n    if __name__ == '__main__':\n       g_variable = my_function(arg)\n       print(g_variable)\n\nWhat do you think?"}, {"title": "Use OpenAI's DALL-E for free", "score": 4, "id": "11wzcej", "url": "https://github.com/0ut0flin3/dalle43", "comms_num": 13, "created": 1679353695.0, "body": ""}, {"title": "Are people abusing Python?", "score": 0, "id": "11wye72", "url": "https://www.reddit.com/r/Python/comments/11wye72/are_people_abusing_python/", "comms_num": 45, "created": 1679351523.0, "body": "I learned Python after coming from the C/C++ and Java world. With the massive increase in popularity of Python in the last 10 years, seeing the way it developed, it seems to me like it gained a lot of functionality, which comes natural in other languages, but feels a bit odd in Python.\n\nTo be more specific - albeit Python being dynamically typed, people developed countless tools to check or validate or even enforce types in compile or run time (mypy, pyre, pydantic, pyduck etc.). It feels like it goes against the nature of its loose typing.\n\nAnother example are decorators. This pattern is noticably overused by many tools adding functionality, but even the language itself - defining a \\`class\\`,\\`static\\` and \\`abstract\\` methods with decorators seems just weird and unnatural. Same thing with function overloading.  Anecdotally, it feels like comparing German to English. German has a special word for every peculiar thing and native support for word generation by concatenation of multiple words whilst in English you have to add some common words together and hope this combination doesnt already exist. And if it does, so what, people will get it from the context.\n\nLastly, slightly off-topic but relevant point is that it is not even a simple language in my opinion. It has a very flat learning curve initially but the complexity is just further down the road. Im talking about metaclasses,data descriptors, coroutines, magic methods etc. Some languages are difficult right away (C++, Rust etc.), but Python is a intricate misfit dressed as a simpleton.\n\nAm I misunderstanding a philosophical path of the language or is it simply just a scripting langugage that got massively popular through chance and is now used for stuff it was not intended for?\n\nEdit: grammar"}, {"title": "Reduce - The Power of a Single Python Function", "score": 4, "id": "11wvnnq", "url": "https://betterprogramming.pub/reduce-the-power-of-a-single-python-function-21f9aaa2c18e", "comms_num": 1, "created": 1679345882.0, "body": ""}, {"title": "Orm or not Orm? Mayim?", "score": 6, "id": "11ws1js", "url": "https://www.reddit.com/r/Python/comments/11ws1js/orm_or_not_orm_mayim/", "comms_num": 16, "created": 1679338783.0, "body": "Hello everyone, im more or less proficient in sql, already manage my database as is, and i dont know if i need an orm or not and mostly where do i need to look to not use it but still have some goodies, i have seen mayim project, i feel like its more or less the degree of freedom i need, id like opinions on that and maybe alternatives to evaluate.. thanks everyone\n\nedit: add link to mayim \n\nhttps://ahopkins.github.io/mayim/guide/install.html"}, {"title": "Python Platformer Game Tutorial for Beginners [1:52:06]", "score": 4, "id": "11wqy9w", "url": "https://youtu.be/6gLeplbqtqg", "comms_num": 0, "created": 1679336909.0, "body": ""}, {"title": "Lona - create full web-applications from a simple Python script", "score": 200, "id": "11wppu7", "url": "https://www.reddit.com/r/Python/comments/11wppu7/lona_create_full_webapplications_from_a_simple/", "comms_num": 56, "created": 1679334394.0, "body": "It's been more than a year since last time i posted about my web-framework Lona, and it evolved quite a bit since then!\n\nLona is an easy to use, full Python, framework to create beautiful web-applications in minutes, without dealing with JavaScript or CSS. It has a very flat learning curve to get you started, and scales as your project grows. It is written in vanilla Python and JavaScript, so you don't have to deal with tools and libraries like npm, vue, react etc.\n\nOne of the newest additions to the project is the tutorial i wrote ([https://lona-web.org/1.x/tutorial/index.html](https://lona-web.org/1.x/tutorial/index.html)) to make the first steps even easier. It contains many examples, and small clips of them.\n\nFeedback in any form would be very welcome!\n\n&#x200B;\n\nGithub: [https://github.com/lona-web-org/lona](https://github.com/lona-web-org/lona)\n\nDocumentation: [https://lona-web.org/1.x/](https://lona-web.org/1.x/)\n\nDemos: [https://lona-web.org/1.x/demos/index.html](https://lona-web.org/1.x/demos/index.html)"}, {"title": "Impressions and interesting talks from PyData NYC 2022", "score": 2, "id": "11wnkdt", "url": "https://www.dolthub.com/blog/2023-03-20-dolthub-goes-to-pydata-nyc/", "comms_num": 0, "created": 1679329856.0, "body": ""}, {"title": "I made a Conway's game of life in a Python GIF exporter!", "score": 3, "id": "11wmoj0", "url": "https://www.reddit.com/r/Python/comments/11wmoj0/i_made_a_conways_game_of_life_in_a_python_gif/", "comms_num": 0, "created": 1679327981.0, "body": "Hey everyone! I created a [Python application to export Conway's Game of Life simulations](https://github.com/linguini1/conway) as GIFs and PNGs after becoming fascinated with the cool behaviour this game produces.\n\nThere is a library of some common seeds/automata from the original game rules, as well as a library of different cells that can be used to achieve different behaviour. The configuration of the simulation can either take a set amount of generations/frames to run for, or can be instructed to run until the simulation stagnates.\n\nIt is currently geared towards developers as you will have to mess around with the [main.py](https://main.py) file to use different cell types and seeds (which I am working on changing to be more user-friendly). There is some sample code in the README documentation, and a GitHub Wiki that explains some features.\n\nAny feedback is welcome! I am especially looking for a speedier way to create the long GIFs, as right now longer simulations can take a while to scale and stitch together.\n\n[\\\\\"Maze cell\\\\\" simulation](https://i.redd.it/dsi9mzdf2xoa1.gif)\n\n[The \\\\\"Shoebox\\\\\" seed using classic cells from the original Game Of Life rules](https://i.redd.it/x8ac46qh2xoa1.gif)"}, {"title": "Django Developers Survey 2022 Results", "score": 5, "id": "11wk31n", "url": "https://lp.jetbrains.com/django-developer-survey-2022/", "comms_num": 0, "created": 1679321822.0, "body": ""}, {"title": "Random Settler's Of Catan Board Generating Program", "score": 96, "id": "11wjz95", "url": "https://www.reddit.com/r/Python/comments/11wjz95/random_settlers_of_catan_board_generating_program/", "comms_num": 10, "created": 1679321587.0, "body": "I made a python program to randomly generate a game board with numbers for Settler's of Catan - the original idea was to get my friends to shut up about making unfair boards, but it's actually a pretty good beginner lesson so I made a tutorial on it here:\n\n[https://www.youtube.com/watch?v=7h3sFhBAgcw](https://www.youtube.com/watch?v=7h3sFhBAgcw)\n\nAnd all the code is available here:\n\n[https://github.com/plemaster01/CatanBoardGeneration](https://github.com/plemaster01/CatanBoardGeneration)"}, {"title": "Smarty-GPT: wrapper of prompts/contexts", "score": 0, "id": "11wh5v9", "url": "https://www.reddit.com/r/Python/comments/11wh5v9/smartygpt_wrapper_of_promptscontexts/", "comms_num": 0, "created": 1679314160.0, "body": "This is a simple wrapper that introduces any imaginable complex context to each question submitted to Open AI API. The main goal is to enhance the accuracy obtained in its answers in a **TRANSPARENT** way to end users.\n\nThis idea arose in the context of a health-related experiment lead by CiTIUS.(**more coming soon**).\n\n&#x200B;\n\n[https://github.com/citiususc/Smarty-GPT](https://github.com/citiususc/Smarty-GPT)"}, {"title": "I explained threading by making a cup of tea. Please give me honest feedback.", "score": 90, "id": "11wdil0", "url": "https://youtu.be/WJQueXxVnTs", "comms_num": 33, "created": 1679302928.0, "body": ""}, {"title": "CPorter: Streamlined C & Python Integration with Auto Type Checking and more", "score": 4, "id": "11wd5y8", "url": "https://www.reddit.com/r/Python/comments/11wd5y8/cporter_streamlined_c_python_integration_with/", "comms_num": 0, "created": 1679301687.0, "body": "Over the weekend I wrote a simple wrapper for ctypes. It simplifies the process of compiling, loading, and calling C functions from Python. I wrote it mostly for fun, I'm sure there are much better library wrappers out there but it was a nice exercise in Python packaging and Mypy.\n\n I do enjoy statically-typed languages for the verboseness, so I took a crack at type hints and static-type checking with Python for once. Only 260 LOC but I'm happy it passes Mypy fully. \n\n\n\n\n\nHere's an example to show some speed differences:\n    \n    from cporter.cporter import CPorter\n\n    def fibonacci_iterative(n):\n        a = 0\n        b = 1\n        elif n == 0:\n            return a\n        elif n == 1:\n            return b\n        else:\n            for i in range(2,n+1):\n                c = a + b\n                a = b\n                b = c\n            return b\n    \n    cporter = CPorter()\n    \n    cporter.set_library_path(\"examples/lib\")\n    cporter.add_library(\"fib\")\n    print(\"Calculating 100th fibonacci number\")\n    py_results = cporter.profile_python_function(fibonacci_iterative, 100)\n    c_results = cporter.profile_function(\"fib\", \"fibonacci_iterative\", 100)\n    \n    print(f\"C Result:{c_results[0]} Time: {c_results[1]} seconds\")\n    print(f\"Python Result:{c_results[0]} Time: {py_results[1]} seconds\")\n\nAnd our result:\n\n    Calculating 100th fibonacci number\n    C Result:3736710778780434371 Time: 0.0001399169999999339 seconds\n    Python Result:3736710778780434371 Time: 5.000000000032756e-06 seconds\n\nAnyway, here's the repo: https://github.com/snacsnoc/cporter\n\nThe inspiration came from another project I submitted a few PRs to, [sushi](https://github.com/dev-sushi/sushi). It's another library to run functions from foreign languages within Python. Check it out, it's pretty cool."}, {"title": "How to learn for loop, do while loop and functions?", "score": 0, "id": "11wcya8", "url": "https://www.reddit.com/r/Python/comments/11wcya8/how_to_learn_for_loop_do_while_loop_and_functions/", "comms_num": 7, "created": 1679300915.0, "body": "I work as an Analyst, have some experience with Python, like using groupby, filter conditions, joins, windows function, rank function to basically get the business logic to code. I see people who are efficient in coding tend to write their code as a single function rather than going through each step one at a time like cells in jupyter notebook. I want to learn how can I be better at writing loops, conditions and functions together as a whole. Like for example my coworker built a function where he declared a empty list outside the function, use it within, used counters and basically ran a groupby with agg to include the function fetching the desired output as a dataframe. How will I be able to work on such complex functions using loops and other parameters?"}, {"title": "TUT | quick video tutorial about self-hosting APIs", "score": 4, "id": "11wbwqv", "url": "https://www.reddit.com/r/Python/comments/11wbwqv/tut_quick_video_tutorial_about_selfhosting_apis/", "comms_num": 0, "created": 1679297216.0, "body": "Hi gouyss, I made a quick video for web devs that want to self-host their apps. I showcase Docker, Docker-Compose and Traefik very quickly and show web developers how to get their APIs public quickly. Nothing groundbreaking but I needed this information and I didn't have a clear understanding of where to find it but it's my utmost hope it helps others that were chasing project requirements that are outlined in this video.   \n\n\nVideo Link: [https://www.youtube.com/watch?v=NIHzYIkXFhE](https://www.youtube.com/watch?v=NIHzYIkXFhE&t=16s)\r  \nGithub Link:  [https://github.com/Wizock/how-to-host-FastAPI-Apis-on-traefik](https://github.com/Wizock/how-to-host-FastAPI-Apis-on-traefik)  \n\n\nAll feedback is appreciated :)."}, {"title": "Free-to-use GPT-3 powered command-line shell (no API-key required)", "score": 335, "id": "11wb2vn", "url": "https://github.com/0ut0flin3/Reptyl", "comms_num": 58, "created": 1679294521.0, "body": ""}, {"title": "In light of PEP 668, I'd like to share how my package handles virtual environments.", "score": 0, "id": "11w83l6", "url": "https://www.reddit.com/r/Python/comments/11w83l6/in_light_of_pep_668_id_like_to_share_how_my/", "comms_num": 7, "created": 1679285404.0, "body": "The recent discussion around PEP 668 and push towards venvs in Debian Sid made me want to share my solution for working with virtual environments from within Python. Let me explain:\n\n**TL;DR** A `Venv` context manager to control `sys.path` \\+ other goodies.\n\nA few years ago, when building out the [plugin system](https://meerschaum.io/reference/plugins/writing-plugins/), I wanted each plugin (i.e. just a Python module) to be given its own virtual environment, a la `pipx`, into which the plugin's dependencies are installed. In hindsight, I may have been suffering from \"not-invented-here-syndrome\" and maybe should have used one of the 1000 other Python package management tools out there, but to be honest, I'm grateful I took the time to write it exactly how I planned on using the feature. Remember, this wasn't intended to be yet another `pip` clone but instead a controlled way to manage plugins (albeit a bit hacky).\n\nThe internals of the plugin system work something like this:\n\n    >>> from meerschaum.utils.packages import pip_install\n    >>> pip_install('requests', venv='foo')\n    True\n\nThis creates a new venv `foo` (stored as  `~/.config/meerschaum/venvs/foo`) and installs `requests`. Another way to invoke this is through the CLI (though this will trigger installs for other internal components):\n\n    $ mrsm install package requests --venv foo\n\nNow you can use the `Venv` context manager to activate and import from this venv without having to fuss with `sys.path`, `threading.RLock`, or anything like that:\n\n    >>> import meerschaum as mrsm\n    >>> with mrsm.Venv('foo'):\n    ...     import requests\n    ... \n    >>> requests\n    <module 'requests' from '/root/.config/meerschaum/venvs/foo/lib/python3.12/site-packages/requests/__init__.py'>\n\nAgain, this is a supporting feature, but if there's demand for it, I've been considering separating the [venv module](https://docs.meerschaum.io/utils/venv/index.html) into its own package.\n\nI hope you found this insightful and that it contributes positively to the PEP 668 discussion!"}, {"title": "Check out `gptty`: a CLI wrapper for ChatGPT written in Python", "score": 1, "id": "11w7lw6", "url": "https://www.reddit.com/r/Python/comments/11w7lw6/check_out_gptty_a_cli_wrapper_for_chatgpt_written/", "comms_num": 2, "created": 1679284046.0, "body": "I created a CLI wrapper for ChatGPT called `gptty` because I was dissatisfied with the categorization tools available in the ChatGPT web UI. It can be installed on Github [https://github.com/signebedi/gptty](https://github.com/signebedi/gptty). I've added preliminary user docs on installation, configuration, and usage. I'd love feedback on (and contributions to) the code base.\n\n**What** `gptty` **does differently than other tools**. `gptty` adds support for tagged questions that, when used correctly, allow you to access past question context across sessions. So, for example, if you prepend a question with the `[shakespeare]` tag, then tag another question with the same, it allows you to access the prior conversation with ChatGPT -  thus largely replicating the context-preserving behavior of the web application while giving users control over how to tag and categorize these conversations.\n\n[Here is an example using the \\[shakespeare\\] tag](https://preview.redd.it/vl45x6mpdtoa1.png?width=1661&format=png&auto=webp&v=enabled&s=3ec47fd71f5308c29dedc89c15302d9efc5cfa70)\n\nFundamentally, this wrapper is focused on user control over the categorization of their conversations, but it also wants to provide an aesthetically pleasing experience. If it gains some traction, I'd like to add support for a bash runtime that allows you to send one-off questions using the same categorization logic, like: `gptty --question \"how old is the universe\" --tag \"physics\"`.\n\nThanks for any feedback, contributions, or installs you can give!"}, {"title": "Wayback machine for pip requirements.txt", "score": 20, "id": "11w2zpm", "url": "https://github.com/tkarabela/requirements-wayback-machine", "comms_num": 14, "created": 1679272253.0, "body": "If you're struggling to get correct Python dependencies for an older project, requirements_wayback_machine will try to tell you how your dependencies would have been resolved at given date in the past!"}, {"title": "Monday Daily Thread: Project ideas!", "score": 4, "id": "11w27d5", "url": "https://www.reddit.com/r/Python/comments/11w27d5/monday_daily_thread_project_ideas/", "comms_num": 1, "created": 1679270410.0, "body": "Comment any project ideas beginner or advanced in this thread for others to give a try! If you complete one make sure to reply to the comment with how you found it and attach some source code! If you're looking for project ideas, you might be interested in checking out Al Sweigart's, [\"The Big Book of Small Python Projects\"](https://inventwithpython.com/bigbookpython/) which provides a list of projects and the code to make them work."}, {"title": "QLineEdit in PyQt6! How to Access User Input in Your GUI!", "score": 1, "id": "11w1s01", "url": "https://youtu.be/giPO3A3GuBQ", "comms_num": 0, "created": 1679269402.0, "body": ""}, {"title": "I've created one of the Fastest Python web Frameworks!!", "score": 30, "id": "11vzvde", "url": "https://www.reddit.com/r/Python/comments/11vzvde/ive_created_one_of_the_fastest_python_web/", "comms_num": 34, "created": 1679264676.0, "body": "**Panther**  \n**Github**: [https://github.com/AliRn76/panther](https://github.com/AliRn76/panther)  \n**Documentation**: [https://pantherpy.github.io/](https://pantherpy.github.io/)  \n\n\nhttps://preview.redd.it/gtec70b1uroa1.png?width=831&format=png&auto=webp&v=enabled&s=08c1d9b71f3f555297432cc817dfa09d05c67c66"}, {"title": "pyWave - Financial transaction tracker.", "score": 7, "id": "11vywu8", "url": "https://www.reddit.com/r/Python/comments/11vywu8/pywave_financial_transaction_tracker/", "comms_num": 4, "created": 1679262566.0, "body": "I've decided to throw together a little thing that's pretty helpful with keeping track of transactions. Like a register book you'd get from a bank.\n\nIt works how you'd expect it to work, with a way to describe what the transaction was for, whether it was money going \"in\" or moving \"out\". It'll automatically update the total, starting with a starting balance that'd you have to set it up with to begin with. Like a normal register book. \n\n\n\nYou can use this project to help with balancing a checkbook, keeping track of money moving in and out of your wallet, etc.\n\n\n\nI don't expect it to be used at all, but I thought it was neat enough to share as it'll most definitely help me out a decent amount.\n\n\n\nYou can find the project here: https://github.com/therealOri/pyWave"}, {"title": "GitHub - npiv/chatblade: A CLI Swiss Army Knife for ChatGPT", "score": 0, "id": "11vy9yd", "url": "https://www.reddit.com/r/Python/comments/11vy9yd/github_npivchatblade_a_cli_swiss_army_knife_for/", "comms_num": 0, "created": 1679261156.0, "body": "https://github.com/npiv/chatblade\n\nintegrate chatGPT into your scripts or terminal work. Supports piping text, saving prompts, estimating costs, and some basic json/yaml extraction.\n\nI've added some elaborate examples on the readme of how to use it with pictures, that may provide a better overview."}, {"title": "Rooshk - A command line sandbox god mode game!", "score": 2, "id": "11vy4wd", "url": "https://www.reddit.com/r/Python/comments/11vy4wd/rooshk_a_command_line_sandbox_god_mode_game/", "comms_num": 0, "created": 1679260848.0, "body": "[https://github.com/cmspeedrunner/rooshk](https://github.com/cmspeedrunner/rooshk)\n\nMADE WITH NO EXTERNAL LIBRARIES AT ALL!"}, {"title": "How to learn code in short time", "score": 0, "id": "11vxyqd", "url": "https://www.reddit.com/r/Python/comments/11vxyqd/how_to_learn_code_in_short_time/", "comms_num": 5, "created": 1679260490.0, "body": ""}, {"title": "bare-bones terminal interface for chatGPT", "score": 3, "id": "11vvrqb", "url": "https://www.reddit.com/r/Python/comments/11vvrqb/barebones_terminal_interface_for_chatgpt/", "comms_num": 0, "created": 1679255805.0, "body": "I wanted to have an access to chatGPT from within the terminal and could not find any implementation that was easy to install and did what I wanted it to do, so I made my own.\n\n&#x200B;\n\nhttps://preview.redd.it/2hmvgw234roa1.png?width=1012&format=png&auto=webp&v=enabled&s=9b78fddeb9d84ef5e8fe62fb5f45bff92715c8c1\n\nIt uses official openAI API. You can find it here: [https://github.com/Ach113/shellGPT](https://github.com/Ach113/shellGPT)\n\nIts very simple to install and use. You can specify which model you want it to use as backend by specifying `-m <modelname>`. Available models can be found [here](https://platform.openai.com/docs/models/moderation) (although not all models seem to work).\n\nYou can enable conversation logging by setting `-l` flag. You can also redirect responses to specific questions to text files using `>`, `>>` operators:\n\n`$ What is the meaning of life > answer.txt`"}, {"title": "Is anyone using Python and GPT4? I just started using python for the first time.. mind is blown.", "score": 0, "id": "11vtg9g", "url": "https://www.reddit.com/r/Python/comments/11vtg9g/is_anyone_using_python_and_gpt4_i_just_started/", "comms_num": 16, "created": 1679250818.0, "body": "Hey Guys, \n\nI've never used Python in my life. I just thought I'd try asking GPT4 to help me write apps in Python and I've got some workflows that seem to be working. Would love your thoughts on how I can improve it (assuming I know very little about Python)  \n\n\nInitially, I was doing exactly as the AI instructed, which was creating multiple .py files.   \nThis creates some issues as over time it loses context as to what some of the other .py files contain. Instead, I asked it to make sure that all of the code is in one .py file so that it always has context. ( is this a bad thing?)  \n\n\nI essentially tell the AI a simple idea. I then get it to design a mermaid sequencediagram to show me how the app functions: [https://mermaid.live/](https://mermaid.live/)  \n\n\nThat allows me to use the flowcharts to make sure I know what's going on inside the app.   \n\n\nFrom the mermaid code, I'll ask it to build me a requirements doc for the MVP version of the app.   \n\n\nNext I'll tell it to write out all the code required for the app to function.   \n\n\nObviously, it doesn't get it right right away. From there it's running the py file, then running all the errors back into GPT4 asking it to rewrite the code for me until it gets it right.   \n\n\nDoes anyone have any better ideas as to how I can do this? Any techniques working for you? Thanks!"}, {"title": "Is it possible to include C code in a package published to PyPi while not limiting compatibility?", "score": 21, "id": "11vsrnh", "url": "https://www.reddit.com/r/Python/comments/11vsrnh/is_it_possible_to_include_c_code_in_a_package/", "comms_num": 16, "created": 1679249525.0, "body": "Hello!\n\nI am working on a library, and in a part of it, I perform a customized search over large bytes objects. In my experience, C code runs about an order of magnitude faster when working with primitive data like byte arrays, I wanted to rewrite that part of the code in C to gain performance.\n\nI know about the ctypes module, but I am worried about portability. The library has about 30k downloads, so I want it to be compatible will any system it is installed on.\n\nTo my knowledge, numpy is also largely written in C. Do they compile their code for every possible platform and choose the binaries dynamically, or is there some other good way to do it?\n\nIf someone has any experience regarding this, any help would be appreciated greatly!"}, {"title": "Austin, the CPython frame stack sampler, is now available from PyPI", "score": 3, "id": "11vqqqz", "url": "https://www.reddit.com/r/Python/comments/11vqqqz/austin_the_cpython_frame_stack_sampler_is_now/", "comms_num": 0, "created": 1679245522.0, "body": "Austin can now be installed from PyPI [https://pypi.org/project/austin-dist/](https://pypi.org/project/austin-dist/)"}, {"title": "Are Variables Labels or Boxes?", "score": 0, "id": "11vq5eo", "url": "https://www.reddit.com/r/Python/comments/11vq5eo/are_variables_labels_or_boxes/", "comms_num": 14, "created": 1679244229.0, "body": "I read in a book that variables references a certain value and in some other places (maybe yt).On the other hand, many people say \"Variables are like boxes that store the value\"\n\nNow, I am really confused...Does it matter if we use them interchangeably? Also \"Why\" they use different terms?\n\nThe book I mentioned earlier also says that \"This distinction probably won\u2019t matter much in your initial programs, but it\u2019s worth learning earlier rather than later. At some point, you\u2019ll see unexpected behavior from a variable, and an accurate understanding of how variables work will help you identify what\u2019s happening in your code.\"\n\nAlso, I ignored these terms last year but now im really thinking whats the difference...  \n\n\nEDIT: I think mentioning this will help others explaining to me, I am familiar with the basics and I also know OOP and some other stuff (obv i cant mention everything)"}, {"title": "Any way to short circuit parsing in html.parser?", "score": 1, "id": "11vq2ai", "url": "https://www.reddit.com/r/Python/comments/11vq2ai/any_way_to_short_circuit_parsing_in_htmlparser/", "comms_num": 6, "created": 1679244035.0, "body": "I am parsing large HTML files looking for a specific data field.  When I find it, there's really no need to process the file any further.\n\nI've tried calling HTMLParser.reset() and HTMLParser.close() but that doesn't seem to change anything.\n\nIs there a way to break out of a call to HTMLParser.feed()?"}, {"title": "Hi there I\u2019ve been trying to write a python code using openCV to count British coins in an image.", "score": 1, "id": "11vojn3", "url": "https://www.reddit.com/r/Python/comments/11vojn3/hi_there_ive_been_trying_to_write_a_python_code/", "comms_num": 1, "created": 1679240492.0, "body": "The coins are at different distances with some touching and some of the images are blurred as well as different objects other than coins in the image. Would it be possible for someone to review my code and provide assistance as to where I\u2019m going wrong?"}, {"title": "\"I prefer to use Panel for my data apps. Here is why.\" by Marc-Skov Madsen... guys/girls/non-binary: do not sleep on this deeply detailed article.", "score": 0, "id": "11vn3z7", "url": "https://medium.com/@marcskovmadsen/i-prefer-to-use-panel-for-my-data-apps-here-is-why-1ff5d2b98e8f", "comms_num": 1, "created": 1679236780.0, "body": ""}, {"title": "Black for web development?", "score": 20, "id": "11vlqcu", "url": "https://www.reddit.com/r/Python/comments/11vlqcu/black_for_web_development/", "comms_num": 17, "created": 1679233260.0, "body": "I think everyone would agree on the benefits of Black in the community. It's about the closest we've come to a \\`go ftm\\`, and it reduces the mental load of formatting.\n\nIt works great on python, but what's the equivalent for web development? I know there's \\`djlint\\` for formatting Django templates, but what about raw HTML files? Or non-Django templates? Are there any tools similar to Black in the set-it-and-forget-it category?\n\nI know this doesn't necessarily relate *directly* to python, but I figured everyone here is already familiar with the benefits of Black, and might know of similar tooling."}, {"title": "Learn Python Programming --- Python for Beginners (Legacy course)", "score": 4, "id": "11vlkz6", "url": "https://www.youtube.com/watch?v=xzrjGoPaY-w&list=PLS9G7A6kaaHMuNYaUpySC3zdD8eWtPyp7", "comms_num": 1, "created": 1679232868.0, "body": ""}, {"title": "Alternate python spacing.", "score": 32, "id": "11vlkh2", "url": "https://www.reddit.com/r/Python/comments/11vlkh2/alternate_python_spacing/", "comms_num": 71, "created": 1679232835.0, "body": "&#x200B;\n\nhttps://preview.redd.it/2winm02i7poa1.png?width=952&format=png&auto=webp&v=enabled&s=f1587ca2a285aebdc0826456b6bcf72fa6e951c0\n\nHi! I've personally been using the one on the left a lot. I really like it just as personal preference, no particular reason.\n\nI haven't seen it used anywhere else, but I was wondering what other people thought of this.\n\nThanks."}, {"title": "Python Cybersecurity \u2014 Build your own python tools (PortScanner, Visual Network Tracker and Anonymous FTP Scanner)", "score": 147, "id": "11vl6ul", "url": "https://www.reddit.com/r/Python/comments/11vl6ul/python_cybersecurity_build_your_own_python_tools/", "comms_num": 11, "created": 1679231861.0, "body": "**Python Cybersecurity \u2014 PortScanner**\n\nBuild a simple Port Scanner using the Python Programming language. Port Scanner is an application designed to probe a server or host for open ports. Such an application may be used by administrators to verify security policies of their networks and by attackers to identify network services running on a host and exploit vulnerabilities.\n\n**Link**: [https://youtu.be/bH-3PuQC\\_n0](https://youtu.be/bH-3PuQC_n0)\n\n**Python Cybersecurity \u2014 Visual Network Tracker**\n\nDive into Network Traffic visualization using the Python programming language, Wireshark and Google Maps. This tutorial covers the implementation steps needed to take a file of network traffic and convert it into an visual presentation using Google Maps.\n\n**Link**: [https://youtu.be/xuNuy8n8u-Y](https://youtu.be/xuNuy8n8u-Y)\n\n**Python Cybersecurity \u2014 Anonymous FTP Scanner**\n\nBuild a simple FTP Scanner using the Python Programming language. Anonymous FTP is a means by which archive sites allow general access to their archives of information. These sites create a special account called \u201canonymous\u201d\n\n**Link**: [https://youtu.be/BIZfRodSW9w](https://youtu.be/BIZfRodSW9w)"}, {"title": "Create Your Own Code Editor Using PyQt5 #9 - Fixing Bugs and Adding Few Features", "score": 25, "id": "11vkdmt", "url": "https://youtube.com/watch?v=D8aX4wDnpwI&feature=shares", "comms_num": 15, "created": 1679229647.0, "body": ""}, {"title": "NASA's Cassini - Cosmic Dust Analyzer: How to calibrate a space instrument", "score": 188, "id": "11vjmc2", "url": "https://www.reddit.com/r/Python/comments/11vjmc2/nasas_cassini_cosmic_dust_analyzer_how_to/", "comms_num": 4, "created": 1679227498.0, "body": "Hello everyone,\n\nIn my current small tutorial series I am showing how the Cassini Cosmic Dust Analyzer (CDA) was calibrated. A detailed description of the initial idea can be seen [here](https://youtu.be/rO6w9B0Jw7U) or read here on Wikipedia: [https://en.wikipedia.org/wiki/Cosmic\\_Dust\\_Analyzer](https://en.wikipedia.org/wiki/Cosmic_Dust_Analyzer).\n\nNow before an instrument is set to space one needs to have an understanding and also (empirical) equations and algorithms to convert electric signals into the physical units you'd like to derive. E.g., a current or voltage corresponds to the velocity of a dust particle. To achieve this, the instrument is calibrated in a dust accelerator. Yes, you hear it correctly. A ... \"Cern like accelerator\" ... not for atoms, but for micrometer sized dust particles (e.g., made of iron, Latex, or carbonous compositions).\n\nNow in this small series I want to show how the instrument is calibrated, what kind of calibration functions exist (empirical ones) and how one could use Machine Learning to improve the calibration accuracy of the instrument.\n\nIn this first video it is about the data exploration and understanding. The video and corresponding Open Source GitHub Link can be seen below.\n\nHope you'll like it; and if you work in a lab; also doing some calibration work, maybe the ML based approach will be of interest for you!\n\nBest,\n\nThomas\n\nYouTube: [https://youtu.be/gq-qk\\_Jq5p0](https://youtu.be/gq-qk_Jq5p0)\n\nGitHub: [https://github.com/ThomasAlbin/Astroniz-YT-Tutorials/blob/main/%5BProject%5D-Cassini-CDA/01-Calibration/01\\_data\\_exploration.ipynb](https://github.com/ThomasAlbin/Astroniz-YT-Tutorials/blob/main/%5BProject%5D-Cassini-CDA/01-Calibration/01_data_exploration.ipynb)"}, {"title": "Introduction to __getitem__: A Magic Method in Python - KDnuggets", "score": 0, "id": "11viuco", "url": "https://www.reddit.com/r/Python/comments/11viuco/introduction_to_getitem_a_magic_method_in_python/", "comms_num": 0, "created": 1679225151.0, "body": "Magic methods can make our class design more intuitive by giving us access to Python\u2019s built-in syntax features. Check this tutorial, we will study the __getitem__ method for custom indexing. \n\nhttps://www.kdnuggets.com/2023/03/introduction-getitem-magic-method-python.html"}, {"title": "What you can do in 24 hour?", "score": 0, "id": "11vijrs", "url": "https://www.reddit.com/r/Python/comments/11vijrs/what_you_can_do_in_24_hour/", "comms_num": 2, "created": 1679224231.0, "body": "Let the pictures speak!\n\n[If you can't notice it, then this isn't for you.](https://preview.redd.it/hev48dw5iooa1.png?width=1920&format=png&auto=webp&v=enabled&s=d59ec2a10a8adfecbb992fe4e8ec421ab3bf56ea)\n\n[https://github.com/MeGaNeKoS/LockScreenFusion](https://github.com/MeGaNeKoS/LockScreenFusion)"}, {"title": "Weird-formatting jupyter notebook's output in Pycharm", "score": 4, "id": "11vij4v", "url": "https://www.reddit.com/r/Python/comments/11vij4v/weirdformatting_jupyter_notebooks_output_in/", "comms_num": 1, "created": 1679224177.0, "body": "Why did the \"Stop Airing\" column had to jump to another row, there is definitely enough space for that column\n\nhttps://preview.redd.it/2tutzz7qhooa1.png?width=2884&format=png&auto=webp&v=enabled&s=e1289e92f4bc9f4094e83e5c6630f466beb142d7\n\nhttps://preview.redd.it/duj8ftoqhooa1.png?width=2884&format=png&auto=webp&v=enabled&s=e68dfe36503125fd951d0b4b8e0f5d922c37865b"}, {"title": "Middle level book to study Python", "score": 128, "id": "11vhrgr", "url": "https://www.reddit.com/r/Python/comments/11vhrgr/middle_level_book_to_study_python/", "comms_num": 29, "created": 1679221677.0, "body": "Is there any middle level book I can use once I know all the basics data types, functions, classes etc in order to level up the language? Thanks!"}, {"title": "\ud83d\udd22\ud83d\udc0d NumPy 1.24.0 Release: Improved Data Handling, Execution Speed, and Documentation", "score": 0, "id": "11vfk2m", "url": "https://tomaszs2.medium.com/numpy-1-24-0-release-improved-data-handling-execution-speed-and-documentation-55a60ec9db97?_branch_match_id=971518311247850597&_branch_referrer=H4sIAAAAAAAAA8soKSkottLXz8nMy9bLTU3JLM3VS87P1U8Lz3U3yo80zqhMAgD15jgjIwAAAA%3D%3D", "comms_num": 1, "created": 1679214228.0, "body": ""}, {"title": "Python Fullstack developer", "score": 0, "id": "11vebq2", "url": "https://www.reddit.com/r/Python/comments/11vebq2/python_fullstack_developer/", "comms_num": 8, "created": 1679209923.0, "body": "Hii guys,\n\nI have 3 years of Python Fullstack developer experience and till now I am working at same company and now I want to Switch, so now I want some suggestions  where i can find the best jobs relevant to my skills .\n\nThanks"}, {"title": "Simplify a polyline or polygon with Visvalingham-Whyatt or Douglas-Peucker", "score": 1, "id": "11v89pg", "url": "https://www.reddit.com/r/Python/comments/11v89pg/simplify_a_polyline_or_polygon_with/", "comms_num": 4, "created": 1679191782.0, "body": "[https://pypi.org/project/simplify-polyline/](https://pypi.org/project/simplify-polyline/)\n\n# simplify_polyline\n\nSimplify an open or closed polyline.\n\n## Two functions:\n\nVisvalingham-Whyatt removes the smallest triangles formed by three consecutive points\nin a polyline or polygon. The big advantage for my purposes is that the starting\npoint on a polygon will not affect the result. The big disadvantage is that tall,\nthin spikes are removed along with short, thin triangles. So the smoothed polygon or\npolyline may not fit in anything close to the convex hull of the input.\n\nuse the Visvalingham-Whyatt algorithm with `vs_simplify`\n\nDouglas-Peucker gives a better representation of the convex hull. The big\ndisadvantage with Douglas-Peucker is that the starting point on a polygon will affect\nthe result. I've addressed this in the slow, but ideal (for my purposes) `simplify`\nfunction.\n\nuse the Douglas-Peucker algoritm with `simplify`\n\nThis will usually be the better choice.\n\n## arguments\n\n\n**verts** vertices along polyline. Anything that can be cast into a '*, 2'\n    array.\n\n(`simplify`) **min_dist** minimum height above a line segment for a point to be\nincluded.\n\n(`vw_simplify`) **min_area** minimum area of a triangle for a point to be\nincluded.\n\n**is_closed** optionally specify whether verts describe a polyline or polygon.\nIf not specified, is_closed is inferred from verts[0] == verts[-1]. The form of\nthe input (last vert == first vert) will be replicated in the output.\n\nIf verts is (a, b, c, d, a), return value will be (a, ..., a)\n\nIf verts is (a, b, c, d), and is_closed is True, return value will be (a, ..., d)\n\nSo, there are two ways to deal with closed polygons:\n\n* close by repeating first point at the end. Return value will keep this format\n\n* close by specifying `is_closed`. Return value will not repeat last point\n\n## install\n\n~~~\npip install simplify_polyline\n~~~"}, {"title": "Sunday Daily Thread: What's everyone working on this week?", "score": 4, "id": "11v57uj", "url": "https://www.reddit.com/r/Python/comments/11v57uj/sunday_daily_thread_whats_everyone_working_on/", "comms_num": 16, "created": 1679184009.0, "body": "Tell /r/python what you're working on this week! You can be bragging, grousing, sharing your passion, or explaining your pain. Talk about your current project or your pet project; whatever you want to share."}, {"title": "Building And Distributing A macOS Application Written in Python", "score": 53, "id": "11v37cr", "url": "https://blog.glyph.im/2023/03/py-mac-app-for-real.html", "comms_num": 1, "created": 1679179211.0, "body": ""}, {"title": "Simple Transformer based Optical Music Recognition", "score": 5, "id": "11v36lv", "url": "https://www.reddit.com/r/Python/comments/11v36lv/simple_transformer_based_optical_music_recognition/", "comms_num": 0, "created": 1679179165.0, "body": "A simple transformer based optical music recognition for a robotics project.\n\nThe PyTorch model is trained to recognize a small sequences of notes in different environments (e.g. [https://huggingface.co/Flova/omr\\_transformer/resolve/main/sample1.png](https://huggingface.co/Flova/omr_transformer/resolve/main/sample1.png)). The notation is quite simple at the moment, but we plan on  expanding our dataset to recognize more complex notation with chords  etc.. We view the OMR problem as a NLP like task, as we predict the  LilyPond notation directly.\n\n&#x200B;\n\nDemo and Model: [https://huggingface.co/Flova/omr\\_transformer](https://huggingface.co/Flova/omr_transformer)"}, {"title": "FastAPI 0.95.0 supports and recommends Annotated \ud83d\ude80 [cross-post from r/FastAPI]", "score": 291, "id": "11v0kcb", "url": "https://www.reddit.com/r/Python/comments/11v0kcb/fastapi_0950_supports_and_recommends_annotated/", "comms_num": 21, "created": 1679173227.0, "body": "This is probably the biggest FastAPI feature in several months, I thought it was worth sharing it. \ud83e\udd13\n\n(Cross-post from [r/FastAPI](https://www.reddit.com/r/FastAPI/comments/11v0j5w/fastapi_0950_supports_and_recommends_annotated/) but I thought this was cool enough to also share it here \ud83d\ude2c).\n\nFastAPI `0.95.0`, just released, adds support for dependencies and parameters using `Annotated` and recommends its usage. \u2728\n\nThis has **several benefits**, one of the main ones is that now the parameters of your functions with `Annotated` would **not be affected** at all.\n\nIf you call those functions in **other places in your code**, the actual **default values** will be kept, your editor will help you notice missing **required arguments**, Python will require you to pass required arguments at **runtime**, you will be able to **use the same functions** for different things and with different libraries (e.g. **Typer** will soon support `Annotated` too, then you could use the same function for an API and a CLI), etc.\n\nBecause `Annotated` is **standard Python**, you still get all the **benefits** from editors and tools, like **autocompletion**, **inline errors**, etc.\n\nOne of the **biggest benefits** is that now you can create `Annotated` dependencies that are then shared by multiple *path operation functions*, this will allow you to **reduce** a lot of **code duplication** in your codebase, while keeping all the support from editors and tools.\n\nFor example, you could have code like this:\n\n    def get_current_user(token: str):\n        # authenticate user\n        return User()\n\n\n    @app.get(\"/items/\")\n    def read_items(user: User = Depends(get_current_user)):\n        ...\n\n\n    @app.post(\"/items/\")\n    def create_item(*, user: User = Depends(get_current_user), item: Item):\n        ...\n\n\n    @app.get(\"/items/{item_id}\")\n    def read_item(*, user: User = Depends(get_current_user), item_id: int):\n        ...\n\n\n    @app.delete(\"/items/{item_id}\")\n    def delete_item(*, user: User = Depends(get_current_user), item_id: int):\n        ...\n\nThere's a bit of code duplication for the dependency:\n\n    user: User = Depends(get_current_user)\n\n...the bigger the codebase, the more noticeable it is.\n\nNow you can create an annotated dependency once, like this:\n\n    CurrentUser = Annotated[User, Depends(get_current_user)]\n\n\nAnd then you can reuse this `Annotated` dependency:\n\n    CurrentUser = Annotated[User, Depends(get_current_user)]\n\n\n    @app.get(\"/items/\")\n    def read_items(user: CurrentUser):\n        ...\n\n\n    @app.post(\"/items/\")\n    def create_item(user: CurrentUser, item: Item):\n        ...\n\n\n    @app.get(\"/items/{item_id}\")\n    def read_item(user: CurrentUser, item_id: int):\n        ...\n\n\n    @app.delete(\"/items/{item_id}\")\n    def delete_item(user: CurrentUser, item_id: int):\n        ...\n\n...and `CurrentUser` has all the typing information as `User`, so your editor will work as expected (autocompletion and everything), and **FastAPI** will be able to understand the dependency defined in `Annotated`. \ud83d\ude0e\n\nRoughly **all the docs** have been rewritten to use `Annotated` as the main way to declare **parameters** and **dependencies**. All the **examples** in the docs now include a version with `Annotated` and a version without it, for each of the specific Python versions (when there are small differences/improvements in more recent versions). There were around 23K new lines added between docs, examples, and tests. \ud83d\ude80\n\nThe key updated docs are:\n\n* Python Types Intro:\n    * [Type Hints with Metadata Annotations](https://fastapi.tiangolo.com/python-types/#type-hints-with-metadata-annotations).\n* Tutorial:\n    * [Query Parameters and String Validations - Additional validation](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#additional-validation)\n        * [Advantages of `Annotated`](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#advantages-of-annotated)\n    * [Path Parameters and Numeric Validations - Order the parameters as you need, tricks](https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/#order-the-parameters-as-you-need-tricks)\n        * [Better with `Annotated`](https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/#better-with-annotated)\n    * [Dependencies - First Steps - Share `Annotated` dependencies](https://fastapi.tiangolo.com/tutorial/dependencies/#share-annotated-dependencies)\n\nSpecial thanks to [@nzig](https://github.com/nzig) for the core implementation and to [@adriangb](https://github.com/adriangb) for the inspiration and idea with [Xpresso](https://github.com/adriangb/xpresso)! \ud83d\ude80\n\nIt took a while to get this done as it involved several days thoroughly reviewing the core PR (impeccable job) and a couple of weeks of full-time, continuous, focused work rewriting the docs, examples, and tests. And now it's finally out! \ud83c\udf89\n\nThis will also probably enable much better third-party integrations that can now export `Annotated` dependencies. \ud83d\ude0e\n\nGo update your FastAPI version and start enjoying using `Annotated`! \ud83d\ude80\n\nCheck more details in the release notes: https://fastapi.tiangolo.com/release-notes/#0950"}, {"title": "Hi r/py I'm working on a Python library for PySimpleGUI to design UIs with a Live Preview, giving a low barrier to entry. I hope you like it!", "score": 161, "id": "11uyzsz", "url": "https://www.reddit.com/r/Python/comments/11uyzsz/hi_rpy_im_working_on_a_python_library_for/", "comms_num": 4, "created": 1679170197.0, "body": "This project is a fork from this users original project: [https://github.com/PriestTheBeast/SimpleGUIBuilder](https://github.com/PriestTheBeast/SimpleGUIBuilder)\n\nMy Repo expanding on the foundation with themes, live previews, and hoping to improve QOL: [https://github.com/samfisherirl/PySimpleGUI-Designer-with-Live-Preview](https://github.com/samfisherirl/PySimpleGUI-Designer-with-Live-Preview)\n\nThroughout my experience with software development, I have come to appreciate the accessibility and ease-of-use that Autohotkey provides, especially for mid to low-level use cases. However, for newcomer to the python programming language, I have found that the Qt framework can be quite intimidating to approach. While not impossible to learn, it can present a steep learning curve for beginners.\n\nSome of the things I really appreciate from my time with AHK:\n\n* GUI-to-EXE can be done within a few clicks with no coding, but provide paths to produce full OOP programs.\n* Simplified automation for mid to low-level use cases.\n* Allows for customization and flexibility through user-defined functions and commands.\n\nIn my pursuit to bridge the gap between visual design and code, I have found PySimpleGUI to be a great model. Its streamlined approach has allowed me to quickly translate visual designs into code, making the learning process much smoother. As a lifelong learner, I'm always eager to share my experiences and help others along the way.\n\nWith this project, I want to provide a relatively smooth UI experience that can allow users to build ready-made GUIs with ease.\n\nThis project is still in its early stages, and I'm excited to see where it goes. Personally, I've had success with pywebview and Eel due to the expansive HTML design tools available. I'm open to any recommendations for libraries or tools that you find helpful for GUI design. Thanks!\n\n&#x200B;\n\n&#x200B;\n\n[https://imgur.com/a/LCf7ln1](https://imgur.com/a/LCf7ln1)\n\n&#x200B;\n\nhttps://i.redd.it/9v7bi000cloa1.gif\n\n&#x200B;"}, {"title": "What is something you wish there was a Python module for?", "score": 136, "id": "11uyyh3", "url": "https://www.reddit.com/r/Python/comments/11uyyh3/what_is_something_you_wish_there_was_a_python/", "comms_num": 141, "created": 1679170113.0, "body": ""}, {"title": "Pygame, ren'py, or python which is best for game making?", "score": 4, "id": "11uxx4u", "url": "https://www.reddit.com/r/Python/comments/11uxx4u/pygame_renpy_or_python_which_is_best_for_game/", "comms_num": 19, "created": 1679168170.0, "body": "So ive never coded or touched a single line of code and i want to know which python engine/software is the best for a beginner who has never coded. feel free to suggest something else if you feel its needed but try to say why it is. Im also not sure where to start, is youtube a good place or are there other free places? ive been wanting to make a game but it seems pretty daunting and im not sure if i should do it. i like doing/learning on my own because i have issues.\n\nAnyway, *so, Pygame, ren'py, or python which is best for game making?*"}, {"title": "Making an ASGI Micro Framework", "score": 1, "id": "11uxl2i", "url": "https://www.reddit.com/r/Python/comments/11uxl2i/making_an_asgi_micro_framework/", "comms_num": 0, "created": 1679167608.0, "body": " \n\nHello guys , I working on an ASGI framework for fun, for now I make url matching and middleware supporting\n\nthe ASGI app is in the [app](https://app.py/) / AsgiApplication class\n\nI need to know how to make sub apps (Blueprintes in Flask )\n\n[Source code](https://github.com/t-el/AsgiFrame)"}, {"title": "How to write long integers EASILY!", "score": 0, "id": "11uv8sv", "url": "https://youtube.com/shorts/n2kg0FpNHTc?feature=share", "comms_num": 3, "created": 1679162496.0, "body": ""}, {"title": "Workshop: Algorithmic Trading", "score": 13, "id": "11uur4a", "url": "https://www.reddit.com/r/Python/comments/11uur4a/workshop_algorithmic_trading/", "comms_num": 2, "created": 1679161345.0, "body": "I\u2019m organizing a workshop next Tuesday on \u201cAlgorithmic Trading with Python\u201d and I thought it would be worth posting it here. Here\u2019s the link with more information:\n\nhttps://profitview.net/events/algorithmic-trading-with-python\n\nApologies in advance to the moderators (I have messaged them!): if you feel that it\u2019s not worth sharing here or not the place - happy for it to be taken down. \n\nLet me know if you have any questions / comments, glad to answer them here.\n\nCheers"}, {"title": "\ud83e\udd84 uniswap-universal-router-decoder \u2728 v0.8.0 \u2728 has just been released !!", "score": 0, "id": "11ut8rs", "url": "https://www.reddit.com/r/Python/comments/11ut8rs/uniswapuniversalrouterdecoder_v080_has_just_been/", "comms_num": 0, "created": 1679157819.0, "body": "&#x200B;\n\n[Uniswap Universal Router Codec](https://preview.redd.it/wl0740v0yioa1.jpg?width=512&format=pjpg&auto=webp&v=enabled&s=1d9f1157dbb7d5aeef58c0a7553d0739f5f61a9d)\n\nv0.8.0 is a major upgrade for this open source \ud83d\udc0d **Python \ud83d\udc0d coder and encoder** for the **Uniswap \ud83e\udd84 universal router.** It allows now to chain all supported functions in a single transaction! \ud83d\udd25\ud83d\udd25\ud83d\udd25\n\nSo for example, you can wrap #eth ***and*** use the #weth to buy tokens on a v2 ***and*** on a v3 pool, at the same time, in one transaction.\n\nSource on [GitHub](https://github.com/Elnaril/uniswap-universal-router-decoder)\n\nPackaged on [PyPI](https://pypi.org/project/uniswap-universal-router-decoder/)\n\nSome supported functions are (but not limited to): V2\\_SWAP\\_EXACT\\_IN, V3\\_SWAP\\_EXACT\\_IN, PERMIT2\\_PERMIT ...\n\nMore functions will be supported soon!"}, {"title": "Python and SLSA \ud83d\udc83", "score": 0, "id": "11uqwqf", "url": "https://sethmlarson.dev/python-and-slsa", "comms_num": 0, "created": 1679152121.0, "body": ""}, {"title": "Alternative to Pygments", "score": 8, "id": "11upnql", "url": "https://www.reddit.com/r/Python/comments/11upnql/alternative_to_pygments/", "comms_num": 17, "created": 1679148972.0, "body": "Can anyone name an alternative package to pygments to generated HTML for highlighted code blocks?"}, {"title": "Remove typing/stubs packages in production", "score": 25, "id": "11uljz7", "url": "https://www.reddit.com/r/Python/comments/11uljz7/remove_typingstubs_packages_in_production/", "comms_num": 27, "created": 1679138217.0, "body": "Imagine I have to deploy a package that's size restricted. I want to ignore typing packages at runtime, but I do not want to encounter `ModuleNotFound` exceptions.\n\nWhat's the best way to accomplish this?\n\nI know that we could do something like this:\n\n    from typing import TYPE_CHECKING\n     \n    if TYPE_CHECKING:\n        from package.module import SomeType\n     \n    def do_stuff(data: \"SomeType\") -> None:\n        ...\n\nIs this the best way?"}, {"title": "Introducing DataFrame QuickView: A Python package for easy DataFrame visualization, co-created with GPT-4! Seeking contributors \ud83d\ude80", "score": 0, "id": "11uj8hh", "url": "https://www.reddit.com/r/Python/comments/11uj8hh/introducing_dataframe_quickview_a_python_package/", "comms_num": 2, "created": 1679131227.0, "body": "Hi, r/python! I'm u/gittb, and I'd like to share a project I've been working on called **DataFrame QuickView**. This package extends pandas DataFrame functionality to easily display and visualize DataFrames in a web-based environment, built using Flask. The catch? It's an experiment in paired programming with GPT-4, and I'm looking for contributors who want to join this exciting project!\n\n\ud83c\udf1f **Quick Overview of DataFrame QuickView:**\n\n* Extend pandas DataFrame with quickview()method\n* Display paginated DataFrame in a web browser\n* Create an interactive dropdown and button combination populated with DataFrame columns\n* Generate histograms based on the selected column when the button is pressed\n\n\ud83c\udfaf **Goal of the project:**\n\nThe primary goal is to expand the project with code written by Language Models (LLMs) like GPT-4. All contributions should be co-written primarily by LLMs to maintain the experimental nature of this project.\n\n\ud83d\udca1 **Potential additional functionality:**\n\n* More visualization types (bar charts, scatter plots, pie charts, etc.)\n* Filtering and sorting capabilities for DataFrames\n* Exporting visualizations as images or other formats\n* Adding support for multiple DataFrames\n\n\ud83d\udd0d **How to get involved:**\n\nIf you're interested in participating, check out the project on [GitHub](https://github.com/gittb/dataframe-quickview) and feel free to submit pull requests or open issues with your ideas. Remember that the code must be co-written primarily by LLMs for contribution acceptance.\n\nThanks for taking the time to read this post, and I'm looking forward to seeing what we can build together with the help of LLMs! Let's push the boundaries of AI-powered coding! \ud83d\ude80\n\nHappy coding! \ud83d\ude04 u/gittb\n\nEdit, forgot to include pypi link\n\n[https://pypi.org/project/dataframe-quickview/](https://pypi.org/project/dataframe-quickview/)\n\n&#x200B;"}, {"title": "Personal Project - JDR Tool Introduction", "score": 17, "id": "11ui2v4", "url": "https://www.reddit.com/r/Python/comments/11ui2v4/personal_project_jdr_tool_introduction/", "comms_num": 1, "created": 1679126755.0, "body": "I recently started learning Python, so I tried to write this project as  an exercise. The idea of the concept is derived from the solution to the  difficulties encountered when helping the Ministry of Finance to  develop the system. Share it here.\n\n&#x200B;\n\n![img](k5nt455yggoa1 \"Figure 1. Appearance of JDR tool\n\")\n\n&#x200B;\n\n![gif](ns56h4y0hgoa1 \"Figure 2. Using JDR tools to execute and manage programs\n\")\n\n## Link\n\n* Source code: [https://github.com/Chen-Alfred/JDR](https://github.com/Chen-Alfred/JDR)\n* Execution file: [https://github.com/Chen-Alfred/JDR/tree/main/dist](https://github.com/Chen-Alfred/JDR/tree/main/dist)\n* Documentation (English): [https://hackmd.io/xsLDRVAMTF2gO0YHo3lxYw](https://hackmd.io/xsLDRVAMTF2gO0YHo3lxYw)\n\n## Motivation\n\nJDR (Job Dependency Runner) is a set of small data governance tools developed by this project. In short, it is a set of \"programs used to assist in the execution and management of programs\".\n\nAt work, the action of \"executing a program\" is not particularly difficult in most cases. Usually, you edit the command first, then throw it into the shell, or an interface/platform, and then wait for the result to come out. Will use tools like crontab to pre-schedule.\n\nWith this method, if the scale is only one or two to a dozen programs, there may be no problem, but if there are hundreds or thousands of programs, it will be difficult to manage. The reason lies in the management issues derived from \"quantity\" and \"dependency\"\n\nThese management issues include: \"What is the current state of the program?\", \"What is the sequence of program execution?\", \"If a certain program needs to be re-run, will it affect which downstream related programs?\" When the number of programs is larger, it is less likely to be managed by the engineer's memory. Even if the records are assisted by files, maintenance and searching will take time and cost.\n\nAnd because data analysis has become more and more important in recent years, the data governance issue of \"whether the program is executed correctly and on time\" has also been paid more and more attention. In order to solve these issues, I hope to implement a set of tools in this project, so that some management issues can be automated, dashboarded, and the results are presented in a visual way.\n\nMaybe this project will overlap with some ETL tools (such as: SSIS, Trinity, DataStage, Automation) in function, because ETL tools also have the function of executing and managing programs, but because I haven't found a tool that can meet the needs , so that's another reason why I decided I wanted to develop my own.\n\nI hope that users only need to maintain a work list (Excel format), and then after inputting the list into this tool, a graphical program dependency flow chart can be automatically generated. The graphical program dependency flowchart is a kind of DAG (Directed Acyclic Graph). After having a graph, many issues arise about how to operate it. I try to simplify these operations as much as possible, so that these operations and management behaviors can be easily performed only by making a setting on the graphical interface, pressing a button, and viewing a report.\n\nEveryone is welcome to use this set of tools, but the design of the tools is based on my personal previous development experience and my own imagination, so if someone thinks that it is not easy to use, inconvenient, or not flexible enough, please feel free to feed these questions back to me, so that I can use them as a reference for improvement."}, {"title": "Making a script that checks Twitch chat emote usage, channel has 828 emotes, VOD has 41,033 lines of chat. was blown away by how fast it took to run. 93ms.", "score": 3, "id": "11uhi51", "url": "https://www.reddit.com/r/Python/comments/11uhi51/making_a_script_that_checks_twitch_chat_emote/", "comms_num": 3, "created": 1679124638.0, "body": "https://i.imgur.com/D88KQfa.png\n\n\ud83e\udd2f"}, {"title": "Python 3.11 is much faster , but is it good for competitive programming?", "score": 0, "id": "11ufqkw", "url": "https://www.reddit.com/r/Python/comments/11ufqkw/python_311_is_much_faster_but_is_it_good_for/", "comms_num": 11, "created": 1679118337.0, "body": ""}, {"title": "New to Python. Is this an inconsistency of the 'round()' function?", "score": 30, "id": "11ud58f", "url": "https://www.reddit.com/r/Python/comments/11ud58f/new_to_python_is_this_an_inconsistency_of_the/", "comms_num": 38, "created": 1679110078.0, "body": "I understand that the built-in `round()` function uses the \"round half to even\" strategy. However, I noticed that this isn't applied when rounding to a certain number of decimal places.\n\nHere's an example:\n\n`round(38.5)` returns `38`, the closest even number. But if I do `round(3.85, 1)` it returns `3.9`, 9 not being the closest even number. Is there a reason as to why the \"round half to even\" strategy is only applied to integers and not floats? Or is this just an overlooked inconsistency? (This might be a really obvious math thing and I'm just dumb, but I'm asking because I wanna understand these intricacies)\n\nThanks!\n\nEDIT: I want to give everyone a genuine thank you for all the detailed explanations, links and examples to help me understand this properly. This sub seems incredibly friendly, thank you all for taking time out of your day to write out these amazing comments!"}, {"title": "I made a tic tac toe game with 98 lines of code. Is this good for a beginner?", "score": 33, "id": "11u9868", "url": "https://www.reddit.com/r/Python/comments/11u9868/i_made_a_tic_tac_toe_game_with_98_lines_of_code/", "comms_num": 72, "created": 1679099376.0, "body": "[https://github.com/DJToners/TicTacToe2.git](https://github.com/DJToners/TicTacToe2.git)"}, {"title": "Saturday Daily Thread: Resource Request and Sharing! Daily Thread", "score": 6, "id": "11u8hmv", "url": "https://www.reddit.com/r/Python/comments/11u8hmv/saturday_daily_thread_resource_request_and/", "comms_num": 3, "created": 1679097620.0, "body": "Found a neat resource related to Python over the past week? Looking for a resource to explain a certain topic?\n\nUse this thread to chat about and share Python resources!"}, {"title": "How to speed up bulkinsert in python?", "score": 4, "id": "11u7hwo", "url": "https://www.reddit.com/r/Python/comments/11u7hwo/how_to_speed_up_bulkinsert_in_python/", "comms_num": 9, "created": 1679095299.0, "body": "pypyodbc executemany method takes **70 seconds t**o insert 1000 records in the SQL server table. How can i speed up this bulkinsert query?\n\nimport pypyodbc as odbc\n\nconn\\_str = ( ...)\n\nconn1 = odbc.connect(conn\\_str)\n\nrecords =df. values.tolist()\n\nsql\\_insert = ''' insert into dbo.bulkinsert\\_tb values (?,?,?,?) '''\n\ncursor = conn1.cursor()\n\ncursor.fast\\_executemany = True\n\ncursor.executemany(sqlinsert,records)\n\ncursor.commit"}, {"title": "QNX Demodisk Utilities", "score": 6, "id": "11u5zng", "url": "https://www.reddit.com/r/Python/comments/11u5zng/qnx_demodisk_utilities/", "comms_num": 4, "created": 1679092048.0, "body": "[https://github.com/audiophyl/qnxdemotools](https://github.com/audiophyl/qnxdemotools)\n\nThis is a set of utilities for altering the contents of the QNX Demodisk of the late 90s. This is the first time I've shared a significant personal code base, and I'm pushing through my anxiety about negative feedback. I'm at a point where I'm telling myself \"eff it, all feedback is good feedback if you can use it to grow.\"\n\nThere's a lot more information within the README.md.\n\nI've been working on this on and off for several months, and now have functionality to a point which I like. It's a long shot that anyone would find this set of utilities useful in any way, but it's been quite fun for me to develop, and a wonderful learning experience as well."}, {"title": "What are some projects on GitHub you support either through contribution or sponsorship?", "score": 15, "id": "11u5v9v", "url": "https://www.reddit.com/r/Python/comments/11u5v9v/what_are_some_projects_on_github_you_support/", "comms_num": 4, "created": 1679091776.0, "body": "Hey all, I'm Chris, the developer community manager at New Relic. I'm trying to learn more about what interests developers in our community, and one thing I'm curious about is how devs choose projects to support on GitHub. What are some examples of projects you either contribute to or sponsor, for whatever reason -- either they improve your QoL as a dev, or they're humanitarian projects for the betterment of humankind. Thanks for your insights!"}, {"title": "Meta Pseudo Labels (MPL) Algorithm", "score": 2, "id": "11u3hqg", "url": "https://www.ai-contentlab.com/2023/03/meta-pseudo-labels-mpl-algorithm.html?m=1", "comms_num": 0, "created": 1679086535.0, "body": ""}, {"title": "Speed | When has it been an issue for you?", "score": 0, "id": "11u0gp7", "url": "https://www.reddit.com/r/Python/comments/11u0gp7/speed_when_has_it_been_an_issue_for_you/", "comms_num": 15, "created": 1679079931.0, "body": "Everyone is always raving about how python is slow, but I have a feeling that as hardware gets better, this will mean less over time.\n\nDoes anyone have an example of when speed made you choose a different language?"}, {"title": "Controversial opinion: stop importing single-use symbols in global scope", "score": 0, "id": "11tyoes", "url": "https://www.reddit.com/r/Python/comments/11tyoes/controversial_opinion_stop_importing_singleuse/", "comms_num": 35, "created": 1679076167.0, "body": "Everybody hates global scope, yet for some reason, imports are always conventionally done in global scope. If you use an external function/class in a single scope only, why not just import it in there and clean up your global namespace?\n\nI have a feeling this is a holdover habit from langs like C where #include dumps a ton of code into your file, rather than just specifically what you need. It makes more sense in C since C doesn\u2019t really have a notion of import/export. (Rather, the linker sort of treats every symbol as \u201cglobal\u201d. But that doesn\u2019t matter much here)\n\nBut python is pretty good with imports. Why is this still common convention? \n\nAn argument may be: \u201cit helps me see this file\u2019s dependencies.\u201d This is simply not true. If you need to see where a function call came from, use go to definition rather than manually searching for the import line. Or Ctrl+F \u201cimport\u201d. There\u2019s no real good reason to put imports in global scope/at the top *unless* you\u2019re using the import in multiple places within the file."}, {"title": "I wrote a program that calculates the difference between two files", "score": 9, "id": "11twxa5", "url": "https://www.reddit.com/r/Python/comments/11twxa5/i_wrote_a_program_that_calculates_the_difference/", "comms_num": 6, "created": 1679072518.0, "body": "For some unknown reason, I am unable to use `fc` (file compare) command on Windows, so like a true programmer, instead of spending couple minutes troubleshooting it, I spent hours writing my own version of the program.\n\nYou can check it out at: [https://github.com/Ach113/dif](https://github.com/Ach113/dif)\n\nAny feedback would be appreciated."}, {"title": "Another episode of the office-racer (Python, websockets,...)", "score": 3, "id": "11tt2gm", "url": "https://www.reddit.com/r/Python/comments/11tt2gm/another_episode_of_the_officeracer_python/", "comms_num": 4, "created": 1679064230.0, "body": "I'm streaming at arconsis today.  \nIt is about a little RC Car for our office.  \n\\- Websockets  \n\\- Python  \n\\- PiCamera  \n[https://www.twitch.tv/arconsis](https://www.twitch.tv/arconsis)  \n\n\nJoin us if you are interested in WebSockets and IoT."}, {"title": "Pandas 2.0 RC1 has been published. Have you tried it? What do you think?", "score": 21, "id": "11ts7rv", "url": "https://www.reddit.com/r/Python/comments/11ts7rv/pandas_20_rc1_has_been_published_have_you_tried/", "comms_num": 15, "created": 1679062303.0, "body": "I did a [TPC-H](https://www.tpc.org/tpch/) benchmark at scale factor 1 (\\~ 1GB) on 2.0.0 RC0 and the results were not as expected. The numbers are running time in seconds. Lower means better.\n\nSince the [main features](https://pandas.pydata.org/docs/dev/whatsnew/v2.0.0.html) of 2.0.0 are lazy copy and pyarrow dtype backend, I tried all the combinations:\n\n[Benchmarks on 2.0.0 RC0](https://preview.redd.it/upn6olo94boa1.png?width=1416&format=png&auto=webp&v=enabled&s=c5eb8092b50407a1eae6243eeee4ac969aedf59b)\n\nIf the image above doesn't work for you, please see the [gist](https://gist.github.com/UranusSeven/55817bf0f304cc24f5eb63b2f1c3e2cd). For the benchmarking script and dataset, please see this [repo](https://github.com/UranusSeven/experiments).\n\n**Now RC1 has been released, have you guys tried it?**\n\n&#x200B;"}, {"title": "Pip Upgrade \u2013 And How to Update Pip and Python", "score": 0, "id": "11ts388", "url": "https://skymagzines.com/pip-upgrade-and-how-to-update-pip-and-python/", "comms_num": 0, "created": 1679062008.0, "body": ""}, {"title": "Why use classes?", "score": 790, "id": "11ts1qq", "url": "https://www.reddit.com/r/Python/comments/11ts1qq/why_use_classes/", "comms_num": 141, "created": 1679061912.0, "body": "*I originally wrote this piece as an answer to a question on the* [*learnpython reddit*](https://www.reddit.com/r/learnpython/comments/11sebbg/been_using_python_for_3_years_never_used_a_class/?utm_source=share&utm_medium=web2x&context=3)*, and it was suggested that it would be a useful learning resource for many people who struggle with* ***why*** *we use classes rather than just variables and functions.  So here it is:*\n\n# Why use classes?\n\n**My \"Ah ha!\" moment for understanding classes was understanding that a** ***class*** **creates** ***objects*** **and defines the** ***type*** **of** ***object.***\n\nTime for an example:\n\nSay that we're writing a game, and we need to define certain things about the player:\n\n    player_name = \"James\"\n    player_level = \"novice\"\n\nWe also need to keep track of the player's score:\n\n    player_score = 0\n\nWe may also need to save each of the player's moves:\n\n    player_moves = [move1, move2, move3]\n\nand now we need to be able to increase the player's score when they win some points, and to add their last move to their list of moves. We can do this with a function:\n\n    def win_points (points, move):\n        player_score += points\n        player_moves.append(move)\n\n&#x200B;\n\nThat's all fine so far. We have some global variables to hold the player's data, and a function to handle the results of a win, and all without writing any classes.\n\nNow say that we need to add another player. We will need to repeat all of the above but with unique identities so that we can distinguish player\\_1 from player\\_2:\n\n    player1_name = \"<name>\"\n    player1_level = \"novice\"\n    player1_score = 0\n    player1_moves = [move1, move2, move3]\n    \n    player2_name = \"<name>\"\n    player2_level = \"novice\"\n    player2_score = 0\n    player2_moves = [move1, move2, move3]\n    \n    def win_points (player_name, points, move):\n        if player_name == player1_name:\n            player1_score += points\n            player1_moves.append(move)\n        else:\n            player2_score += points\n            playe2_moves.append(move)\n\nStill not too bad, but what if we have 4 players, or 10, or more?\n\nIt would be better if we could make some kind of generic \"player\" data structure that can be reused for as many players as we need. Fortunately we can do that in Python:\n\nWe can write a kind of \"template\" / \"blueprint\" to define all of the attributes of a generic player and define each of the functions that are relevant to a player. This \"template\" is called a \"Class\", and the class's functions are called \"methods\".\n\n    class Player():\n        def __init__(self, name):\n            \"\"\"Initialise the player's attributes.\"\"\"\n            self.name = name\n            self.level = 'novice'\n            self.score = 0\n            self.moves = []\n    \n        def win_points(self, points, move):\n            \"\"\"Update player on winning points.\"\"\"\n            self.score += points\n            self.moves.append(move)\n\nNow we can create as many players (\"player objects\") as we like as *instances* of the *Player class*.\n\nTo create a new player (a \"player object\") we need to supply the Player class with a name for the player (because the initialisation function \\_\\_init\\_\\_() has an argument \"name\" which must be supplied). So we can create multiple *Player* objects like this:\n\n    player1 = Player('James')\n    player2 = Player('Joe')\n    player3 = Player('Fred')\n\nDon't overthink the `self` arguments. The self argument just means \"the specific class object that we are working with\". For example, if we are referring to *player1*, then self means \"the player1 object\".\n\nTo run the `Player.win_points()` method (the `win_points()` function in the class `Player`) for, say player3:\n\n    player3.win_points(4, (0, 1)) # Fred wins 4 points, move is tuple (0, 1)\n\nand we can access Fred's other attributes, such as Fred's player's name, or  last move, from the Player object:\n\n    print(player3.name)  # prints \"Fred\"\n    # Get Fred's last move\n    try:\n        last_move = player3.moves[-1]\n    except IndexError:\n        print('No moves made.')\n\nUsing a Class allows us to create as many \"Player\" type objects as we like, without having to duplicate loads of code.\n\nFinally, if we look at the type of any of the players,  we see that they are instances of the class \"Player\":\n\n    print(type(player1))  # prints \"<class '__main__.Player'>\"\n\nI hope you found this  post useful."}, {"title": "Know How to Create and Visualize a Decision Tree with Python", "score": 1, "id": "11tryqg", "url": "https://www.dasca.org/world-of-big-data/article/know-how-to-create-and-visualize-a-decision-tree-with-python", "comms_num": 0, "created": 1679061715.0, "body": ""}, {"title": "An Instruct Version Of GPT-J Using Stanford Alpaca's Dataset", "score": 2, "id": "11tqu9t", "url": "https://www.reddit.com/r/Python/comments/11tqu9t/an_instruct_version_of_gptj_using_stanford/", "comms_num": 2, "created": 1679059012.0, "body": "I  just released an instruct version of GPT-J using Stanford Alpaca's dataset. The result of this experiment is very cool and confirms that,  when fine-tuned on the right data, GPT-J is a very powerful AI model! You can download the model from the HuggingFace hub: [https://huggingface.co/nlpcloud/instruct-gpt-j-fp16](https://huggingface.co/nlpcloud/instruct-gpt-j-fp16)\n\nHere is a Python example:\n\n`from transformers import pipeline import torch`\n\n`generator = pipeline(model=\"nlpcloud/instruct-gpt-j-fp16\", torch_dtype=torch.float16, device=0)`\n\n`prompt = \"Correct spelling and grammar from the following text.\\nI do not wan to go\\n\" print(generator(prompt))`\n\nMore details about this experiment here: [https://nlpcloud.com/instruct-version-of-gpt-j-using-stanford-alpaca-dataset.html](https://nlpcloud.com/instruct-version-of-gpt-j-using-stanford-alpaca-dataset.html?utm_source=reddit&utm_campaign=owu8d596-3816-11ed-a261-0242ac140007)\n\nI hope it will be useful! Please don't hesitate to share some feedbacks!\n\nJulien"}, {"title": "ML models for User Recognition using Keystroke Dynamics", "score": 70, "id": "11tpor9", "url": "https://www.reddit.com/r/Python/comments/11tpor9/ml_models_for_user_recognition_using_keystroke/", "comms_num": 3, "created": 1679056141.0, "body": "The keystroke dynamics that are used in this article\u2019s machine learning models for user recognition are behavioral biometrics. Keystroke dynamics uses the distinctive way that each person types to confirm their identity. This is accomplished by analyzing the **2 keystroke events** on Key-Press and Key-Release \u2014 that make up a keystroke on computer keyboards to extract typing patterns. *The article will examine how these patterns can be applied to create 3 precise machine learning models for user recognition.*\n\n&#x200B;\n\nhttps://preview.redd.it/rv2a4okbmaoa1.png?width=645&format=png&auto=webp&v=enabled&s=983865d15bb83d5c94b43a5940617117f972a89d\n\nThe goal of this article will be split in two parts, ***building and training*** 3 Machine Learning models (1. **SVM** 2. **Random** **Forest** 3. **XGBoost**) and ***deploying the model*** in a real live single point API capable of predicting the user based on 5 input parameters: the ML model and 4 keystroke times.\n\n[https://medium.com/@tudorache.a.bogdan/ml-models-for-user-recognition-using-keystroke-dynamics-e0665bc18cad](https://medium.com/@tudorache.a.bogdan/ml-models-for-user-recognition-using-keystroke-dynamics-e0665bc18cad)"}, {"title": "Mercury \u2013 Turn Python Notebooks to Web Apps", "score": 124, "id": "11tp5fa", "url": "https://www.reddit.com/r/Python/comments/11tp5fa/mercury_turn_python_notebooks_to_web_apps/", "comms_num": 24, "created": 1679054663.0, "body": "Hi! \n\nWe're Piotr and Aleksandra, founders of Mercury (https://RunMercury.com), an open-source framework for converting Jupyter Notebooks to Web Apps. You can turn the Python notebook into an interactive web app, static website, presentation, report, or dashboard and share it online with non-technical users. You can self-host Mercury or use our hosting service (coming soon!).\n\n\nOur GitHub: https://github.com/mljar/mercury\n\n\nSharing Python notebooks is challenging. You can't send notebooks directly to non-technical stakeholders. You need to copy-paste results/charts into Word/PowerPoint or rewrite the notebook to a web framework. Mercury converts a notebook to a web app. Users can execute cells but can't edit them.\n\n\nMercury offers a set of widgets that can be added to the notebook. When serving notebook with Mercury, widget change triggers automatic re-execution of cells. Not all cells are re-executed, only cells with widget definition and below, so you can cache results from previous cells execution (loading large dataset or model).\n\n\nMercury comes with handy features to make sharing easy:\n\n- decide to hide or show the notebook's code,\n\n- add authentication to notebooks so only selected users can view them,\n\n- export final notebook to PDF or HTML file,\n\n- all to create output files in a notebook, and make them downloadable,\n\n- share multiple notebooks on one Site.\n\n\n\nHow does Mercury differ from existing solutions?\n\n- it was designed for notebooks, it offers simple re-execution of cells after widget update,\n\n- it has built-in authentication.\n\n\nMercury is available on AGPLv3. We would like to offer a hosting service to make deployment very easy (just upload a notebook to have a website). We offer commercial license for companies looking for private forks and dedicated support.\n\nWe'd love to hear feedback on the framework!"}, {"title": "Theine 0.3.3 released, introducing new Clock-Pro eviction policy", "score": 3, "id": "11tn6iu", "url": "https://www.reddit.com/r/Python/comments/11tn6iu/theine_033_released_introducing_new_clockpro/", "comms_num": 14, "created": 1679048713.0, "body": "Theine: high performance in-memory cache\n\n[https://github.com/Yiling-J/theine](https://github.com/Yiling-J/theine)\n\nTheine 0.3.3 add a new eviction policy called Clock-Pro, which has better hit ratio than LRU in most cases and outperform W-TinyLFU in some benchmarks.\n\n[Clock-Pro](https://static.usenix.org/event/usenix05/tech/general/full_papers/jiang/jiang_html/html.html): An improved CLOCK replacement policy (CLOCK: an approximation of LRU).\n\n**10k requests benchmark**\n\nPython: 3.11 / OS: Ubuntu 22.04.2 LTS\n\nWrite and Mix Zipf use 1k max cache size, so you can see the high cost of traditional LFU eviction policy here.\n\n||Read|Write|Mix Zipf|\n|:-|:-|:-|:-|\n|Theine(Clock-Pro) API|3.07 ms|9.86 ms||\n|Theine(W-TinyLFU) API|3.42 ms|10.14 ms||\n|Theine(W-TinyLFU) Auto-Key Decorator|7.17 ms|18.41 ms|13.18 ms|\n|Theine(W-TinyLFU) Custom-Key Decorator|6.45 ms|17.67 ms|11.50 ms|\n|Cachetools LFU Decorator|15.70 ms|627.10 ms|191.04 ms|\n|Cacheout LFU Decorator|50.05 ms|704.70 ms|250.95 ms|\n|Theine(LRU) Custom-Key Decorator|5.70 ms|16.04 ms|10.91 ms|\n|Cachetools LRU Decorator|14.05 ms|61.06 ms|36.89 ms|\n|Cacheout LRU Decorator|47.90 ms|94.94 ms|68.25 ms|\n\nSee github README for hit ratio benchmarks."}, {"title": "Easy Python Benchmarking Tool - PyBench", "score": 2, "id": "11tn5d5", "url": "https://www.reddit.com/r/Python/comments/11tn5d5/easy_python_benchmarking_tool_pybench/", "comms_num": 0, "created": 1679048611.0, "body": "Looking for an easy and efficient way to compare computers/servers for Python hosting or different versions of Python? Look no further than PyBench!\n\nPyBench is a Python benchmarking tool that generates a random image, a graph, and Pi to measure the computing speed of your computer, giving you a score to compare with other computers or servers.\n\nAnd for those who own Numworks calculators, PyBench has a version that's compatible and provides equal scores as other versions, despite having fewer operations to perform.\n\nSo why not give PyBench a try? It's the perfect tool for anyone who needs to compare computing speeds quickly and efficiently.\n\n[https://github.com/LeLenoch/PyBench](https://github.com/LeLenoch/PyBench)"}, {"title": "A 'No JS' Solution for Dynamic Search in Django", "score": 4, "id": "11tlyqv", "url": "https://fly.io/blog/a-no-js-solution-for-dynamic-search-in-django/", "comms_num": 2, "created": 1679044764.0, "body": ""}, {"title": "Is setting up React with Python difficult?", "score": 11, "id": "11tlnkq", "url": "https://www.reddit.com/r/Python/comments/11tlnkq/is_setting_up_react_with_python_difficult/", "comms_num": 55, "created": 1679043657.0, "body": "Is it difficult to setup React with Python that meets the following requirements:\n\n1. Server Side Rendering\n2. Server Side Generation\n3. Incremental Server Side Generation\n4. Use React as a template with an experience similar to using Jinja templates"}, {"title": "Introducing the Data Wrangler extension for Visual Studio Code Insiders", "score": 85, "id": "11tjbjd", "url": "https://devblogs.microsoft.com/python/data-wrangler-release/", "comms_num": 1, "created": 1679034973.0, "body": ""}, {"title": "README-AI: automated README creation and codebase documentation!", "score": 17, "id": "11ti68c", "url": "https://www.reddit.com/r/Python/comments/11ti68c/readmeai_automated_readme_creation_and_codebase/", "comms_num": 1, "created": 1679031063.0, "body": "Hey all,\n\nWanted to share a Python project I'm building with called [README-AI](https://github.com/eli64s/README-AI). The project aims to automate README Markdown creation and generate codebase documentation, leveraging OpenAI's language model APIs.\n\nThe project can be found using the link below:  \n[**https://github.com/eli64s/README-AI**](https://github.com/eli64s/README-AI).\n\nThe text generation is not perfect by any means, but it's been fun to learn and play around with. Would appreciate any feedback or suggestions to improve the codebase and enhance usability for users.\n\nThanks for taking the time to read this post!"}, {"title": "Dad Joke Collector for my Blog", "score": 18, "id": "11tf5xk", "url": "https://www.reddit.com/r/Python/comments/11tf5xk/dad_joke_collector_for_my_blog/", "comms_num": 6, "created": 1679021899.0, "body": "Wrote a dad joke collector for my personal website. It runs on a cron and stores any jokes that have not already been stored into my dadabase based on the creation time of the posts I bookmark/save.  \n   \n[https://krowvin.com/dadjokes](https://krowvin.com/dadjokes)\n\n&#x200B;\n\n[dbapi is a class I wrote using SQLAlchemy to do various things with my homelab database. ](https://preview.redd.it/620fy2g7s7oa1.png?width=793&format=png&auto=webp&v=enabled&s=97f2bed3a24f06c71000fe24bc02568ff341e88e)"}, {"title": "Linked Lists in Python!", "score": 2, "id": "11tbqel", "url": "https://youtu.be/L_E-JLK4asQ", "comms_num": 0, "created": 1679013106.0, "body": ""}, {"title": "How to keep a command prompt window open after subprocess is launched in it and completes", "score": 0, "id": "11talaa", "url": "https://www.reddit.com/r/Python/comments/11talaa/how_to_keep_a_command_prompt_window_open_after/", "comms_num": 3, "created": 1679010679.0, "body": "I could not find the answer to this on reddit, stackoverflow, anywhere. Adding 'pause' to the args in any combination did not work, and there were some VERY advanced explanations that involved tying another Python process to the command window, logging the process instead, etc.\n\n\nAfter some time spent grinding, I found it. I thought I'd save someone else some time.\n\n\nsubprocess.Popen([\"start\", \"cmd\", \"/k\", \"your_external_executable_path_here\", \"your_exe_params_here\"], shell=True]\n\nThis will launch the subprocess in a command prompt and will return to command prompt at the end of execution. It will stay open. So you can actually read what was printed out and not have the window disappear afterwards."}, {"title": "Export geopandas df to .geojson", "score": 1, "id": "11t8ebh", "url": "https://www.reddit.com/r/Python/comments/11t8ebh/export_geopandas_df_to_geojson/", "comms_num": 4, "created": 1679005701.0, "body": "Hey guys,\ncan someone help me with exporting a geopandas dataframe to a .geojson? \n\nEvery example I\u2019ve seen so far didn\u2019t work for me"}, {"title": "Github Action and Pre-commit hooks", "score": 7, "id": "11t597e", "url": "https://www.reddit.com/r/Python/comments/11t597e/github_action_and_precommit_hooks/", "comms_num": 4, "created": 1678998424.0, "body": "I\u2019m curious, how do you use github actions with your projects? What are some cool pipelines that you have set up?"}, {"title": "Codon: Python now superior performance to C++ . Is Python now undisputed > than C++", "score": 0, "id": "11t4p8p", "url": "https://github.com/exaloop/codon", "comms_num": 4, "created": 1678997142.0, "body": ""}, {"title": "authentik on Django: 500% slower to run but 200% faster to build", "score": 4, "id": "11t2u1d", "url": "https://goauthentik.io/blog/2023-03-16-authentik-on-django-500-slower-to-run-but-200-faster-to-build", "comms_num": 6, "created": 1678992827.0, "body": ""}, {"title": "Book recommendation, advanced+ level in Python", "score": 40, "id": "11t29at", "url": "https://www.reddit.com/r/Python/comments/11t29at/book_recommendation_advanced_level_in_python/", "comms_num": 18, "created": 1678991511.0, "body": "Hello,\n\nI'd like to deepen my knowledge of Python. I'd like to make good decisions when writing Python code based on a solid foundation of **how Python works internally**.\n\nI have 7 YOE (but that doesn't tell much about my level), I think Python meta-programming level is something I found hardest to understand so far (because I needed it only 2x so far), hope this helps to better judge my level.\n\nI mostly created **web applications**, I'm not interested in machine learning or data science. My focus should ideally be on high-performant APIs in terms of response times and processing load. I realize for this I mostly have to rely on existing tools and good architecture, but I still feel I should have a deeper knowledge of Python itself.\n\nI'm a big fan of **async Python** so if the book goes in this direction too, I'd be happy.\n\nCan you please recommend a book that would fulfill this goal of mine? :) I'd prefer books written after asyncio started to be widely used.\n\nCourse recommendations are welcomed too, but it seems to me most of those are aimed at beginners.\n\nI appreciate your answers and the time spent answering here.  \n\n\nP.S. So far it seems **High Performance Python** might tick the boxes, but I'm not sure."}, {"title": "Here is how i made a 2D game using Python Matplotlib", "score": 29, "id": "11szlvk", "url": "https://www.reddit.com/r/Python/comments/11szlvk/here_is_how_i_made_a_2d_game_using_python/", "comms_num": 15, "created": 1678985716.0, "body": "Im only few month into learning Python and i was wondering if i could make a game with it. I didnt know about any libraries created specifically for developing games at the time, so i asked an AI if i could somehow make a code that opens and plays GIF animations. AI came up with a function that opens GIFs as matplotlib plots. I added a condition that if 'space' button is pressed, the animation stops and the last frame number is saved into a variable, and then the value of the variable determines what happens next. This whole game is built around this simple algorithm.\n\nshowcase: [https://youtu.be/ZAXlaOWMgfM](https://youtu.be/ZAXlaOWMgfM)\n\nsource code: [https://drive.google.com/drive/folders/1bKV4\\_AdCgnW40A8B1kFkFYryIuTE44A6?usp=share\\_link](https://drive.google.com/drive/folders/1bKV4_AdCgnW40A8B1kFkFYryIuTE44A6?usp=share_link)\n\n[icon](https://preview.redd.it/q6463xvfr4oa1.png?width=640&format=png&auto=webp&v=enabled&s=68ba371480740ee9117b4fd4b68d1ef37554d4f2)\n\n&#x200B;\n\n[QTE](https://preview.redd.it/kzjifyrkr4oa1.png?width=575&format=png&auto=webp&v=enabled&s=3c45f92e81ba39711ea5ff760766e9ddf07e236d)"}, {"title": "The Ruff python linter is insanely good", "score": 799, "id": "11syxd0", "url": "https://www.reddit.com/r/Python/comments/11syxd0/the_ruff_python_linter_is_insanely_good/", "comms_num": 137, "created": 1678984220.0, "body": "I just migrated some of my projects over to using [ruff](https://github.com/charliermarsh/ruff), and I am EXTREMELY impressed. It is quite literally 100 times faster than my previous linting configuration, all while being more organized and powerful. It's mind boggling fast. It has all of the plugins builtin that I was previously using with tools like flake8. It hooks into `pre-commit` and replaces many plugins I had before like:\n\n* `isort` - sorts imports\n* `bandit` - finds common security issues\n* `flake8` - linter; additional benefit is that I can now delete my \\`.flake8\\` file.\n* `pygrep-hooks` - common misc linting\n\nAdditionally, it's completely configurable via pyproject.toml, so that always feels good.\n\nBy the way, if you want to checkout my python template, it has my preferred ruff configuration:[https://github.com/BrianPugh/python-template](https://github.com/BrianPugh/python-template)"}, {"title": "Pandas 2.0 rc1 is released", "score": 29, "id": "11sxzy3", "url": "https://github.com/pandas-dev/pandas/releases/tag/v2.0.0rc1", "comms_num": 0, "created": 1678982167.0, "body": ""}, {"title": "Made a Python package for extracting color palettes from images", "score": 16, "id": "11sxgjp", "url": "https://www.reddit.com/r/Python/comments/11sxgjp/made_a_python_package_for_extracting_color/", "comms_num": 8, "created": 1678980914.0, "body": "So I made a color palette extractor Python package last year which extracts color palettes from images and stores them in JSON files. When I made the package, it was for the Unix-ricing community here on Reddit and I wasn\u2019t aware at that time that similar packages were already available or did something similar.\n\nAnyways, I never made a post here about the package. And since I\u2019ve recently reworked the codebase, I wanted to share about it with the Python community. This is my first time working with the Python language and also my first time publishing something I made as a whole package.\n\nA small 1 minute demonstration of the package being used:  \n[Package Example](https://imgur.com/a/jKjagVE)\n\nThe package is available through PyPI and GitHub, however I hope it\u2019s okay if I only post the link to it\u2019s PyPI homepage since I don\u2019t want my GitHub name to be attached to this post (the link to the source code as well as the GitHub home page is both in the ReadMe and the homepage button in the PyPI project details):  \n[PyPI package homepage](https://pypi.org/project/pypalex/)\n\nIf the GitHub link to the source code is a hard requirement, please let me know and I will change the link in this post to point to it\u2019s GitHub repo instead of PyPI!\n\nI ask that if you use the package please feel free to leave any kind of feedback, especially if it\u2019s constructive criticism! I have discussion posts that are open on the GitHub repo for every new version of the package I\u2019ve released. And thank you so much for any feedback! I appreciate and value it a whole lot!"}, {"title": "Learn how to build a simple TODO app that runs in the terminal with Python \ud83d\udc0d and Textual. \ud83d\ude80", "score": 7, "id": "11swe9w", "url": "https://mathspp.com/blog/textual-tutorial-build-a-todo-app-in-python", "comms_num": 3, "created": 1678978485.0, "body": ""}, {"title": "Deploying ML model", "score": 2, "id": "11svo4d", "url": "https://www.reddit.com/r/Python/comments/11svo4d/deploying_ml_model/", "comms_num": 0, "created": 1678976788.0, "body": "Can we deploy a Machine Learning model trained in Python using Node.Js and Express.Js backend?"}, {"title": "What is like to work at Anaconda", "score": 0, "id": "11svbt7", "url": "https://www.reddit.com/r/Python/comments/11svbt7/what_is_like_to_work_at_anaconda/", "comms_num": 6, "created": 1678976000.0, "body": "Does anyone work for [Anaconda](https://www.anaconda.com) as a software engineer or programmer? I'm curious about what you actually do for the company. Do you spend most of your time maintaining Anaconda's products? Do you get to contribute to open-source projects? Do you work in languages other than Python? Are there industry partners that you develop software for?"}, {"title": "Automate Exploratory Data Analysis on Databases", "score": 3, "id": "11slkxt", "url": "https://www.reddit.com/r/Python/comments/11slkxt/automate_exploratory_data_analysis_on_databases/", "comms_num": 1, "created": 1678945867.0, "body": "Are you tired of spending hours doing exploratory data analysis? Learn how to automate the process with the Sweetviz Python library and HarperDB.\n\n[https://hackernoon.com/automate-exploratory-data-analysis-on-databases](https://hackernoon.com/automate-exploratory-data-analysis-on-databases)"}, {"title": "How to Evaluate the Quality of Python Packages", "score": 43, "id": "11strne", "url": "https://realpython.com/python-package-quality/", "comms_num": 6, "created": 1678972296.0, "body": ""}, {"title": "A small toolkit used for collecting responses from ChatGPT for research / data analysis", "score": 7, "id": "11smavy", "url": "https://www.reddit.com/r/Python/comments/11smavy/a_small_toolkit_used_for_collecting_responses/", "comms_num": 2, "created": 1678948341.0, "body": "I am pleased to showcase an open-source tool for collecting a large amount of responses from ChatGPT using ChatGPT's official API. ChatGPT currently limits the number of questions that users may ask per hour. The goal of this project is to allow users to just leave their computers on for extended periods of time to collect large amounts of responses from ChatGPT. I made this for doing research related to ChatGPT and decided to open-source it.\n\nCheck out the source code / contribute to the project here: [https://github.com/hwelsters/sleepyask](https://github.com/hwelsters/sleepyask)\n\n\ud83d\udd11 Key features include:\n\n* The ability to spin up multiple threads to ask numerous questions concurrently (this might cause you to exceed the rate limit though.) I was able to ask questions concurrently across 100 threads. This allowed me to ask 1000 questions in less than 5 minutes.\n* The ultimate goal of this project is to allow users to just leave their computers on for extended periods of time while asking ChatGPT as many questions as robot-ly possible. So it does this too."}, {"title": "Am I the only one who doesn\u2019t like this language?", "score": 0, "id": "11sh0fv", "url": "https://www.reddit.com/r/Python/comments/11sh0fv/am_i_the_only_one_who_doesnt_like_this_language/", "comms_num": 14, "created": 1678932462.0, "body": "Learning python after learning a bunch of other C like languages feels like they oversimplified this language to hell and removed a bunch of useful features. I hate the for loops because every for loop is like a foreach loop and it\u2019s annoying if you want to access the index for whatever reason. I also don\u2019t like how you cant make the parameters of a function have specific datatypes for the parameters so you can just input variable and it will allow you to. I feel like it takes me longer to write code in python because of all the quirks it has."}, {"title": "Open-source Mathematical Python Lib", "score": 0, "id": "11sfu7i", "url": "https://www.reddit.com/r/Python/comments/11sfu7i/opensource_mathematical_python_lib/", "comms_num": 2, "created": 1678929608.0, "body": "# Functvs\n\nHey, all you nerds out there!!\n\nIf  you are really into MATHEMATICS, science in general, advanced, applied,  pure, &c. And you want to contribute to the Math, Chemical, Physics  applications in this lib. Please, join!!\n\nI am going over the works of Pierre Raymond, Pascal and Euler on the sub-factorial function and all that follows.\n\n(BETA)\n\npip install Functvs\n\n[https://github.com/shimon-d/functvs](https://github.com/shimon-d/functvs)"}, {"title": "Thursday Daily Thread: Python Careers, Courses, and Furthering Education!", "score": 2, "id": "11sduam", "url": "https://www.reddit.com/r/Python/comments/11sduam/thursday_daily_thread_python_careers_courses_and/", "comms_num": 2, "created": 1678924812.0, "body": "Discussion of using Python in a professional environment, getting jobs in Python as well as ask questions about courses to further your python education!\n\n**This thread is not for recruitment, please see** r/PythonJobs **or the thread in the sidebar for that.**"}, {"title": "I've been having a lot of problems with yfinance, the original Yahoo Finance API wrapper so I switched to yahoo-fin which is much better. I'm building my own dividend portfolio tracker with it. Also, the first minute is my cat interrupting my video. Enjoy!", "score": 5, "id": "11sbbu6", "url": "https://youtu.be/rwy9fYJvbKA", "comms_num": 0, "created": 1678918850.0, "body": ""}, {"title": "Reverse Engineering Read Later Data from the Apple News App", "score": 10, "id": "11sazte", "url": "https://eecue.com/blog/reverse-engineering-read-later-data-from-the-apple-news-app", "comms_num": 0, "created": 1678918121.0, "body": ""}, {"title": "Pytorch 2.0 released", "score": 485, "id": "11sakbu", "url": "https://pytorch.org/blog/pytorch-2.0-release/", "comms_num": 45, "created": 1678917192.0, "body": ""}, {"title": "How to Scrape Twitter Data Using Python Without Using Twitter\u2019s API", "score": 230, "id": "11s7tsw", "url": "https://www.scraperapi.com/blog/scrape-twitter-data/", "comms_num": 29, "created": 1678911215.0, "body": ""}, {"title": "Blaise Pabon on his developer journey, open source and why Python is great [Podcast]", "score": 2, "id": "11s2mwe", "url": "https://www.pybitespodcast.com/1501156/12428361-106-blaise-pabon-on-his-developer-journey-open-source-and-why-python-is-great", "comms_num": 0, "created": 1678900298.0, "body": ""}, {"title": "What if FastAPI was 100x faster and supported NumPy arrays and Pillow images?", "score": 13, "id": "11s2e3q", "url": "https://www.reddit.com/r/Python/comments/11s2e3q/what_if_fastapi_was_100x_faster_and_supported/", "comms_num": 11, "created": 1678899759.0, "body": "When deploying AI models with FastAPI, we always had to write custom serialisation code for numpy.ndarray and PIL.Image. Not only have we replaced FastAPI with up to 100x faster C-level library a couple of weeks ago, but we have also recently added support for all the fancy Pythonic types on both the client and server sides.  \n\n\nIt's remarkable how fast this library turned out to be; there was a [great discussion on HackerNews](https://news.ycombinator.com/item?id=35042316) on how the new u/linux io\\_uring functionality in kernels newer than 5.19 affects our performance, so we are very excited to share it with the broader Python community! Please let us know if there are other types you often use and would want UJRPC to support [\ud83e\udd17](https://emojipedia.org/hugging-face/)\n\n[Check it out on GitHub/Unum-Cloud/UJRPC](https://github.com/unum-cloud/ujrpc#more-functionality-than-fastapi)  \n\n\n[Deploying UForm with UJRPC for fast Multi-Modal AI Inference](https://preview.redd.it/5zg8nypknxna1.png?width=1648&format=png&auto=webp&v=enabled&s=968b64e0d70ad2c40fb7da2a451dbc8893245a42)"}, {"title": "No-async async with Python", "score": 25, "id": "11s1umy", "url": "https://textual.textualize.io/blog/2023/03/15/no-async-async-with-python/", "comms_num": 6, "created": 1678898605.0, "body": ""}, {"title": "Use maximum PC Hardware Resources", "score": 5, "id": "11s1p9z", "url": "https://www.reddit.com/r/Python/comments/11s1p9z/use_maximum_pc_hardware_resources/", "comms_num": 25, "created": 1678898283.0, "body": "I have a PC with 6 Cores @3.60GHz, 64GB RAM and an NVIDIA Quadro P400. When I run scripts in VSCode, I'm using only 2% CPU, 6% Memory and 5.4% of GPU.\n\nHow can I configure the PC to assign more resources when running python scripts?"}, {"title": "Suggestions Conda pkg development cycle", "score": 2, "id": "11s09f5", "url": "https://www.reddit.com/r/Python/comments/11s09f5/suggestions_conda_pkg_development_cycle/", "comms_num": 0, "created": 1678895246.0, "body": "Hey there, I'm trying to figure out a good conda development cycle, to be specific:\n- create a conda pkg\n- conda build\n- install local version\n- fix issues\n- repeat from conda build\n\nI have problems like files not properly deleted/replaced, conda not picking up the latest change.\nMaybe I'm doing something wrong and so I'm asking for suggestions.\nSomething that possibly can be an issue is that I use the --output-folder flag and install the pkg with the local path but it doesn't seems to work"}, {"title": "Solving a simple problem with ML", "score": 0, "id": "11s07qt", "url": "https://www.circusscientist.com/2023/03/15/solving-a-simple-problem-with-ml/", "comms_num": 1, "created": 1678895147.0, "body": ""}, {"title": "Chain together LLMs for reasoning and orchestrate multiple large models for accomplishing complex tasks like phoning someone using a GPT-4 model", "score": 28, "id": "11s04c7", "url": "https://github.com/jina-ai/agentchain", "comms_num": 3, "created": 1678894953.0, "body": ""}, {"title": "PEP 701 \u2013 Syntactic formalization of f-strings has been accepted", "score": 193, "id": "11rze7z", "url": "https://peps.python.org/pep-0701/", "comms_num": 55, "created": 1678893389.0, "body": ""}, {"title": "Refactor untested code with PyTest", "score": 5, "id": "11rxyvi", "url": "https://medium.com/@nijhof.dns/refactor-untested-code-with-pytest-1c1bff4c47c6", "comms_num": 0, "created": 1678890356.0, "body": ""}, {"title": "How to Install Python on MacOS", "score": 0, "id": "11rww5y", "url": "https://www.reddit.com/r/Python/comments/11rww5y/how_to_install_python_on_macos/", "comms_num": 7, "created": 1678887985.0, "body": "On most versions of MacOS before Catalina, a distribution of Python is already included. Unfortunately, it\u2019s almost certainly an old version, Python 2.7. Luckily, there are two ways to easily install Python 3 on a Mac.\n\nIn general, it\u2019s not recommended to use the official Python installer from the python.org website. It\u2019s better to opt for the version provided by your operating system, as it offers the benefit of automatic updates.\n\nTo take advantage of the latest features and improvements in Python, it\u2019s recommended to install the latest version alongside the pre-installed version that comes with macOS. Before we begin the installation process, it\u2019s worth exploring why there are multiple versions of the same programming language. Programming languages continually evolve by introducing new features and enhancements. These changes are typically announced by the\u00a0Python language developers\u00a0through version updates.\n\nRead More: [https://optymize.io/blog/tutorial-how-to-install-python-on-macos/](https://optymize.io/blog/tutorial-how-to-install-python-on-macos/)"}, {"title": "Finding memory corruption bugs in Python libraries", "score": 5, "id": "11rwmv4", "url": "https://rog3rsm1th.github.io/posts/memory-corruption-bugs-in-python/", "comms_num": 0, "created": 1678887415.0, "body": ""}, {"title": "Image files as input using GPT-3 with Python", "score": 1, "id": "11rv7lu", "url": "https://www.youtube.com/watch?v=xZCfOZXn_h0", "comms_num": 0, "created": 1678884042.0, "body": ""}, {"title": "Integrating ChatGPT in a python webapp (Django)", "score": 0, "id": "11ruvw0", "url": "https://www.reddit.com/r/Python/comments/11ruvw0/integrating_chatgpt_in_a_python_webapp_django/", "comms_num": 1, "created": 1678883203.0, "body": "ChatGPT has been in the press a lot recently so I put this app together to demonstrate how to integrate ChatGPT into a Python Django app.\n\nLet me know what you think.[Integrating ChatGPT into your Django project \u2013 A step-by-step guide for developers](https://youtu.be/WR7mOHhylqQ)\n\nhttps://preview.redd.it/88wjaq6gcwna1.jpg?width=1920&format=pjpg&auto=webp&v=enabled&s=0ad2c84eb6aad0045f2cf925c57db0adbff4c1cc"}, {"title": "Python type hints (type system) unpythonic", "score": 2, "id": "11ru85r", "url": "https://www.reddit.com/r/Python/comments/11ru85r/python_type_hints_type_system_unpythonic/", "comms_num": 25, "created": 1678881431.0, "body": "Python is a language with a certain ideology outline in different PEPs, mainly [**https://peps.python.org/pep-0020/**](https://peps.python.org/pep-0020/)**.** The type hints seem to be very awkward to use apart from simple/basic use cases. I'm curious what people think about the type system."}, {"title": "A pure python object change & history tracker", "score": 7, "id": "11rscug", "url": "https://www.reddit.com/r/Python/comments/11rscug/a_pure_python_object_change_history_tracker/", "comms_num": 1, "created": 1678875857.0, "body": "Hi!\n\nI built a small package that helps you track changes in an object, as well as query its structured changelog through a simple query interface. \n\nI was hoping to get some feedback on how I can make this better! \n\nGithub link - [https://github.com/saurabh0719/object-tracker](https://github.com/saurabh0719/object-tracker)\n\nThanks :)"}, {"title": "Managing secrets like API keys in Python - Why are so many devs still hardcoding secrets?", "score": 469, "id": "11rqyv9", "url": "https://www.reddit.com/r/Python/comments/11rqyv9/managing_secrets_like_api_keys_in_python_why_are/", "comms_num": 117, "created": 1678871215.0, "body": "The recent [State of Secrets Sprawl report](https://www.gitguardian.com/state-of-secrets-sprawl-report-2023) showed that 10 million (yes million) secrets like API keys, credential pairs and security certs were leaked in public GitHub repositories in 2022 and Python was by far the largest contributor to these. \n\nThe problem stems mostly from secrets being hardcoded directly into the source code. So this leads to the question, why are so many devs hardcoding secrets? The problem is a little more complicated with git because often a secret is hardcoded and removed without the dev realizing that the secret persists in the git history. But still, this is a big issue in the Python community. \n\nManaging secrets can be really easy thanks to helpful Pypi packages like [Python Dotenv](https://pypi.org/project/python-dotenv/) which is my favorite for its simplicity and easy ability to manage secrets for multiple different environments like Dev and Prod. I'm curious about what others are using to manage secrets and why? \n\nI thought I'd share some recent tutorials on managing secrets for anyone who may need a refresher on the topic. Please share more resources in the comments.   \n\n\n[Managing Secrets in Python - Video](https://www.youtube.com/watch?v=DVVYHlGYIHY)  \n\n\n[Managing Secrets in Python - Blog](https://blog.gitguardian.com/how-to-handle-secrets-in-python/)"}, {"title": "March 2023 Tech Roundup: The Latest News and Innovations", "score": 0, "id": "11rnmky", "url": "https://medium.com/p/b611f3ca7663", "comms_num": 0, "created": 1678859786.0, "body": ""}, {"title": "Figuring out how to distribute Python Main and Submodules on PyPi", "score": 2, "id": "11rjo4x", "url": "https://sharifsuliman.medium.com/distributing-python-main-and-submodules-on-pypi-49140a6c31f5", "comms_num": 4, "created": 1678847983.0, "body": ""}, {"title": "What is the funnest project you worked on?", "score": 179, "id": "11ria83", "url": "https://www.reddit.com/r/Python/comments/11ria83/what_is_the_funnest_project_you_worked_on/", "comms_num": 113, "created": 1678844737.0, "body": "Why was it fun? What did it do? Tell me about your accomplishments."}, {"title": "PyDict3class Generator Claas and Objekt from dict or JSON", "score": 2, "id": "11rhd7h", "url": "https://www.reddit.com/r/Python/comments/11rhd7h/pydict3class_generator_claas_and_objekt_from_dict/", "comms_num": 8, "created": 1678842699.0, "body": "I wrote a lib for creating dynamically classes or objects from python dicts or json on runtime.\n\nwith this lib you are be able to let your application write his entity him self.\n\nI using it for generating classes out of json request in flask for sqlalchemy or mongoengine.\n\nit works with init on class level and also with init on attributes.\n\nit works with builtin types and also own objects and types.\n\n[https://pypi.org/project/pydict2class/0.0.1/](https://pypi.org/project/pydict2class/0.0.1/)\n\n[https://github.com/dierk-bentpiening/PyDict2Class](https://github.com/dierk-bentpiening/PyDict2Class)\n\n# PyDict2Class\n\nDynamic create classes from dict or json like you would develop them yourself.\n\n## Introduction\n\nThis tool makes it possible to generate a Python class with attributes from a dict or a JSON, or to create an object with the corresponding assigned values. The data type of the value of the dict or JSON is recognized and automatically initialized with the appropriate builtins data types. Non Python standard types or methods can also be included by adding them to the type attribute, this can also override the internal data types.\n\ni use this tool to dynamically create mongoengine data classes with the appropriate attributes. Actual i am implement the Functionality to create SQLAlchemy Data Model classes.\n\n## Usage\n\ninstall the library from source or over pip. import package and inherit Class object. e builtins data types. Non Python standard types or methods can also be inc\n\n    from pydict2class import Dict2Class dict2class = Dict2Class() \n\nDefine the Dictionary you want to generate a class from.\n\n    mydict = {\"integer\": 1, \"string\": \"my string\", \"boolean\": True, \"list\": [1, 2, 3]} \n\nNow you have to decide whether you want to generate only the class or if you want to generate the class and instantiate it with the values given in your dict or json.\n\n**Only generate the class:**\n\n    myclass = dict2class.generate(mydict, \"myclassname\") \n\nThe magic is done and you have a dynamic class with the dictionary keys as attribute names and the value data type as datatype.\n\n**Generate class and initialize object:**\n\n    myobj = dict2class.generate_and_init(mydict, \"classfdict\") \n\n**Use JSON instead of Dict:**\n\n    myjsonstr = '{\"integer\": 1, \"string\": \"my string\", \"boolean\": True, \"list\": [1, 2, 3]}' myclass = dict2class.generate(myjsonstr, \"myclass\", json=True) \n\n**Add Custom methods to types and use them:**\n\n       dict2class = Dict2Class()     dict2class.types = mycustommethods      \n\n**Add list of custom methods to type and use them:**\n\n       dict2class = Dict2Class()     dict2class.types = [custommethod1, custommethod2, custommethod3, custommethod4, custommethod5] \n\n[https://pypi.org/project/pydict2class/0.0.1/](https://pypi.org/project/pydict2class/0.0.1/)\n\n[https://github.com/dierk-bentpiening/PyDict2Class](https://github.com/dierk-bentpiening/PyDict2Class)"}, {"title": "Wednesday Daily Thread: Beginner questions", "score": 0, "id": "11rfceo", "url": "https://www.reddit.com/r/Python/comments/11rfceo/wednesday_daily_thread_beginner_questions/", "comms_num": 2, "created": 1678838410.0, "body": "New to Python and have questions? Use this thread to ask anything about Python, there are no bad questions!\n\nThis thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response."}, {"title": "Python Beginner, Need some advice/route-map to get an Entry-level jobs.", "score": 19, "id": "11ravf6", "url": "https://www.reddit.com/r/Python/comments/11ravf6/python_beginner_need_some_adviceroutemap_to_get/", "comms_num": 23, "created": 1678811337.0, "body": "Hi everyone, Hope all is well with you all. I'm writing this to seek some advice from you all. I'm 30 and I have shifted my career from e-commerce to Python recently. I was working in a company in London and had to quit because of redundancy. Hence, I thought I need to upgrade my technical skills to find a stable job. I have been teaching myself python via an Online platform and practicing hackerranks,geeksforgeeks to practice python. It's been around 6 months now and to be honest, I'm quite afraid of how I'm going to find a job. what would be the expectations for a junior python-dev? how should I approach this situation?can i actually try for interviews without any certification in Python? or Should I get any? Any tips, or anything useful to me would be highly appreciated guys! I'm losing my confidence day by day as the journey takes a long time and worried. Please share your thoughts. Thanks :)"}, {"title": "Analyzing Interactions in a Slack Communication Network - using NetworkX", "score": 1, "id": "11ra9vr", "url": "https://memgraph.com/blog/slack-influence-bot", "comms_num": 0, "created": 1678810052.0, "body": ""}, {"title": "Lib for dynamically generating classes from json or dict on runtime", "score": 0, "id": "11ra0e5", "url": "https://www.reddit.com/r/Python/comments/11ra0e5/lib_for_dynamically_generating_classes_from_json/", "comms_num": 0, "created": 1678809503.0, "body": "I wrote a lib for creating dynamically classes or objects from python dicts or json on runtime.\n\nwith this lib you are be able to let your application write his entity him self.\n\nI using it for generating classes out of json request in flask for sqlalchemy or mongoengine.\n\nit works with init on class level and also with init on attributes.\n\nit works with builtin types and also own objects and types.\n\n[https://pypi.org/project/pydict2class/0.0.1/](https://pypi.org/project/pydict2class/0.0.1/)\n\n[https://github.com/dierk-bentpiening/PyDict2Class](https://github.com/dierk-bentpiening/PyDict2Class)\n\n# PyDict2Class\n\nDynamic create classes from dict or json like you would develop them yourself.\n\n## Introduction\n\nThis tool makes it possible to generate a Python class with attributes from a dict or a JSON, or to create an object with the corresponding assigned values. The data type of the value of the dict or JSON is recognized and automatically initialized with the appropriate builtins data types. Non Python standard types or methods can also be included by adding them to the type attribute, this can also override the internal data types.\n\ni use this tool to dynamically create mongoengine data classes with the appropriate attributes. Actual i am implement the Functionality to create SQLAlchemy Data Model classes.\n\n## Usage\n\ninstall the library from source or over pip. import package and inherit Class object. e builtins data types. Non Python standard types or methods can also be inc\n\n    from pydict2class import Dict2Class dict2class = Dict2Class() \n\nDefine the Dictionary you want to generate a class from.\n\n    mydict = {\"integer\": 1, \"string\": \"my string\", \"boolean\": True, \"list\": [1, 2, 3]} \n\nNow you have to decide whether you want to generate only the class or if you want to generate the class and instantiate it with the values given in your dict or json.\n\n**Only generate the class:**\n\n    myclass = dict2class.generate(mydict, \"myclassname\") \n\nThe magic is done and you have a dynamic class with the dictionary keys as attribute names and the value data type as datatype.\n\n**Generate class and initialize object:**\n\n    myobj = dict2class.generate_and_init(mydict, \"classfdict\") \n\n**Use JSON instead of Dict:**\n\n    myjsonstr = '{\"integer\": 1, \"string\": \"my string\", \"boolean\": True, \"list\": [1, 2, 3]}' myclass = dict2class.generate(myjsonstr, \"myclass\", json=True) \n\n**Add Custom methods to types and use them:**\n\n       dict2class = Dict2Class()     dict2class.types = mycustommethods      \n\n**Add list of custom methods to type and use them:**\n\n       dict2class = Dict2Class()     dict2class.types = [custommethod1, custommethod2, custommethod3, custommethod4, custommethod5] \n\n[https://pypi.org/project/pydict2class/0.0.1/](https://pypi.org/project/pydict2class/0.0.1/)\n\n[https://github.com/dierk-bentpiening/PyDict2Class](https://github.com/dierk-bentpiening/PyDict2Class)"}, {"title": "Build your own dataset generator with Python", "score": 0, "id": "11r9fi6", "url": "https://medium.com/@tobiastt/build-your-own-dataset-generator-with-python-d783cafeea23", "comms_num": 3, "created": 1678808229.0, "body": ""}, {"title": "Hypermodern Python Toolbox - a set of Python tools setting the standard in 2023", "score": 0, "id": "11r9exh", "url": "https://www.datasciencesouth.com/blog/hypermodern-python", "comms_num": 5, "created": 1678808191.0, "body": ""}, {"title": "Build and run your Python web scrapers in the cloud with Apify SDK for Python", "score": 127, "id": "11r9298", "url": "https://github.com/apify/apify-sdk-python", "comms_num": 24, "created": 1678807394.0, "body": ""}, {"title": "Python libraries", "score": 1, "id": "11r83an", "url": "https://www.reddit.com/r/Python/comments/11r83an/python_libraries/", "comms_num": 6, "created": 1678805223.0, "body": "When I first started programming I got my feet wet using python and have working knowledge about the language, but transitioned my focus on front-end web development. I want to return to python to develop a deeper understanding, what are some libraries you use in your day-to-day you\u2019d say would be worth learning? Thanks in advance!"}, {"title": "Join us for PyDay!", "score": 5, "id": "11r7pca", "url": "https://www.reddit.com/r/Python/comments/11r7pca/join_us_for_pyday/", "comms_num": 3, "created": 1678804348.0, "body": "Hey Python Community!\n\nExcited to announce Microsoft is hosting #PyDay May 2nd, 2023! (I know.. missed opportunity not having it today March, 14th)\n\nJoin us for an exciting session led by experienced developer and educator Pamela Fox, where you'll learn how to build, test, containerize, and deploy HTTP APIs and web applications using the 3 most popular Python frameworks: FastAPI, Django, and Flask.\n\nFamiliarity with Python is encouraged, but no web app experience is required.\n\nLearn more here: https://aka.ms/PyDay\n\nIf you're just getting started with Python, head over to https://aka.ms/TryPython to brush up on the basics before the session!\n\nGood session for beginners/students. Pamela is a great teacher!"}, {"title": "Python News: What's New From February 2023 \u2013 Real Python", "score": 2, "id": "11r59z6", "url": "https://realpython.com/python-news-february-2023/", "comms_num": 0, "created": 1678798298.0, "body": ""}, {"title": "I made a simple random password generator", "score": 0, "id": "11r45rj", "url": "https://www.reddit.com/r/Python/comments/11r45rj/i_made_a_simple_random_password_generator/", "comms_num": 5, "created": 1678795030.0, "body": "[Random Password Generator](https://github.com/milkyicedtea/Random-password-generator) (~~what an orginal name!~~) or [RPG](https://github.com/milkyicedtea/Random-password-generator) for short is a simple password generator that uses [PySimpleGUI](https://github.com/PySimpleGUI/PySimpleGUI) GUI framework, in order to have a user-friendly interface ~~and also because i wanted to have fun.~~\n\nYou can find more information on the project in the [README](https://github.com/milkyicedtea/Random-password-generator#readme) (~~I'm kinda proud of how it came out~~)\n\n>**Disclaimer:**  \n>  \n>As it's hopefully obvious, I would never use and do not recommend using this to actually generate passwords you use, as i don't know if this is secure enough, since it uses very simple algorithms to generate the passwords.\n\nOf course, any critiques and tips on how to make the code/generation better are welcome, *just please, don't paste some code in here. I'd rather figure it out myself ;)*"}, {"title": "Clicknium tutorial: automate Windows application and web browser in Python", "score": 3, "id": "11r0rqn", "url": "https://www.reddit.com/r/Python/comments/11r0rqn/clicknium_tutorial_automate_windows_application/", "comms_num": 0, "created": 1678782886.0, "body": "Clicknium python module is a very useful GUI automation lib. But the office doc is not straight enough. So I write a tutorial for the lib and hope more people use it to reduce the daily task. \n\n[https://dev.to/kayyolo/clicknium-cookbook-1ai2](https://dev.to/kayyolo/clicknium-cookbook-1ai2)"}, {"title": "What is the best interactive learning tool?", "score": 1, "id": "11qz29n", "url": "https://www.reddit.com/r/Python/comments/11qz29n/what_is_the_best_interactive_learning_tool/", "comms_num": 2, "created": 1678776565.0, "body": "Tried out a few interactive tools and really enjoyed learning before hitting paywalls. What is the best tool to learn python? It would also be usful if I could pay for it on a rolling month contract instead of an anual one."}, {"title": "Many rows -> kernel died", "score": 4, "id": "11qyuex", "url": "https://www.reddit.com/r/Python/comments/11qyuex/many_rows_kernel_died/", "comms_num": 19, "created": 1678775774.0, "body": "I have a SQL query for getting data from a database and loading it to a dataframe. How ever, this drains the memory and I often get a message telling me the kernel has died. I have about 8 million rows.\n\nIs there a way solution to this?"}, {"title": "reddit downloader in python", "score": 15, "id": "11qyo4z", "url": "https://www.reddit.com/r/Python/comments/11qyo4z/reddit_downloader_in_python/", "comms_num": 4, "created": 1678775162.0, "body": "Hi everyone!\n\nI've made this reddit downloader/bot some time ago and now I thought of sharing it. Any feedback is welcome on programming, functions and overall functionality of it . Currently it can download saved posts, wallpapers, posts from specific user or subreddit or a link and fetches a random joke from r/Jokes\n\n&#x200B;\n\nHere's the [link](https://github.com/SEKT10N/reddit-downloader) to it. Any help regarding improvement of coding and functionality is appreciated! Thanks!!"}, {"title": "ChatGPT int the Terminal!", "score": 406, "id": "11qwe1a", "url": "https://www.reddit.com/r/Python/comments/11qwe1a/chatgpt_int_the_terminal/", "comms_num": 60, "created": 1678767649.0, "body": "Me and a friend made it possible to  use openai's chatgpt right in your terminal using the new API's. Give it  a try and let us know what you think!\n\nLink: [https://github.com/AineeJames/ChatGPTerminator](https://github.com/AineeJames/ChatGPTerminator)\n\nhttps://preview.redd.it/vxu3psljsmna1.png?width=1504&format=png&auto=webp&v=enabled&s=e28dc576d0581b3283caf4e6715c45a507d5982e"}, {"title": "QCheckBox and QComboBox in PyQt6!", "score": 0, "id": "11qttm4", "url": "https://youtu.be/L7KW1Hn-Gyk", "comms_num": 0, "created": 1678760346.0, "body": ""}, {"title": "Tuesday Daily Thread: Advanced questions", "score": 5, "id": "11qqgwc", "url": "https://www.reddit.com/r/Python/comments/11qqgwc/tuesday_daily_thread_advanced_questions/", "comms_num": 2, "created": 1678752010.0, "body": "Have some burning questions on advanced Python topics? Use this thread to ask more advanced questions related to Python.\n\n**If your question is a beginner question we hold a beginner Daily Thread tomorrow (Wednesday) where you can ask any question! We may remove questions here and ask you to resubmit tomorrow.**\n\nThis thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response."}, {"title": "python security - very simply open source scanner which detect file signed untrusted or leaked certificates", "score": 23, "id": "11qq8ex", "url": "https://www.reddit.com/r/Python/comments/11qq8ex/python_security_very_simply_open_source_scanner/", "comms_num": 0, "created": 1678751440.0, "body": " \n\n[https://github.com/password123456/CertVerify](https://github.com/password123456/CertVerify)\n\nWhy is this tool needed?\n\nExecutable files signed with compromised or untrusted code signing certificates can be used to distribute malware and other malicious software. Attackers can use these files to bypass security controls and to make their malware appear legitimate to victims. This tool helps to identify these files so that they can be removed or investigated further."}, {"title": "PTML - Python Text Markup Language", "score": 5, "id": "11qpfw0", "url": "https://www.reddit.com/r/Python/comments/11qpfw0/ptml_python_text_markup_language/", "comms_num": 4, "created": 1678749599.0, "body": "[https://github.com/cmspeedrunner/PTML](https://github.com/cmspeedrunner/PTML)  \nopinions? (this is a meme language, not supposed to actually be used)"}, {"title": "Tinkering with Unix domain sockets", "score": 5, "id": "11qluiv", "url": "https://www.reddit.com/r/Python/comments/11qluiv/tinkering_with_unix_domain_sockets/", "comms_num": 2, "created": 1678741782.0, "body": "I needed to set up a proxy that relays requests to an HTTP web server communicating through a Unix domain socket (UDS). It turns out that I didn't know much about UDS. Thought I'd document the process as I started poking around it:  \n\n\n[https://rednafi.github.io/reflections/tinkering-with-unix-domain-sockets.html](https://rednafi.github.io/reflections/tinkering-with-unix-domain-sockets.html)"}, {"title": "Question: Is there a way of using python functions within Excel/a spreadsheet, rather than VBA?", "score": 5, "id": "11qjojt", "url": "https://www.reddit.com/r/Python/comments/11qjojt/question_is_there_a_way_of_using_python_functions/", "comms_num": 17, "created": 1678737159.0, "body": "I've tried writing scripts in Python in LibreOffice, but that just allows you to do macros on your spreasheets. It won't let you define a function and then call that function from within your cells as if it were built in.\n\nI've tried writing functions in VBA and JS in Excel and GoogleSheets, respectively, but I'd rather not have to learn a new language, and it would be easier to test that my scripts work correctly if they were written in python.\n\nI've also tried pyspread, but pyspread doesnt let you reference cells like a normal spreadsheet i.e. your formulas cannot include =A1+B2\n\nI've also seen pyxll but it seems you have to pay for it, which is crazy.\n\nAnyone aware of anything?"}, {"title": "Anyone see a danger in allowing wild west rules for ' vs \" in strings?", "score": 84, "id": "11qjml6", "url": "https://www.reddit.com/r/Python/comments/11qjml6/anyone_see_a_danger_in_allowing_wild_west_rules/", "comms_num": 112, "created": 1678737041.0, "body": "I'm tired of nit'ing people for using \\`\"\\` instead of \\`'\\` for strings (we agreed on \\`'\\`), and quite frankly I can't see how it adds value nor that anyone really cares. If I (as a tech lead) relax this to \"use whatever you feel like\", will we suffer later from some obscure gotcha?"}, {"title": "code: performance vs. readability", "score": 2, "id": "11qim3q", "url": "https://www.reddit.com/r/Python/comments/11qim3q/code_performance_vs_readability/", "comms_num": 5, "created": 1678734840.0, "body": "I'm a beginner currently learning and came across following question.  \nHad to write code that computed certain items from lists with each other:\n\n    # both lists are number of people in a group having eye-color\n    data = [[23,11,5,14],[8,32,20,5]]\ncolor = input()\n    \n    # eye color in lists e.g. data[0][1]=\"brown\"\ncolor_code = [\"brown\",\"blue\",\"green\",\"black\"] \n    # index of inputted color\n    color_index = (color_code.index(color))    \n    \n    # this should print % of said color in both groups together as integer\nprint(int((((data[0][color_index]) + (data[1][color_index])) / (sum(data[0]) + sum(data[1]))) * 100))\n\nThe line with the print-statement is nearly unreadable. I could enhance that by declaring each variable in its own line but (I THINK\\*) that this decreases performance(?)   \n*\\*is my assumption about decreased performance even correct?*\n\nIn this small example it would make hardly any difference but what if I would scale that up (e.g. high frequent in-/output where performance becomes relevant?\n\nFurthermore: is there a good guideline for questions like this? E.g. when and how do I decide for performance over readability -especially when I would work in collaboration with others?   \n\n\nAnother example that is kind of alike but I am not entirely sure if it's comparable because it's concerned with storing an additional variable rather than outputting a functions result:  \nGiven a list\n\n    stuff = [a,b,c] \n\nSuggest I want to remove- and  yet keep an item somewhere else, from a list. \n\nI could:\n\n    keep = stuff.pop(index_of_kept_item)\n\nor:\n\n    kept = stuff(index_of_kept)\n    stuff.pop(index_of_kept)\n\nWhich of the two approaches would be more efficient in a small or large scale?\n\nTo be clear: this question is not about my code\\* but on performance(-and its principals) when writing code, also in regards to other aspects of usability - especially readability.  \n(\\*although I would appreciate constructive guidance if applicable)"}, {"title": "Flask or Django for a Hyper-V Manager?", "score": 2, "id": "11qh8ed", "url": "https://www.reddit.com/r/Python/comments/11qh8ed/flask_or_django_for_a_hyperv_manager/", "comms_num": 8, "created": 1678731789.0, "body": " \n\nHey, I'm planning to build a Hyper-V Manager that will be accessible over the internet. I'm considering using either Flask or Django as the web framework, but I'm not sure which one is the best choice. I'm also concerned about security since the server will be publicly accessible. Can Django provide enough security?\n\nI've been reading the Django documentation and came across this statement: \"Now\u2019s a good time to note: don\u2019t use this server in anything resembling a production environment. It\u2019s intended only for use while developing. (We\u2019re in the business of making web frameworks, not web servers.)\" This has me wondering whether Django is suitable for a public-facing server.\n\nSo, I'm looking for advice on which framework to use and whether Django is secure enough for my needs. Any insights or recommendations would be greatly appreciated. Thanks in advance!"}, {"title": "Lusbir: an alternative conception of integer ranges", "score": 1, "id": "11qgztq", "url": "https://www.reddit.com/r/Python/comments/11qgztq/lusbir_an_alternative_conception_of_integer_ranges/", "comms_num": 3, "created": 1678731231.0, "body": "[https://github.com/shape-warrior-t/lusbir](https://github.com/shape-warrior-t/lusbir)\n\nI made a library that provides an integer range class that works in a different way than Python's built-in `range` type. It's probably not that *useful*, but I do think it's an interesting concept to explore.\n\nPython ranges work on a start/stop/step model: start at some number and then increase by the step until you reach the stopping point. Meanwhile, these ranges -- which I've named **lusbirs** \\-- are determined by a lower bound, upper bound, step, and base. Take all numbers of the form (n \\* step + base) for some integer n, and then only include the numbers that fall between the lower and upper bounds. All four combinations of inclusive/exclusive lower/upper bounds are supported. The step can be positive or negative, which determines whether the range is ascending or descending, just like built-in ranges.\n\nAs an example, consider a lusbir with an exclusive lower bound of 10, an inclusive upper bound of 30, a step of 4, and a base of 2. It would represent the list of numbers between 10 (exclusive) and 30 (inclusive) that are of the form 4n + 2, which would be the list \\[14, 18, 22, 26, 30\\].\n\nMore info about this library -- including how to actually create a lusbir in your code -- is available on the project's GitHub page.\n\n&#x200B;\n\nThis is my first published Python library, and I made it partially to gain experience with the process of packaging a Python project. I'm not planning to do long-term maintenance of this library, but if you see any notable problems in the code, tests, or documentation, please let me know.\n\nHope some of you find this cool and/or interesting! Questions, comments, critiques, etc. are all welcome."}, {"title": "Why can't Python/mypy type hint functions outside the function defintion?", "score": 4, "id": "11qf1ea", "url": "https://www.reddit.com/r/Python/comments/11qf1ea/why_cant_pythonmypy_type_hint_functions_outside/", "comms_num": 6, "created": 1678726657.0, "body": "What I have in mind is this bit of code:\n\n    from typing import Callable\n\n    function_signature = Callable[[int], float]\n    f: function_signature\n    \n    def f(x):\n        return x ** 0.5\n\ninstead of \n\n    def f(x:int) -> float:\n        return x ** 0.5\n\nThis would allow APIs to define a signature for callback functions, and users wouldn't have to retype the signature in their function definitions. \n\nI see this as analagous to allowing either\n\n    i: int = 10\n\nor\n\n    i: int\n    i = 10\n\nwhich is allowed and works fine. In fact, my suggestion is syntactically correct (the code runs), but doesn't have the intended effect on mypy."}, {"title": "Asks the Textualize developers anything", "score": 95, "id": "11qe2uv", "url": "https://www.reddit.com/r/Python/comments/11qe2uv/asks_the_textualize_developers_anything/", "comms_num": 61, "created": 1678724406.0, "body": "Hi r/Python,\n\nThere's a new version of Textual out, with a new [Tabs widget](https://textual.textualize.io/blog/2023/03/13/textual-0150-adds-a-tabs-widget/). \n\nYou might be sick of Textual posts by now, so I figured I would do an impromptu AMA. You can ask me or other Textual devs anything about Python, Textual, terminals, startups...\n\n[New Tabs widget](https://preview.redd.it/af7s7iju7jna1.png?width=1828&format=png&auto=webp&v=enabled&s=b39e2d6338a376cd2ae290a769bbc1d306ab8f10)"}, {"title": "Paperback version of my book Develop Cross Platform Desktop Applications using Python, Qt and PySide6 now also available", "score": 7, "id": "11qdb2y", "url": "https://www.reddit.com/r/Python/comments/11qdb2y/paperback_version_of_my_book_develop_cross/", "comms_num": 0, "created": 1678722624.0, "body": "There was a request to publish my new book also as paperback.  \nAnd here it is, at least in the US shop at [Amazon.com](https://www.amazon.com/dp/B0BXN5TFMM)  \nEnjoy  \n\n\n&#x200B;\n\nhttps://preview.redd.it/mkpczxmi2jna1.png?width=325&format=png&auto=webp&v=enabled&s=dfa3e5f9678547ddf1478ece29f58e5f127dc0f3"}, {"title": "What is more readable for people and more Pythonic", "score": 40, "id": "11qcp01", "url": "https://www.reddit.com/r/Python/comments/11qcp01/what_is_more_readable_for_people_and_more_pythonic/", "comms_num": 48, "created": 1678721176.0, "body": "Hello Good folks, just wondering to gather some opinions on this. Which one would you say is more pythonic.   \n\n\n    response = []\n    response = sorted(\n        [\n             something.name\n             for something in lot_of_somethings\n             if something.some_var.startswith(\"Hello There\") and \n             something.name in [\"blah\", \"bleh\", \"blue\"]     \n        ]\n    ) \n    return response\n\nOR  \n\n    response = []\n    for something in lot_of_somrthings:\n         if something.some_var.startswith(\"Hello There\") and something.name in [\"blah\", \"bleh\", \"blue\"]:        \n         response.append(something.name)\n    \n    return sorted(response)"}, {"title": "Save arbitrary files on YouTube persistently!", "score": 5, "id": "11qcdxg", "url": "https://www.reddit.com/r/Python/comments/11qcdxg/save_arbitrary_files_on_youtube_persistently/", "comms_num": 6, "created": 1678720460.0, "body": "After seeing how a similar Rust project blew up id thought id share my program here from a few months back.\n\nI made a simple program to turn any arbitrary file into a mp4 format by saving the binary information of the file in the form of colour blocks in the frames. Naturally, the original file can be reconstructed from the mp4 file. This means you can use YouTube as persistent data storage for even non video files (not that you should, but it is possible:D) !\n\nif you like to try it out or see the code it can be found on  GitHub [https://github.com/Joensw/persyst](https://github.com/Joensw/persyst)\n\n&#x200B;\n\n&#x200B;\n\n[The files encoded as videos look something like this](https://reddit.com/link/11qcdxg/video/hkqefzqwxina1/player)"}, {"title": "Introducing \ud83c\udf00 Ciclo: A functional training loops library for JAX", "score": 7, "id": "11qbiqr", "url": "https://www.reddit.com/r/Python/comments/11qbiqr/introducing_ciclo_a_functional_training_loops/", "comms_num": 0, "created": 1678718389.0, "body": "# \ud83c\udf00 Ciclo\n\n*A functional training loops library for JAX*\n\n`ciclo` provides a set of utilities and abstractions to build complex training loops with any JAX framework. `ciclo` defines a set of building blocks that naturally compose together and scale up to build higher-level abstractions, ranging from low-level custom training loops to Keras-like training APIs.\n\n[https://github.com/cgarciae/ciclo](https://github.com/cgarciae/ciclo)\n\n[code](https://preview.redd.it/srzavxixqina1.jpg?width=1938&format=pjpg&auto=webp&v=enabled&s=0014f50581761d5b8c1c5df741a3ad103ae7c835)"}, {"title": "Check out Codon: A Python compiler if you have a need for C/C speed", "score": 205, "id": "11qb8wx", "url": "https://www.theregister.com/2023/03/11/python_codon_compiler/?utm_medium=share&utm_content=article&utm_source=reddit", "comms_num": 33, "created": 1678717749.0, "body": ""}, {"title": "I made a CLI to streamline Ethical Hacking workflow", "score": 3, "id": "11q8vbh", "url": "https://www.reddit.com/r/Python/comments/11q8vbh/i_made_a_cli_to_streamline_ethical_hacking/", "comms_num": 2, "created": 1678711945.0, "body": "Hello everyone! I created this project to help streamline my ethical hacking workflow. It includes various functions, such as:\n\n* Convert: Allows you to apply a specified decoding or hashing function to input data. (e.g. URL, HTML, Base64, ASCII, Hex, Octal, Binary & GZIP).\n* Enumerator: Enumerates subdomains for a given domain using subfinder, amass, assetfinder, findomain, and active enumeration.\n* Capture: Sends a GET request to a specified URL, captures the request headers, extracts the hostname, path, and cookies, and missing headers.\n* Portscan: Scans a host for common or all possible open ports.\n* Certificate: Checks the SSL/TLS certificate information for a given URL.\n* Storm: Sends HTTP requests to a given URL with a specified number of attacks and requests.\n* Disturb: Sends multiple HTTP requests to the specified URL with the same payload.\n* Fuzz: Tests your web applications against path fuzzing and file fuzzing.\n* CIDR: Looks up the CIDR range for a company's domain name from its RDAP record.\n* CVE: Retrieves CVE data for a specific product name (company name) from NIST's National Vulnerability Database (NVD). VPS: Allows you to log in to your VPS with a single command.\n\nI want to express my gratitude to many bug bounty hunters who helped me with this project. I believe it can be useful for anyone interested in ethical hacking.\n\nPlease let me know your feedback, as I am eager to make this tool the easiest and most minimalistic for the community.\n\nHack on!\n\n[**https://github.com/kitsec-labs/kitsec-core**](https://github.com/kitsec-labs/kitsec-core)"}, {"title": "i created a new programing language that run on python", "score": 0, "id": "11q8gq0", "url": "https://www.reddit.com/r/Python/comments/11q8gq0/i_created_a_new_programing_language_that_run_on/", "comms_num": 6, "created": 1678710842.0, "body": "I created a simple programming language with python.  \nthe programming language called Mana.\n\ncheck it out try to program something there and tell me if there is an error and how to improve it.\n\n[https://github.com/IdanHajbeko/Mana-programming-language](https://github.com/IdanHajbeko/Mana-programming-language)"}, {"title": "What are the good sources to learn machine learning in Python??", "score": 65, "id": "11q64a0", "url": "https://www.reddit.com/r/Python/comments/11q64a0/what_are_the_good_sources_to_learn_machine/", "comms_num": 41, "created": 1678703605.0, "body": "I've recently finished learning about python and now I want to learn about machine learning...\nIt is confusing as there are so many modules and I just can't choose between them....\nIf anyone could suggest me 5 best modules I should learn it would be a great help...."}, {"title": "How to run a Python Flask server inside a readonly Docker container", "score": 25, "id": "11q3yuw", "url": "https://www.kosli.com/blog/how-to-run-your-python-flask-server-inside-a-readonly-docker-container/", "comms_num": 4, "created": 1678695715.0, "body": ""}, {"title": "How do you research for bugs/issues solutions?", "score": 76, "id": "11q16io", "url": "https://www.reddit.com/r/Python/comments/11q16io/how_do_you_research_for_bugsissues_solutions/", "comms_num": 32, "created": 1678685494.0, "body": "Hi everyone, I was wondering what is the exact process do you use to find out solutions for your code issues. Do you jump straight to StackOverflow? Or do you start by doing something different?"}, {"title": "procedurally generated fantasy names", "score": 24, "id": "11pzdej", "url": "https://www.reddit.com/r/Python/comments/11pzdej/procedurally_generated_fantasy_names/", "comms_num": 15, "created": 1678679722.0, "body": "Hello! This is one of my first projects in python. What this does is constructs a name from scratch. I found most \"name generators\" just pull from a list of predefined names and spit one or some out. Instead, this \"procedurally\" generates, if you will names based on syllables that it constructs and then joins together. I started this Friday night and it was my first time working with a GUI so I am pretty proud of what has come out so far. I have some ideas for additions but at its core as of right now it does exactly what I want it to do. It has options to export the names to a CSV file, or to copy to your clipboard as either text or an image to share elsewhere.\n\n[https://github.com/Lanecrest/RanGen-Fantasy-Names](https://github.com/Lanecrest/RanGen-Fantasy-Names)\n\nI am happy to hear what anyone has to think about the app itself or also any suggestions to the code, etc :)"}, {"title": "Need Guidance on Python Script", "score": 4, "id": "11pv6om", "url": "https://www.reddit.com/r/Python/comments/11pv6om/need_guidance_on_python_script/", "comms_num": 18, "created": 1678668184.0, "body": "I'm a sales and online marketer by trait with 16 years experience working with 4 different agencies here in Austin, Texas. I'm not a programmer. But I have about a dozen projects under my belt and worked with a lot programmers in the past. And I see the value of these python tools and emerging technologies that make everything easier today it seems like. \n\nI wanted to know, what would be the best route to take because I have two types of solutions I want to create while trying to weigh in on expense and time.\n\nOne is a Google Maps email lead scrapper tool.(linkedin also) This is right down my alley as I already have a word of mouth social media referral app. \n\nAnd this other solution is social media listening tool that could track keywords/tags from posts on social networks.This one brings way more value to the table and would be my first priority because it could easily sell as high ticket offer.\n\nI want to hire python expert or find partner with sweat equity. Due to this situation. I don't want to take on the wrong project. I'm trying to weight the difference between which one requires more advanced programming, has the least possible technical hurdles and ease on budget for a team of two? One marketer and one programmer. \n\nFYI:\n\nI'm planning to add this gmaps scrapper tool as 60 day freebie for attendees of my webinar class. The app Im promoting is a lead generation referral app called friendloops. And basically it's a high ticket sales webinar. Whoever doesn't bye the referral app on this webinar, are then placed into a sales funnel that sells gmaps scrapper on monthly subscription.\n\nThe reason I'm sharing this much detail is because I don't want people to think I'm just throwing things up in the air to see if they stick. I plan to plug in the gmaps scrapper(or listening tool) into a sales funnel along side a social omni present retargeting campaign. The very same campaigns I used to create for marketing agencies here in Austin, and across the country. I'll be using my own money to fund the funnels."}, {"title": "Monday Daily Thread: Project ideas!", "score": 6, "id": "11pu7bv", "url": "https://www.reddit.com/r/Python/comments/11pu7bv/monday_daily_thread_project_ideas/", "comms_num": 4, "created": 1678665611.0, "body": "Comment any project ideas beginner or advanced in this thread for others to give a try! If you complete one make sure to reply to the comment with how you found it and attach some source code! If you're looking for project ideas, you might be interested in checking out Al Sweigart's, [\"The Big Book of Small Python Projects\"](https://inventwithpython.com/bigbookpython/) which provides a list of projects and the code to make them work."}, {"title": "A Reddit discount on my Python course for beginners", "score": 0, "id": "11poti2", "url": "https://www.reddit.com/r/Python/comments/11poti2/a_reddit_discount_on_my_python_course_for/", "comms_num": 2, "created": 1678652715.0, "body": "Hey r/Python! I'm testing the waters here just to see if this is something you're interested in.\n\nI'm the author of this [Python course for beginners](https://python.land/product/python-course) called **Python Fundamentals**. It's a course for beginners that will properly get you started with Python. It's the culmination of about 4 years of writing about and teaching Python. It includes quizzes and practice and allows you to learn at your own pace. You'll get a certificate of completion after finishing the course. So far, people like my course, and I got some good reviews!\n\nI'm offering the coupon code `REDDIT_100` which gives you a 50% discount on the course. It's limited to the first 100 people for now (to prevent a potential server overload). \n\nIf you have any questions, leave me a message or reply here :)"}, {"title": "Best practices for caching data between runs (non-local library)?", "score": 12, "id": "11po5eq", "url": "https://www.reddit.com/r/Python/comments/11po5eq/best_practices_for_caching_data_between_runs/", "comms_num": 10, "created": 1678651160.0, "body": "I've got some local code that caches the results of slow functions in a `.cache` folder in my project root directory. I would like to publish this code on PyPI, and I'm looking for some best practices for dealing with this `.cache` directory.\n\nI can put it in the user's temp directory and make provisions for race conditions, bad data, etc.\n\nBut I'm wondering if this is a \"best practice.\" Is there a better way to handle this?\n\nOf course, I'm potentially *over*writing caches, so there are some decisions to be made there.\n\nFWIW:\n\n* cache size is small.\n* speed is a low priority."}, {"title": "How virtual environments work", "score": 20, "id": "11pmy0v", "url": "https://snarky.ca/how-virtual-environments-work/", "comms_num": 12, "created": 1678648330.0, "body": ""}, {"title": "First steps into Python (again!) with VSCode", "score": 0, "id": "11pjzm0", "url": "https://www.reddit.com/r/Python/comments/11pjzm0/first_steps_into_python_again_with_vscode/", "comms_num": 11, "created": 1678641490.0, "body": "I am once again attempting to pick up Python--as a pure (Windows!) hobbyist who programmes for pleasure and to automate tedious commandline tasks. By inclination I am a Perl and C++ programmer but... I'm also an old duffer and no longer have the necessary patience to relearn all the niceties and dogma of C++. Sadly Perl does not have a modern GUI IDE that provides all the intellisense-style features that I have become so used to leaning on in my decrepitude. So... Python! Maybe.\n\nI have read posts from several home-programmers similar to myself who suggest using 'VSCode' instead of 'PyCharm' as an IDE--which seemed like a good idea. I do however have a few questions which I may update as things occur to me. I am of course extremely grateful in advance to anyone who takes the time to answer.\n\nFirstly, when inside 'VSCode' do I need to install *both* the 'Python' *and* the 'Pylance' extensions? The official Microsoft FAQ is somewhat unclear. It could be that 'Pylance' is integrated into to the 'Python' extension.\n\nSecondly, because I am using a 16 years old machine I cannot update beyond Windows 7. I appreciate official support has ended and so on and so forth. However is Python still viable on a Windows 7 PC?\n\nMy final question for now is are there any good sites that acclimatise a new Python programmer to the language? An ideal would be something like a Python version of 'Perl Mavern' or the 'Perl Cookbook'. Most of the online material I have found seems to be focussed on professional programmers who use the language to make a living. Sadly experience has proven that 'StackExchange' is... Not a friendly place for the beginner and still less the hobbyist is perhaps the politest way to put it.\n\nAnyway... Many thanks to anyone who takes the time to read this or reply."}, {"title": "Why Python keeps growing, explained", "score": 185, "id": "11pice9", "url": "https://github.blog/2023-03-02-why-python-keeps-growing-explained/", "comms_num": 40, "created": 1678637640.0, "body": ""}, {"title": "Can we expand on the usage of the walrus operator?", "score": 1, "id": "11phtui", "url": "https://www.reddit.com/r/Python/comments/11phtui/can_we_expand_on_the_usage_of_the_walrus_operator/", "comms_num": 7, "created": 1678636416.0, "body": "I found a way to run asynchronous tasks using `asyncio.gather` and immediately assign the first result to a variable. This is nice, because it uses fewer lines of code. The idea is that here one task returns the result directly, whilst the other stores the result in a class attributes. This is what the syntax looks like:\n\n    response = (_ :=  await asyncio.gather(\n        send_get_request(*args),\n        some_class.load_some_data()\n    ))[0]\n\nIt works because the walrus assignment is execute first, and the result of `gather` is stored in the temporary variable `_`. Now I can get the desired response using the desired index. I know in this example there might be a better way to perform this task, like so:\n\n    response, _ = await asyncio.gather(\n        send_get_request(*args),\n        some_class.load_some_data()\n    )\n\nCan someone think of a scenario where the  `(_ := <some_task> )` is useful? And whether we can consider this pythonic (likely not). I know some already find the walrus operator dubious, and this syntax makes it even more dubious, but I find it an interesting topic and would like to hear some thoughts."}, {"title": "Python and KIVY for reading info from micro-controller", "score": 0, "id": "11phabb", "url": "https://www.reddit.com/r/Python/comments/11phabb/python_and_kivy_for_reading_info_from/", "comms_num": 0, "created": 1678635065.0, "body": " I created app for reading info from port Arduino. I used Kivy and added one a button, a title and a spinner. User can chose port and read info.\n\nHere my code.\n\n[https://github.com/Pra1seTheSun322/Read-information-from-Arduino-UNO](https://github.com/Pra1seTheSun322/Read-information-from-Arduino-UNO)"}, {"title": "Parser combinator in Python", "score": 11, "id": "11pfh05", "url": "https://www.reddit.com/r/Python/comments/11pfh05/parser_combinator_in_python/", "comms_num": 2, "created": 1678630368.0, "body": "https://github.com/frndmg/pyrsec\n\nI know we have many already, I was just in the look for some type safe, modern looking, with operator support implementation and ended up with my own \ud83d\ude05.\n\nHope you like it."}, {"title": "Is something wrong with FastAPI?", "score": 195, "id": "11pfgjo", "url": "https://www.reddit.com/r/Python/comments/11pfgjo/is_something_wrong_with_fastapi/", "comms_num": 142, "created": 1678630332.0, "body": "I want to build a REST api with Python, it is a long term project (new to python). I came across FastAPI and it looks pretty promising, but I wonder why there are 450 open PRs in the repo and the insights show that the project is heavily dependent on a single person. Should I feel comfortable using FastAPI or do you think this is kind of a red flag?"}, {"title": "StructIO: Library for unpacking and packing binary files", "score": 5, "id": "11per16", "url": "https://www.reddit.com/r/Python/comments/11per16/structio_library_for_unpacking_and_packing_binary/", "comms_num": 3, "created": 1678628291.0, "body": "These are generic functions combined with a file-like stream for unpacking and packing binary files. I learned how to make them while trying to figure out how to read the game files of The Sims 2.\n\n[https://github.com/lingeringwillx/StructIO](https://github.com/lingeringwillx/StructIO)\n\nThoughts and opinions?\n\nOther similar tools that perform the same task. This seems to be a bit of a niche issue and so the tools for working with it are hard to find:\n\n[bitstring](https://github.com/scott-griffiths/bitstring)\n\n[Kaitai Struct](https://kaitai.io)\n\n[numpy.frombuffer](https://numpy.org/doc/stable/reference/generated/numpy.frombuffer.html) and [numpy.fromfile](https://numpy.org/doc/stable/reference/generated/numpy.fromfile.html)\n\n[Construct](https://construct.readthedocs.io/en/latest/)\n\n[rawutil](https://github.com/Tyulis/rawutil)\n\nThe last time I posted something here years ago my work was trashed, so I'm worried about posting here again :p"}, {"title": "Trying to solve The Collatz Conjecture with python", "score": 4, "id": "11pe3qf", "url": "https://www.reddit.com/r/Python/comments/11pe3qf/trying_to_solve_the_collatz_conjecture_with_python/", "comms_num": 18, "created": 1678626323.0, "body": "Trying to solve The Collatz Conjecture with python\n\n&#x200B;\n\nhttps://preview.redd.it/rteikgkc4bna1.jpg?width=3104&format=pjpg&auto=webp&v=enabled&s=6d06d5324d2735ebd935f8f55430e85f0dfbf324"}, {"title": "Godot Fast Android Export", "score": 4, "id": "11pe06l", "url": "https://www.reddit.com/r/Python/comments/11pe06l/godot_fast_android_export/", "comms_num": 9, "created": 1678626045.0, "body": "Have you ever used Godot to write Android apps?  \nGodot is crazy fast in deploying that app to your mobile.  Seems that the APK file is already ready and all the GDScripts and Scenes where just extended to the end of that APK as resources. Even Android Studio is much slower.  \n\n\nWhat way can we go using Python on Android?  \nWhen I used PyQt5 the freezing, compiling and deploying process where soo slow.  \nWould\\`nt it be nice to have the Python engine and modules ready compiled and just also add our Python code as resource?  \n\n\nHow can we do that?  \nIs there a solution a la pyqtdeploy from riverbank for PySide6 at all, which we might tweak?"}, {"title": "How to calculate GPT-3 API call costs using python?", "score": 4, "id": "11pc8pr", "url": "https://bibinhashley.medium.com/how-to-estimate-gpt-3-api-call-costs-with-python-3a33f195a2dc", "comms_num": 1, "created": 1678620147.0, "body": "Tutorial for calculating GPT-3 API costs for each call."}, {"title": "Netmeasure - measure Internet connection quality", "score": 4, "id": "11pbn4k", "url": "https://www.reddit.com/r/Python/comments/11pbn4k/netmeasure_measure_internet_connection_quality/", "comms_num": 2, "created": 1678618011.0, "body": "Netmeasure is a Python library for measuring Internet connection quality in a structured and consistent way.\n\nIt incorporates a variety of measurements that you can run from the command line or incorporate into your own applications.\n\nNetmeasure is a fork of an orphaned commercial open source measurement library that I created with some colleagues a few years ago. Now that it's been re-animated I hope that it can be of some value  to the community.\n\n[https://github.com/amorphitec/netmeasure](https://github.com/amorphitec/netmeasure)  \n[https://pypi.org/project/netmeasure/](https://pypi.org/project/netmeasure/)\n\nhttps://preview.redd.it/8zts10qefana1.png?width=1138&format=png&auto=webp&v=enabled&s=5b4e4e6d3b2d5baed82d5cb70c50b3ef866957d6"}, {"title": "FastKafka - free open source python lib for building Kafka-based services", "score": 131, "id": "11paz9u", "url": "https://www.reddit.com/r/Python/comments/11paz9u/fastkafka_free_open_source_python_lib_for/", "comms_num": 17, "created": 1678615610.0, "body": "We were searching for something like FastAPI for Kafka-based service we were developing, but couldn\u2019t find anything similar. So we shamelessly made one by reusing beloved paradigms from FastAPI and we shamelessly named it FastKafka. The point was to set the expectations right - you get pretty much what you would expect: function decorators for consumers and producers with type hints specifying Pydantic classes for JSON encoding/decoding, automatic message routing to Kafka brokers and documentation generation.\n\nPlease take a look and tell us how to make it better. Our goal is to make using it as easy as possible for some how has experience with FastAPI.\n\n[https://github.com/airtai/fastkafka](https://github.com/airtai/fastkafka)"}, {"title": "An opinionated Python boilerplate", "score": 402, "id": "11pah4o", "url": "https://duarteocarmo.com/blog/opinionated-python-boilerplate", "comms_num": 70, "created": 1678613826.0, "body": ""}, {"title": "Text to image flowchart creation using mermaid", "score": 8, "id": "11p96zs", "url": "https://mermaid.js.org/syntax/flowchart.html", "comms_num": 0, "created": 1678608905.0, "body": "I stumbled upon this over the weekend, noticing that Notion allows you to create \"mermaid blocks'.\n\nWhat is mermaid? It's a JavaScript tool that takes text input and creates flowcharts, and other diagrams. I'm always struggling to keep block diagrams up to date, and it's even worse in a team, things fall out of date really quick.\n\nSo I'm excited to try this, and while I'd love a python tool that compiles mermaid code snippets, a useful alternative is using the mermaid API to create the images in python.\n\nDoes anyone have an alternative that's more useful, or commonly used?"}, {"title": "Using ChatGPT API in Python (feat. DALL-E, Karlo)", "score": 11, "id": "11p7yrq", "url": "https://www.reddit.com/r/Python/comments/11p7yrq/using_chatgpt_api_in_python_feat_dalle_karlo/", "comms_num": 0, "created": 1678604354.0, "body": "**Using ChatGPT API in Python (feat. DALL-E, Karlo)**\n\n[https://wooiljeong.github.io/python/chatgpt-api/](https://wooiljeong.github.io/python/chatgpt-api/)\n\nHello, I've written a post on how to use the ChatGPT API (ChatCompletions) in Python, which was recently released.\n\nIn addition, I've also included a method for asking ChatGPT to imagine something and having image generating AIs like Karlo and DALL-E draw pictures based on the results. For example, I automated the process of requesting an imagined image of what buildings might look like if humans settled on Mars from ChatGPT and then having a picture drawn based on the results.\n\nI've attached pictures drawn by Karlo API from Kakao and DALL-E from OpenAI. The impressive thing is that the results of the different AIs' interpretations based on ChatGPT's imaginative input are unique and meaningful. As the shared link is written in Korean, I recommend using a Chrome extension to translate the content into English for those who are interested.\n\n[ The image of a human settlement on Mars drawn by DALL-E. ](https://preview.redd.it/58p82nmva9na1.jpg?width=1024&format=pjpg&auto=webp&v=enabled&s=2ca4f49b746141321ce367712456c935af3f1fda)\n\n[ The image of a human settlement on Mars drawn by Karlo ](https://preview.redd.it/ohjqtolwa9na1.jpg?width=1024&format=pjpg&auto=webp&v=enabled&s=9e30b01af6124a72927da7fe3317bae26dd7290f)"}, {"title": "Best places/ways to learn APIs for career progression?", "score": 26, "id": "11p4fd0", "url": "https://www.reddit.com/r/Python/comments/11p4fd0/best_placesways_to_learn_apis_for_career/", "comms_num": 9, "created": 1678593013.0, "body": "Looking for YT videos, chat chains, something to help me understand APIs and how to build them to use them effectively."}, {"title": "Tutorial: Daily scheduled Python app that adds stock prices to Airtable", "score": 8, "id": "11p21pa", "url": "https://splootcode.io/2023/03/10/automatically-tracking-stock-prices-with-the-airtable-api/", "comms_num": 0, "created": 1678586264.0, "body": ""}, {"title": "Matplotlib showing close but incorrect plot?", "score": 18, "id": "11p1ncc", "url": "https://www.reddit.com/r/Python/comments/11p1ncc/matplotlib_showing_close_but_incorrect_plot/", "comms_num": 25, "created": 1678585128.0, "body": "&#x200B;\n\nhttps://preview.redd.it/ijy6wrntp7na1.png?width=1153&format=png&auto=webp&v=enabled&s=e7ca32ae47d023d2916c35827d11eb6a360a411b"}, {"title": "Sunday Daily Thread: What's everyone working on this week?", "score": 8, "id": "11ozevp", "url": "https://www.reddit.com/r/Python/comments/11ozevp/sunday_daily_thread_whats_everyone_working_on/", "comms_num": 18, "created": 1678579212.0, "body": "Tell /r/python what you're working on this week! You can be bragging, grousing, sharing your passion, or explaining your pain. Talk about your current project or your pet project; whatever you want to share."}, {"title": "Web Scraping Google News Using Python", "score": 12, "id": "11ov19i", "url": "https://serpdog.io/blog/web-scraping-google-news-using-python/", "comms_num": 2, "created": 1678568580.0, "body": ""}, {"title": "I wrote an article about Pandas Extension types with an example of how to create your own. Thought it might be useful here!", "score": 26, "id": "11orcv0", "url": "https://link.medium.com/Gf6rnRHu5xb", "comms_num": 0, "created": 1678559629.0, "body": "Let me know what you think and any feedback you might have"}, {"title": "Near-Earth Objects & Asteroids: Some space science", "score": 6, "id": "11or701", "url": "https://www.reddit.com/r/Python/comments/11or701/nearearth_objects_asteroids_some_space_science/", "comms_num": 0, "created": 1678559221.0, "body": "Hey everyone,\n\nI wanted to write this small post since a few weeks, but somehow lost track due to new videos and coding I am currently doing in parallel.\n\nAnyway. In the last couple of weeks I created a small Python based project series on Near-Earth Objects (NEOs). Quick intro: NEOs are objects that approach the Sun within a distance of max. 1.3 AU. 1.0 AU corresponds to the average distance between Earth and Sun (around 150 Million km).\n\nYou may hear sometimes of these objects in the media when an asteroid is approaching us, is having a close flyby, or is detected before it vanishes while disintegrating in the night sky, [like this one](https://www.bbc.com/news/uk-64621721).\n\n*But how many objects are out there? Where are they and how do they \"travel\" around the Sun? Are they bright? If yes, how bright? How can we compute their brightness? Can we also model a theoretical distribution of NEOs to get an understanding where we have \"to look at\"? And what kind of telescopes are needed?*\n\nThese are ... a lot of questions. And in my 16 parts tutorial I try to tackle all questions as thoroughly as possible. If you are interested in getting an understanding how this particular topic is handled in \"space science\", feel free to take a look at my GitHub repository and the corresponding explanatory videos.\n\nSpace Science is approachable; and there are tons of libraries and Open Access data for Python. I try to gather my academic knowledge and create these tutorials to support students, free-time coders and everyone, who is into Python and astronomy.\n\nEnjoy!\n\nThomas\n\n[GitHub Link](https://github.com/ThomasAlbin/Astroniz-YT-Tutorials/tree/main/%5BProject%5D-Near-Earth-Objects)\n\n[YouTube Playlist](https://www.youtube.com/watch?v=tVyFqVuuM6g&list=PLNvIBWkEdZ2hL5be8mQdpTU3BjhKIhD6L)"}, {"title": "Please break my HTML minifier", "score": 0, "id": "11oqhtn", "url": "https://www.reddit.com/r/Python/comments/11oqhtn/please_break_my_html_minifier/", "comms_num": 16, "created": 1678557536.0, "body": "So I recently saw this post here where this guy got absolutely wrecked for posting his shitty code here, and not gonna lie, that was pretty funny.\n\nSo here is my turn! \n\nSince the most popular Python lib for minifying HTML (htmlmin) is way too slow, I decided to make my own and honestly I'm surprised how short it is. It can't be that simple right? It is also about 10x faster than htmlmin. I challenge you to break this code to produce incorrect HTML:\n\n    from html.parser import HTMLParser\n    import rjsmin\n    import rcssmin\n\n\n    class MinifyHTMLParser(HTMLParser):\n        def __init__(self):\n            super().__init__()\n            self.minified_html = \"\"\n\n        def handle_decl(self, decl: str) -> None:\n            self.minified_html += f\"<!{decl}>\"\n\n        def unknown_decl(self, data: str) -> None:\n            self.minified_html += f\"<!{data}>\"\n\n        def handle_pi(self, data):\n            self.minified_html += f\"<?{data}>\"\n\n        def handle_startendtag(self, tag, attrs):\n            self.add_tag(tag, attrs, \"/>\")\n\n        def handle_entityref(self, name):\n            self.minified_html += f\"&{name};\"\n\n        def handle_charref(self, name):\n            self.minified_html += f\"&#x{name};\"\n\n        def handle_starttag(self, tag, attrs):\n            self.add_tag(tag, attrs, \">\")\n\n        # TODO Rename this here and in `handle_startendtag` and `handle_starttag`\n        def add_tag(self, tag, attrs, end_tag):\n            self.minified_html += f\"<{tag}\"\n            for attr in attrs:\n                self.minified_html += f' {attr[0]}'\n                if attr[1] is not None:\n                    self.minified_html += f'=\"{attr[1]}\"'\n            self.minified_html += end_tag\n\n        def handle_endtag(self, tag):\n            self.minified_html += f\"</{tag}>\"\n\n        def handle_data(self, data):\n            if self.lasttag == \"style\":\n                self.minified_html += minify_css(data).strip()\n            elif self.lasttag == \"script\":\n                self.minified_html += minify_js(data).strip()\n            elif self.lasttag in [\"textarea\", \"pre\", \"code\"]:\n                self.minified_html += data\n            else:\n                self.minified_html += data.strip()\n\n    parser = MinifyHTMLParser()\n    parser.feed(html_text)\n    return parser.minified_html"}, {"title": "How to debug complex tool chains?", "score": 12, "id": "11omjc1", "url": "https://www.reddit.com/r/Python/comments/11omjc1/how_to_debug_complex_tool_chains/", "comms_num": 5, "created": 1678547521.0, "body": "Bat files calling python scripts and execution that jumps between multiple python interpreters and virtual environments. How do I debug that in PyCharm.\n\nI only know how to debug within one specific environment (global, virtual environment, app environment - like Maya, Blender, etc) but for chains where the execution jumps around a lot I tend to just run the whole thing manually from the entry point and so only print debugging (and it's time consuming). \n\nHow can I be more effective here?"}, {"title": "Easy Python scripts to impress the business", "score": 153, "id": "11olib6", "url": "https://www.reddit.com/r/Python/comments/11olib6/easy_python_scripts_to_impress_the_business/", "comms_num": 99, "created": 1678544845.0, "body": "Hi Python Devs, which quick and easy scripts have you written that impressed the business and got you some kudos without requiring any real effort on your part?"}, {"title": "New book available: Python GUI - Develop Cross Platform Desktop Applications using Python, Qt and PySide6", "score": 321, "id": "11ola58", "url": "https://www.reddit.com/r/Python/comments/11ola58/new_book_available_python_gui_develop_cross/", "comms_num": 60, "created": 1678544223.0, "body": "I have just released a new book about Python and **PySide6** based on my book about PyQt5.  \nMany thanks to this community for giving me some requests to be implemented in this book.  \nI have added user controls including transitions.  \n\\- I am showing a sample of a line of business app including database access using tinydb, which is also written in Python.  \n\\- I have added a multi-treading example, where HTML will be created in the background on given markdown.  \n\\- I have also added a filterable dropdown listbox.  \nOne user control dynamically creates icons in different colors based on SVG on the fly.   \nAnd many more...  \nI will send some free copies out to those people how inspired me to add additional content and the rest of you can get the book on Amazon in [English](https://kdp.amazon.com/amazon-dp-action/us/dualbookshelf.marketplacelink/B0BY3PKBSM) and [German](https://kdp.amazon.com/amazon-dp-action/de/dualbookshelf.marketplacelink/B0BXYPZ6VY).\n\nIf you have ideas or requests what else to show in this book, then please let me know.\n\nhttps://preview.redd.it/5wq1tpxq84na1.png?width=1600&format=png&auto=webp&v=enabled&s=225dff3d591a855fe14a7cb4a0a53311607609ba"}, {"title": "I made Flask-Squeeze 2.0, it squeezes responeses with minification and compression!", "score": 28, "id": "11okzqb", "url": "https://www.reddit.com/r/Python/comments/11okzqb/i_made_flasksqueeze_20_it_squeezes_responeses/", "comms_num": 10, "created": 1678543442.0, "body": "Hi guys! I just wanted to share the Flask extension [Flask-Squeeze](https://github.com/mkrd/Flask-Squeeze) with you. It will minify HTML, JS and CSS, and compress responses with brotli, deflate, or gzip depending on the request, with almost zero configuration.\n\nI know there are other extensions aswell, but as far as I know, none of them have a complete feature set of minification AND compression.\nI just published version 2.0, which noch also includes HTML minification!\n\nLet me know what you think, and what else could be added :)"}, {"title": "SayIt: a simple text-to-speech CLI app", "score": 6, "id": "11ojkb4", "url": "https://www.reddit.com/r/Python/comments/11ojkb4/sayit_a_simple_texttospeech_cli_app/", "comms_num": 5, "created": 1678539447.0, "body": "I made a simple CLI app that can read any text aloud: https://github.com/jabbalaci/say-it . It uses the excellent gTTs library. It can be integrated in other projects too. Possible use cases: PDF to audiobook conversion, practicing pronunciation (for English learners), etc."}, {"title": "Python Cybersecurity \u2014 Build your own python tools (PortScanner, Visual Network Tracker and Anonymous FTP Scanner)", "score": 115, "id": "11ohb9e", "url": "https://www.reddit.com/r/Python/comments/11ohb9e/python_cybersecurity_build_your_own_python_tools/", "comms_num": 0, "created": 1678532280.0, "body": "**Python Cybersecurity \u2014 PortScanner**\n\nBuild a simple Port Scanner using the Python Programming language. Port Scanner is an application designed to probe a server or host for open ports. Such an application may be used by administrators to verify security policies of their networks and by attackers to identify network services running on a host and exploit vulnerabilities.\n\n**Link**: [https://youtu.be/bH-3PuQC\\_n0](https://youtu.be/bH-3PuQC_n0)\n\n**Python Cybersecurity \u2014 Visual Network Tracker**\n\nDive into Network Traffic visualization using the Python programming language, Wireshark and Google Maps. This tutorial covers the implementation steps needed to take a file of network traffic and convert it into a visual presentation using Google Maps.\n\n**Link**: [https://youtu.be/xuNuy8n8u-Y](https://youtu.be/xuNuy8n8u-Y)\n\n**Python Cybersecurity \u2014 Anonymous FTP Scanner**\n\nBuild a simple FTP Scanner using the Python Programming language. Anonymous FTP is a means by which archive sites allow general access to their archives of information. These sites create a special account called \u201canonymous\u201d\n\n**Link**: [https://youtu.be/BIZfRodSW9w](https://youtu.be/BIZfRodSW9w)"}, {"title": "[GlassJar] Stores records as Python objects in the database!", "score": 10, "id": "11oh9jc", "url": "https://www.reddit.com/r/Python/comments/11oh9jc/glassjar_stores_records_as_python_objects_in_the/", "comms_num": 22, "created": 1678532102.0, "body": "Hi guys!\n\nI created a pickled-based database for storing Python objects. [GlassJar](https://github.com/furkanonder/glassjar) is a database that, unlike other databases, stores records as Python objects in the database and allows you to use them with ORM.\n\n*Let's look at the small example;*\n\nNormally, we can't directly store the Python dict in a database. But in the [GlassJar](https://github.com/furkanonder/glassjar) we can do that!\n\n    >> from glassjar.model import Model\n    >>>\n    >>> class Item(Model):\n    ...     name: str\n    ...     attrs: dict\n    ...\n    >>> item = Item.records.create(name=\"item\", attrs={\"color\": \"red\", \"shape\":\"rectangle\"})\n    >>> item.as_dict()\n    {'name': 'item', 'attrs': {'color': 'red', 'shape': 'rectangle'}}\n    >>> item2 = Item.records.create(name=\"item 2\", attrs={\"color\": \"blue\", \"shape\":\"triangle\"})\n    >>> Item.records.first()\n    Item(name='item', attrs={'color': 'red', 'shape': 'rectangle'})\n    >>> Item.records.last()\n    Item(name='item 2', attrs={'color': 'blue', 'shape': 'triangle'})\n    >>>\n\nCheck out our [documentation](https://furkanonder.github.io/glassjar/) to learn more!"}, {"title": "Other cool python feature recommendations", "score": 6, "id": "11odpcf", "url": "https://www.reddit.com/r/Python/comments/11odpcf/other_cool_python_feature_recommendations/", "comms_num": 4, "created": 1678519287.0, "body": "I have recently learned about Python turtle and thought it was really cool. I am new to python and I am looking for other beginner friendly yet powerful modules for visuals/ drawing/ animation/ graphics that I can exploit in python. Any recommendations of where I should look next would be appreciated."}, {"title": "Cake Day - 1st Job", "score": 117, "id": "11o91ik", "url": "https://www.reddit.com/r/Python/comments/11o91ik/cake_day_1st_job/", "comms_num": 20, "created": 1678503820.0, "body": "Just wanted to celebrate my Reddit cake day by announcing that I may be getting my first programming job as I got an email today to be moved forward!!! That\u2019s all. Hope the best for you all."}, {"title": "pip install openfrom", "score": 0, "id": "11o5rvs", "url": "https://www.reddit.com/r/Python/comments/11o5rvs/pip_install_openfrom/", "comms_num": 2, "created": 1678494500.0, "body": "hi guys, just wanted to share a python script that opens multipe endpoints from a given URL.\n\n[https://github.com/chozeur/openfrom](https://github.com/chozeur/openfrom)"}, {"title": "Config management for deep learning", "score": 1, "id": "11o5a6m", "url": "https://www.reddit.com/r/Python/comments/11o5a6m/config_management_for_deep_learning/", "comms_num": 2, "created": 1678493208.0, "body": "This is my first ever python package I've released, hope you guys find it useful. I'm open to any feedback (however harsh), thanks!\n\ngit: [https://github.com/sashank-tirumala/yaml_config_override](https://github.com/sashank-tirumala/yaml_config_override)\\\n\npypi:  [https://pypi.org/project/yaml-config-override/](https://pypi.org/project/yaml-config-override/)\n\nThe idea is simple, you no longer need to write argparse for your config files for machine learning and deep learning projects (or any project really). Just call a function and it will write the arg parse for you, so that you can load config files and at the same time override them from the command line interface. Below is a more detailed description:\n\n# YAML CONFIG OVERRIDE\nYAML Config Override is an extremely lightweight command line interface to your YAML configuration file.\nJust create a yaml config file, and yaml_config_override will add command line arguments to it automatically.\nSuppose you have a YAML file `test.yaml`:\n```yaml\nouter:\n    x: 0\n    inner:\n        y: 1\n        eveninner:\n            z: abc\n```\nthen you can use it in the code `main.py`:\n```python\nfrom yaml_config_override import add_arguments\nimport yaml\nfrom pathlib import Path\nmy_config_path = 'test.yaml'\nconf = yaml.safe_load(Path(my_config_path).read_text())\nconf = add_arguments(conf)\nprint(conf)\n```\nNow you can call main.py as follows:\n```\npython main.py --outer.x 2 --outer.inner.eveninner.z hello\n```\nYour program output will be:\n```\n{'outer': {'x': 2, 'inner': {'y': 1, 'eveninner': {'z': 'hello'}}}}\n```\n\nAlternatively if you want to pass the config file as a command line argument you can modify the code as follows:\n```python\nfrom yaml_config_override import add_arguments\nconf = add_arguments()\n```\n\nNow you call main.py as :\n```\npython main.py --config test.yaml --outer.x 2 --outer.inner.eveninner.z hello\n```"}, {"title": "Saturday Daily Thread: Resource Request and Sharing! Daily Thread", "score": 1, "id": "11o54ib", "url": "https://www.reddit.com/r/Python/comments/11o54ib/saturday_daily_thread_resource_request_and/", "comms_num": 2, "created": 1678492825.0, "body": "Found a neat resource related to Python over the past week? Looking for a resource to explain a certain topic?\n\nUse this thread to chat about and share Python resources!"}, {"title": "PSA: conda-libmamba-solver can cut two hours off of your Anaconda install, but has only 47 GitHub stars. It deserves more praise.", "score": 324, "id": "11o3n76", "url": "https://www.reddit.com/r/Python/comments/11o3n76/psa_condalibmambasolver_can_cut_two_hours_off_of/", "comms_num": 53, "created": 1678489096.0, "body": "If you've dealt with Conda for data science, or just because it's a cool environment, you know the algorithm Conda uses to solve library conflicts is not great. Trying to add 6 packages for example can take 300 seconds to solve. That's just normal. A bit more complex environment, and you can take 20 minutes. If you misstep in just the wrong way however, you can easily take **3+ hours** for the algorithm to figure out what's compatible. Mamba, an alternative to Conda, is a known solution but it just isn't the same. Lots of people would rather keep using Conda. Well... apparently it's fairly straightforward to *fix Conda*:\n\n    conda install -n base conda-libmamba-solver\n\nThen you just add the flag `--solver=libmamba` to each command you want to use it with thereafter and compare the difference. In my case it took a 2 hour 17 minute install down to 16 minutes or so.\n\nThis is also an interesting lesson in software design. Conda tried to roll their own solver that runs on a single core in pure Python. The alternative a proven multi-core C++ library.\n\nHopefully someone finds this useful.\n\n[Link to relevant GitHub. (no affiliation)](https://github.com/conda/conda-libmamba-solver)"}, {"title": "docker-compose-diagram \ud83d\udc33\ud83c\udfa8 - create diagram of your docker-compose file", "score": 22, "id": "11o002j", "url": "https://github.com/skonik/docker-compose-diagram", "comms_num": 2, "created": 1678480347.0, "body": ""}, {"title": "Apache Airflow Getting Started", "score": 15, "id": "11nzb5j", "url": "https://www.reddit.com/r/Python/comments/11nzb5j/apache_airflow_getting_started/", "comms_num": 2, "created": 1678478733.0, "body": "Hi all --\n\nI recently started digging into Apache Airflow. Rather than simply forgetting the things that are difficult as a beginner as I climbed the learning curve, I decided to try to make the process a bit easier for the next person. Enjoy!\n\n[https://codesolid.com/airflow-python-etl/](https://codesolid.com/airflow-python-etl/)"}, {"title": "Do you feel like your education prepped you in becoming a good programmer?", "score": 173, "id": "11nxfx3", "url": "https://www.reddit.com/r/Python/comments/11nxfx3/do_you_feel_like_your_education_prepped_you_in/", "comms_num": 126, "created": 1678474415.0, "body": "I am just a little bitter. I feel my undergrad was pretty much useless. Do you feel like your undergrad made you what you are today? or did you have to learn on your own?\n\n&#x200B;\n\nEdit: Thank you all for your perspective. All the answers were very interesting to read. "}, {"title": "Released python module for imports modules in parent directories.", "score": 0, "id": "11npl20", "url": "https://www.reddit.com/r/Python/comments/11npl20/released_python_module_for_imports_modules_in/", "comms_num": 0, "created": 1678455815.0, "body": "I had a difficulties when importing modules in parent directory. syspend module is one of the solution.\n\n[https://pypi.org/project/syspend/](https://pypi.org/project/syspend/)\n\nIn the case, [sample.py](https://sample.py) want to import mypackage, but it locates in parent directory. syspend module searches SYSPEND\\_ROOT recursively, and calls sys.path.append. Doing so, python interpreter can find mypackage module from [sample.py](https://sample.py).\n\n&#x200B;\n\n* project\n   * mypackage.py\n   * samples\n      * sample.py\n   * SYSPEND\\_ROOT <------- make this file by your self. empty file is ok.\n\n&#x200B;\n\nIn [sample.py](https://sample.py), you just write like this:\n\n    import syspend\n    import mypackage\n    \n    if __name__ == '__main__':\n        mypackage.hello()"}, {"title": "Python remote debugging on windows machines is now made easy!", "score": 3, "id": "11nod6t", "url": "https://www.reddit.com/r/Python/comments/11nod6t/python_remote_debugging_on_windows_machines_is/", "comms_num": 4, "created": 1678452671.0, "body": "Hi guys, I couldn't find latterly a single solution for pycharm to remote debug my python code on other windows machines, and I wanted to do that to do my AI training stuff on my friend's pc because mine is no strong enough, I ended up making my own python library that exactly does that!  \n\n\nWith only two lines of code, you can debug an python script on a windows machine easily, and a copy of all the stdout, stderr and stdin calls will be forwarded to you and you will feel like you are working on your own machine.  \n\n\nI wanted to share it here if anyone needs such capability, I also uploaded it to PyPl so pip will be able to install it, here's the project's github page: [https://github.com/AhmedAhmedEG/PyWinRD](https://github.com/AhmedAhmedEG/PyWinRD)"}, {"title": "heyoka.py 0.21 - ODE integration wth LLVM, now supporting multiprecision", "score": 7, "id": "11nj2g0", "url": "https://www.reddit.com/r/Python/comments/11nj2g0/heyokapy_021_ode_integration_wth_llvm_now/", "comms_num": 0, "created": 1678436003.0, "body": "Hello there!\n\nI posted here before about [heyoka.py](https://github.com/bluescarni/heyoka.py), our high-performance ODE integrator based on LLVM.\n\nWe recently released a new version supporting arbitrary-precision computations. This support is built on top of a multiprecision class exposed from C++ to Python, with full NumPy support. That is, this new datatype can be used as a native ``dtype`` in NumPy arrays. I believe this might be a first in the scientific Python ecosystem.\n\nHere is a tutorial introducing the new feature:\n\nhttps://bluescarni.github.io/heyoka.py/notebooks/arbitrary_precision.html\n\nThanks to the properties of the specific numerical integration method employed by heyoka.py (Taylor's method), multiprecision numerical integrations can be orders of magnitude faster than DifferentialEquations.jl, as shown in the benchmarks section here:\n\nhttps://bluescarni.github.io/heyoka/benchmarks.html#extended-and-arbitrary-precision\n\nThe latest version of heyoka.py also introduces a prebuilt ``pip`` wheel for Linux x86-64 (whereas previous versions had only ``conda`` packages):\n\n```\n$ pip install heyoka\n```\n\nPlease let me know if you have comments, questions, criticism, etc.!"}, {"title": "GitHub - airtai/fastkafka: FastKafka is a powerful and easy-to-use Python library for building asynchronous web services that interact with Kafka topics. Built on top of Pydantic, AIOKafka and AsyncAPI, FastKafka simplifies the process of writing producers and consumers for Kafka topics.", "score": 14, "id": "11niru2", "url": "https://github.com/airtai/fastkafka", "comms_num": 6, "created": 1678435029.0, "body": ""}, {"title": "Is there some hidden genius in the handle-exception package that I'm missing?", "score": 34, "id": "11niekp", "url": "https://www.reddit.com/r/Python/comments/11niekp/is_there_some_hidden_genius_in_the/", "comms_num": 18, "created": 1678433804.0, "body": "I ran across [the handle-exception package](https://github.com/dillibk777/handle_exception) whose supposed benefit is:\n\n> you can handle exceptions in a centralized way, instead of having to write try-except blocks in multiple places.\n\nBut you can *already* handle exceptions in a centralized way, correct?"}, {"title": "Pyfuck - A python to brainfuck translater", "score": 110, "id": "11nci0v", "url": "https://www.reddit.com/r/Python/comments/11nci0v/pyfuck_a_python_to_brainfuck_translater/", "comms_num": 32, "created": 1678416708.0, "body": "https://github.com/cmspeedrunner/Pyfuck\nWhat do you guys think"}, {"title": "Hosting --- simple python sit, PySimpleGUIWeb", "score": 1, "id": "11n85lm", "url": "https://www.reddit.com/r/Python/comments/11n85lm/hosting_simple_python_sit_pysimpleguiweb/", "comms_num": 4, "created": 1678405797.0, "body": "Can anyone recommend give ideas on where I can get some simple cheap hosting a single website built inPySimpleGUIWeb and SQLlite3 DB---  I tried all the usual suspects Bluehost said they don't support SQL Lite and amazingly Hostinger posting articles tell me they don't support Python ?"}, {"title": "Creosote - Identify unused dependencies and avoid a bloated virtual environment", "score": 601, "id": "11n717z", "url": "https://github.com/fredrikaverpil/creosote", "comms_num": 59, "created": 1678403198.0, "body": ""}, {"title": "Overhead of Python Asyncio tasks", "score": 6, "id": "11n5wk8", "url": "https://textual.textualize.io/blog/2023/03/08/overhead-of-python-asyncio-tasks/", "comms_num": 0, "created": 1678400684.0, "body": ""}, {"title": "I used OpenAI's GPT model to create an SMS bot that has its own personality.", "score": 0, "id": "11n5m8r", "url": "https://www.reddit.com/r/Python/comments/11n5m8r/i_used_openais_gpt_model_to_create_an_sms_bot/", "comms_num": 0, "created": 1678400057.0, "body": "First of all, I know everyone is on the craze of hopping on the OpenAI API bandwagon since they opened up their GPT models on it on the 3rd of March this year. But I've been putting a good bit of work into making this look all pretty and figured I might as well show it off to get some feedback on how to streamline any of the processes.\n\n[Here is the link to the GitHub project](https://github.com/Mariner10/TARS.git)\n\n&#x200B;\n\nMost of the in-depth explanation is in the readme, but I'll summarize here.\n\nSMS numbers can send to emails, and emails can send to SMS numbers by appending a carrier's address at the end, so by making an email checker with IMAP I can read new emails from an SMS number, and then send the info to openAI, who will take the personality customization into account when generating a response and will then text back.\n\nIn the GitHub I also toyed around with speech synthesis, but nothing is really complete there yet because I dont really have a use for it. But overall the `AI_SMS.py` file can be run in the background of a raspberry pi or similar device and act as a new tool on your device. Granted you'll need API access from openAI but it isn't that difficult to sign up for.\n\nThe personality settings that are put into the `constants.py` file are for a robot known as TARS, who is kind of a self-centered douche. But overall really funny and interesting to talk to. (Yes it was named after *Interstellar*). I actually plan on integrating this into a physical robot at some point and giving various sensors so that the AI can respond according to it's environment."}, {"title": "Rayon in Rust vs Python Process and Thread Pools. Parallel data processing.", "score": 3, "id": "11n12ep", "url": "https://dataengineeringcentral.substack.com/p/rayon-in-rust-vs-python-process-and", "comms_num": 0, "created": 1678389692.0, "body": ""}, {"title": "iommi - your first pick for a Django power chord", "score": 38, "id": "11n0cha", "url": "https://docs.iommi.rocks/", "comms_num": 2, "created": 1678388059.0, "body": ""}, {"title": "Can you break my Flask authentication system?", "score": 15, "id": "11n082u", "url": "https://www.reddit.com/r/Python/comments/11n082u/can_you_break_my_flask_authentication_system/", "comms_num": 25, "created": 1678387783.0, "body": " I recently created a Flask authentication system that focuses on security. As a challenge, I invite you to try and find vulnerabilities in my system.\n\nThe repository contains a comprehensive README.md that explains the system's design and implementation. I believe that it can be a great exercise for developers who are interested in security and want to test their skills.\n\nYou can access the repository at [**https://github.com/IdanHajbeko/Secure-Flask-Auth**](https://github.com/IdanHajbeko/Secure-Flask-Auth).\n\nPlease feel free to fork the repository, test the system, and share your feedback. I am open to any suggestions, comments, or contributions that can help me improve this project.\n\nLet's see if you can break my Flask authentication system!"}, {"title": "Training Transformer Networks in Scikit-Learn?!", "score": 5, "id": "11mzd3p", "url": "https://www.reddit.com/r/Python/comments/11mzd3p/training_transformer_networks_in_scikitlearn/", "comms_num": 0, "created": 1678385782.0, "body": "Have you ever wanted to use handy scikit-learn functionalities with your neural networks, but couldn\u2019t because TensorFlow models are not compatible with the scikit-learn API?\n\nI\u2019m excited to introduce one-line wrappers for TensorFlow/Keras models that enable you to use TensorFlow models within scikit-learn workflows with features like Pipeline, GridSearch, and more.\n\n&#x200B;\n\n[Swap in one line of code to use keras\\/TF models with scikit-learn.](https://preview.redd.it/g5ssnz1f6rma1.png?width=960&format=png&auto=webp&v=enabled&s=206be211c08985c0693929c445f3c274234bd58d)\n\nTransformers are extremely popular for modeling text nowadays with GPT3, ChatGPT, Bard, PaLM, FLAN excelling for conversational AI and other Transformers like T5 & BERT excelling for text classification. Scikit-learn offers a broadly useful suite of features for classifier models, but these are hard to use with Transformers. However not if you use these wrappers we developed, which only require changing one line of code to make your existing Tensorflow/Keras model compatible with scikit-learn\u2019s rich ecosystem!\n\nAll you have to do is swap `keras.Model` \u2192 `KerasWrapperModel`, or `keras.Sequential` \u2192 `KerasSequentialWrapper`. The wrapper objects have all the same methods as their keras counterparts, plus you can use them with tons of awesome scikit-learn methods.\n\nYou can find a demo jupyter notebook and read more about the wrappers here: [https://cleanlab.ai/blog/transformer-sklearn/](https://cleanlab.ai/blog/transformer-sklearn/)"}, {"title": "qStore - Youtube as file storage", "score": 5, "id": "11my1tz", "url": "https://www.reddit.com/r/Python/comments/11my1tz/qstore_youtube_as_file_storage/", "comms_num": 3, "created": 1678382764.0, "body": "Okay, first and foremost, I want to say that I got inspired by GitHub: DvorakDwarf's [Infinite-Storage-Glitch](https://github.com/DvorakDwarf/Infinite-Storage-Glitch). So I decided to make my own proof of concept version in python3 instead of rust. I also wanted to use steganography but youtube's compression killed any and all hope I had. I have tried LSB, RGB, DCT, and Spacial Domain steganography and ALL work normally on their own...but all have failed when I upload the video to youtube and then download it.\n\nSo I decided to be a little clever and use QR codes. I modify one of many frames in the video with a QR code, and then re make the video and then it's ready to upload. One may wonder, \"well if it's in the QR code then the data can be easily obtained.\" Yes and No. Yes in terms of it's indeed a normal QR code and works how you'd expect it to work, and no in terms of the file data is encrypted using GCMlib (AES-GCM. KDF Argon2id) before being turned into the QR code. One can use any encryption method they want but I use GCMlib. (use at your own risk obviously).\n\n&#x200B;\n\n[qStore](https://github.com/therealOri/qStore) also has its own database to keep track of what videos are what and the keys used to encrypt the file that is in the QR code. This database can also be locked and unlocked. (Like bitwarden). Just give it a key that was generated and then it's up to you on how you store it and keep it safe. (You can also use your own way of encrypting files if you wish, my methods are use at your own risk obviously.) You can add, remove, and view entries/records as well.\n\nThere's nothing really more to say about it as this project is still being worked on and I still really hope that eventually I can use actual steganography to embed a file into the videos. But for now, just QR codes.\n\nIf you or anyone you know would like to help out or even try it out/use my project then the link is below. <3\n\nLink to github repo: [https://github.com/therealOri/qStore](https://github.com/therealOri/qStore)  \n\n\n  \n\n\n[qStore main menu](https://preview.redd.it/gqi2fnz01rma1.png?width=851&format=png&auto=webp&v=enabled&s=aa637f2bbf49ea9a040cd6ea0be48a808ed6028d)"}, {"title": "Pandas 2.0 is coming soon. Here is what's new.", "score": 13, "id": "11mwxox", "url": "https://youtube.com/watch?v=cSLPyRI_ZD8&feature=shares", "comms_num": 0, "created": 1678380156.0, "body": ""}, {"title": "Distributed Tracing guide", "score": 6, "id": "11mufw4", "url": "https://www.reddit.com/r/Python/comments/11mufw4/distributed_tracing_guide/", "comms_num": 2, "created": 1678374176.0, "body": "If you're looking to learn more about distributed tracing, check out this [guide.](https://gethelios.dev/distributed-tracing/)\n\n&#x200B;\n\nhttps://preview.redd.it/gqq8mi5jaqma1.png?width=2200&format=png&auto=webp&v=enabled&s=051e9e0c5ef03bf5bd28829652e6091a7981491e"}, {"title": "Python's Mutable vs Immutable Types: What's the Difference? \u2013 Real Python", "score": 11, "id": "11mrhad", "url": "https://realpython.com/python-mutable-vs-immutable-types/", "comms_num": 0, "created": 1678366539.0, "body": ""}, {"title": "Stlite - Streamlit running entirely in WebAssembly (using Pyodide)", "score": 18, "id": "11mke1g", "url": "https://edit.share.stlite.net/", "comms_num": 0, "created": 1678341546.0, "body": ""}, {"title": "smb library", "score": 0, "id": "11mi055", "url": "https://www.reddit.com/r/Python/comments/11mi055/smb_library/", "comms_num": 1, "created": 1678334244.0, "body": "Is there any easy way to download smbprotocol zip file directly?\n\nI know pip command allows installation but I am looking a straight way to download it.\n\npip portal has a download section but that gives set up only which is not relevant.\n\n\nSomething like java allows to download JAR file directly."}, {"title": "Everything you need to know about merging dataframes", "score": 1, "id": "11mh5sw", "url": "https://blog.trymito.io/merging-dataframes/", "comms_num": 0, "created": 1678331843.0, "body": ""}, {"title": "How can I deploy a full Tkinter app with database included?", "score": 49, "id": "11mfk3l", "url": "https://www.reddit.com/r/Python/comments/11mfk3l/how_can_i_deploy_a_full_tkinter_app_with_database/", "comms_num": 23, "created": 1678327466.0, "body": "How to deploy a full desktop app with database ready to install on any pc?"}, {"title": "Thursday Daily Thread: Python Careers, Courses, and Furthering Education!", "score": 2, "id": "11mcnzg", "url": "https://www.reddit.com/r/Python/comments/11mcnzg/thursday_daily_thread_python_careers_courses_and/", "comms_num": 2, "created": 1678320009.0, "body": "Discussion of using Python in a professional environment, getting jobs in Python as well as ask questions about courses to further your python education!\n\n**This thread is not for recruitment, please see** r/PythonJobs **or the thread in the sidebar for that.**"}, {"title": "How to de-duplicate a list in Python", "score": 0, "id": "11m8vve", "url": "https://www.pythonmorsels.com/deduplicate-lists/", "comms_num": 4, "created": 1678311217.0, "body": ""}, {"title": "Using LLMs in a Streaming Context in Python", "score": 4, "id": "11m7ifm", "url": "https://www.reddit.com/r/Python/comments/11m7ifm/using_llms_in_a_streaming_context_in_python/", "comms_num": 0, "created": 1678308075.0, "body": "I've been playing around with different real-time/streaming use cases in Python and I got interested in where LLMs could be useful to analyze data in real-time. It is wild how much easier it has gotten to use models with Hugging Face. I wrote this notebook to share something I recently made. It is a real-time pipeline to analyze financial news in real-time ([https://colab.research.google.com/drive/1TtLcvX4Xw4vDMVUOy5mOyJmMr7AqOrG4?usp=sharing](https://colab.research.google.com/drive/1TtLcvX4Xw4vDMVUOy5mOyJmMr7AqOrG4?usp=sharing)). \n\n&#x200B;\n\nDoes anyone have some interesting ideas for using LLMs in a streaming context?"}, {"title": "Overhead of Python Asyncio tasks", "score": 78, "id": "11m4lha", "url": "https://textual.textualize.io/blog/2023/03/08/overhead-of-python-asyncio-tasks/", "comms_num": 14, "created": 1678301559.0, "body": ""}, {"title": "RustPython", "score": 39, "id": "11m43r5", "url": "https://www.reddit.com/r/Python/comments/11m43r5/rustpython/", "comms_num": 22, "created": 1678300418.0, "body": "I first read about [RustPython](https://github.com/RustPython/RustPython) today and found [this discussion](https://www.reddit.com/r/Python/comments/iirja9/rustpython/?utm_source=share&utm_medium=web2x&context=3) that seems very interesting and still pertinent to the topic. Here's my take on it:\n\nEven though, as mentioned in the original thread, Rust is not a magical solution for anything, I think the language's features that make it less prone to bugs (mainly memory safety, AFAIK) could speed up improvements to Python. This could happen directly, or indirectly by simplifying contributions to the interpreter.\n\nSince the original discussion, the Linux kernel has started taking contributions in Rust. It'll probably be a very long time before the majority of the kernel is in Rust; if it is ever fully converted that will definitively take much longer. But this movement gives Rust a strong vote of credibility, and IMO a confident step in establishing Rust as the successor of C as de facto system language of the day (again, a confident *first* step).\n\nConnecting to the point above about Rust succeeding C, the Rust community seems a lot more prolific than C's while both C and C++ [were reported](https://www.statista.com/statistics/793628/worldwide-developer-survey-most-used-languages/) as being used much more than Rust in 2022. I believe Rust has the qualities to dominate many of the areas C dominates today, but that trend has definitely not materialized yet. If there is indeed a trend of Rust growing more, and if this trend keeps up, an interpreter in Rust could eventually source from a larger pool of developers.\n\nLastly, I think the Rust and Python communities could mingle (e.g. over cherishing a good developer experience) and contribute much to each other in a way that doesn't happen with Python and C where there seems to be a wall imposing that Python is for flexibility and C for performance. This last point seems to me the most important/fruitful, but is also most subjective and sensible to my own biases.\n\nSo I'm curious about the community's feelings on this topic in general, but would also like to suggest the question: How important do you think it would be to have a mature Python interpreter written in Rust 10 years from now?"}, {"title": "Building a ChatGPT-based AI Assistant with Python using OpenAI APIs", "score": 0, "id": "11m33b5", "url": "https://faizanbashir.me/building-a-chatgpt-based-ai-assistant-with-python-speech-to-text-and-text-to-speech-using-openai-apis", "comms_num": 0, "created": 1678298138.0, "body": ""}, {"title": "Python is too good for me", "score": 0, "id": "11m2rtf", "url": "https://www.reddit.com/r/Python/comments/11m2rtf/python_is_too_good_for_me/", "comms_num": 77, "created": 1678297398.0, "body": "Ive discovered that I genuinely find python to be horrible to program with. Python is great, it handles so much, its so straightforward and easy to use, its so unbelievably versatile. And that's exactly why I cant stand it. Its too good.\n\nI find it so hard to deal with how laid back the whole thing is. I get scared Ill do something bad and the compiler just wont warn me. It will fight teeth and nails to run that code and it will succeed, a true feat of engineering and language design. And I hate it. I cant stand not knowing what my variable has, I cant stand not knowing how my data is being handled, it freaks me out how much control is taken away from me in favor of convenience. \n\nI know this is a very weird thing to say, but I wanted to know if anyone else has felt like this? I think python is fantastic, but its not for me. Has anyone else thought about this?"}, {"title": "I made a Finance Database with over 300.000 tickers to make Investment Decisions easier", "score": 429, "id": "11lyyzb", "url": "https://www.reddit.com/r/Python/comments/11lyyzb/i_made_a_finance_database_with_over_300000/", "comms_num": 40, "created": 1678288703.0, "body": "It has been well over 2 years since I first introduced the database to this community, see [here](https://github.com/JerBouma/FinanceDatabase), and since then a lot changed so I felt like it is worth sharing about my package yet again and honestly, also to ask for a little bit of help.\n\nSo, within the investment universe there exists tens of thousands of companies (and even more when you include all exchanges). Identifying all of them and understanding in detail where they fit in the world is tough up to a point that it either requires you to pay a hefty fee to obtain this type of categorisation or do a massive amount of manual research. I found it a bit strange that this information was not publicly available while it is quite crucial for investment research. Therefore I got to work.\n\n**Insert the** [**FinanceDatabase**](https://github.com/JerBouma/FinanceDatabase)**.** This is a database of over 300.000 symbols (155k+ companies, 36k+ ETFs, 57k+ Funds, 3k+ Cryptocurrencies and more) that is fully categorised per country, industry, sector, category and more. It includes a package, written in Python and installable with \\`pip install financedatabase\\`, that gives access to the data with ease. You can obtain the entire dataset per asset class, search through it and filter based on specific options. Have a look at [this Notebook](https://github.com/JerBouma/FinanceDatabase/blob/main/examples.ipynb) to have an idea what it is offering.\n\nA simple example of what it does in the following:\n\n    import financedatabase as fd\n    \n    # Initialize the Equities database\n    equities = fd.Equities()\n    \n    # Obtain all data available excluding international exchanges\n    equities.select()\n\nWhich returns the following DataFrame: https://preview.redd.it/5gmiej7pbjma1.png?width=1516&format=png&auto=webp&v=enabled&s=faa84ca0e91107530f9845a5313ff79adc54ba6a\n\nBy default it hides non-US exchanges (since the ticker symbols work for most other programs) but that can be turned off with **equities.select(exclude\\_exchanges=False)** which returns 155.000 rows.\n\nThe database explicitly does not store up to date fundamental data. It tries to be as timeless as possible so that it doesn't become outdated fast. Because there are a variety of other ways, like FinancialModelingPrep, yFinance etc, to get this data there is no use in including this in the database.\n\nI've improved this database not only by increasing the amount of symbols (from 180k to 300k) but also:\n\n* Approximated the The Global Industry Classification Standard (GICS\u00ae), a standard used for sectors and industries everywhere. Note that this was approximated and therefore no actual data is collected. Furthermore, not all categories are included.\n* Updated and removed tickers that either no longer exist or had outdated information.\n* Made the package itself object orientated making data collecting and searching much more efficient and logical. (shoutout to [Colin Delahunty](https://github.com/colin99d) for the help here too)\n* The database initially featured thousands of JSON files. At the time it made sense also given my rather novice background in programming. However, a much more efficient (and manageable way) is to work with CSV files. So instead, one CSV file per asset class.\n* Due to using CSV files, it becomes **really** easy to update accordingly.\n* To make loading data itself still quick, it automatically compresses the data so that loading in data is not slowed down by using a format that is more easy to update.\n* Updated the README, Contributing Guidelines and overal documentation.\n\nSo being an open source project and trying to maintain such a database is tough to do alone. While I strongly believe the database can stay relevant for a long period due to the fact that the majority of companies do not suddenly stop existing, some maintenance is needed. Therefore, with this post I would like to not only invite you to explore the database but also to see if you can improve it along the way. Please visit the [CONTRIBUTING GUIDELINES](https://github.com/JerBouma/FinanceDatabase/blob/main/CONTRIBUTING.md) that explains in detail how you can contribute. Just pointing out wrong or missing information is already very beneficial!\n\nHope this database is still just as useful as it was two years ago!"}, {"title": "Why my python shell is restarted every time I\u2019m calling this recursive function. Python code I used and please share good and easy to grok resources of recursion in python. mucho gusto", "score": 0, "id": "11lynge", "url": "https://www.reddit.com/r/Python/comments/11lynge/why_my_python_shell_is_restarted_every_time_im/", "comms_num": 2, "created": 1678287946.0, "body": "import sys\n\n\ndef isprime(i,n):\n    if n%i==0:\n        print(\"Yes\")\n        return False\n    if i+1 == n:\n        print(\"True\")\n        return True\n        \n    isprime(i+1,n)\n\n#setting the recursion limit to 10**7\nsys.setrecursionlimit(10**7)\n\n#calling the recursive function for n = 12347\n#when I pass n < 5000 the shell is automatically restarted why\nisprime(2,12347) # output is nothing and sometime it pops None why"}, {"title": "How to make your own PIP package?", "score": 0, "id": "11lxpt1", "url": "https://www.reddit.com/r/Python/comments/11lxpt1/how_to_make_your_own_pip_package/", "comms_num": 5, "created": 1678285570.0, "body": "https://medium.com/@vinay.dec26/how-to-build-your-own-python-pip-package-8a787c1a5445"}, {"title": "Using Python to Cast Fullscreen Web Browser to TV", "score": 10, "id": "11lxj0y", "url": "https://www.reddit.com/r/Python/comments/11lxj0y/using_python_to_cast_fullscreen_web_browser_to_tv/", "comms_num": 7, "created": 1678285058.0, "body": "Trying to get a script set that will always cast to a specific device, a web browser at full screen dark mode.\n\nThink using selenium might be the best route.\n\nAny tips? Does this sound possible?"}, {"title": "Processing RAW (ARW) file", "score": 3, "id": "11lvfcq", "url": "https://www.reddit.com/r/Python/comments/11lvfcq/processing_raw_arw_file/", "comms_num": 1, "created": 1678279434.0, "body": "Hi. I'm trying to process Sony ARW file with my custom dcp file. So I found rawpy library which does almost ok job, but it seems it is missing an ability to use a custom dcp file so colors in RGB images are bad. Does anybody know any way to programmatically process RAW files? RawTherapee does its job well as an app, but it seems there are no python bindings. Going to process thousands of images in AWS Lambda. Thanks"}, {"title": "Django REST Framework: Beginner's Guide", "score": 3, "id": "11lulgu", "url": "https://technicbate.blogspot.com/2023/03/django-rest-framework.html", "comms_num": 0, "created": 1678276943.0, "body": ""}, {"title": "\ud83d\udea8\ud83d\udea8 New Awesome Polars List Release \ud83d\udea8\ud83d\udea8 Check out the new additions to the list here !", "score": 0, "id": "11ltfxq", "url": "https://github.com/ddotta/awesome-polars/releases/tag/2023-03-08", "comms_num": 1, "created": 1678273325.0, "body": ""}, {"title": "Documentation for COM support in pywin32", "score": 11, "id": "11lsvvs", "url": "https://www.reddit.com/r/Python/comments/11lsvvs/documentation_for_com_support_in_pywin32/", "comms_num": 4, "created": 1678271410.0, "body": "I'm looking for good documentation of python's WinAPI COM support. \n\nThe most conscise documentation I can find is a chapter in Mark Hammond's \"Python Programming On Win32\". However, it was published in 2000 and AFAIK never updated since.\n\nThe online documentation is quite brief and as dated (e.g. https://mhammond.github.io/pywin32/html/com/win32com/HTML/QuickStartClientCom.html).\n\nIs there anything... better? Fresher?"}, {"title": "Company formed around Pydantic", "score": 178, "id": "11lsjgk", "url": "https://pydantic.dev/announcement/", "comms_num": 21, "created": 1678270205.0, "body": ""}, {"title": "If you had to develop a game in Python, what engine and tools would you use?", "score": 155, "id": "11lrlfn", "url": "https://www.reddit.com/r/Python/comments/11lrlfn/if_you_had_to_develop_a_game_in_python_what/", "comms_num": 75, "created": 1678266861.0, "body": "Why? Do you think there is one engine that is better, or more appropriate?"}, {"title": "Data validation in Python: a look into Pandera and Great Expectations", "score": 19, "id": "11lprup", "url": "https://endjin.com/blog/2023/03/a-look-into-pandera-and-great-expectations-for-data-validation", "comms_num": 1, "created": 1678260664.0, "body": ""}, {"title": "GitHub - odashi/davinci-functions: Library to ask OpenAI GPT for generating objects on the Python runtime.", "score": 1, "id": "11loqsg", "url": "https://github.com/odashi/davinci-functions", "comms_num": 0, "created": 1678257297.0, "body": ""}, {"title": "Are your django webapps scalable?", "score": 0, "id": "11lnxwf", "url": "https://simplifiedweb.netlify.app/are-your-webapps-scalable/", "comms_num": 9, "created": 1678254798.0, "body": ""}, {"title": "Using Python with the ChatGPT API", "score": 14, "id": "11lkua4", "url": "https://www.reddit.com/r/Python/comments/11lkua4/using_python_with_the_chatgpt_api/", "comms_num": 2, "created": 1678245896.0, "body": "I've been playing with ChatGPT API, and wanted to post this easy to get started using Python with the API.  It goes through the basic setup and also the code and playing around with different prompts.\n\n[https://medium.com/@msgold/using-the-chatgpt-api-with-python-c56857e0e153](https://medium.com/@msgold/using-the-chatgpt-api-with-python-c56857e0e153)"}, {"title": "Bounded Zipf generator ported from Go", "score": 2, "id": "11lkt3m", "url": "https://www.reddit.com/r/Python/comments/11lkt3m/bounded_zipf_generator_ported_from_go/", "comms_num": 0, "created": 1678245803.0, "body": "[https://github.com/Yiling-J/bounded-zipf](https://github.com/Yiling-J/bounded-zipf)\n\nA simple bounded [Zipf](https://en.wikipedia.org/wiki/Zipf%27s_law) generator I used in [Theine](https://github.com/Yiling-J/theine) benchmarks, maybe useful if you need a Zipf random number generator."}, {"title": "tgbiofy came out of beta after an year - Show on your Telegram profile the song that you're listening to on Spotify", "score": 1, "id": "11lh7gu", "url": "https://www.reddit.com/r/Python/comments/11lh7gu/tgbiofy_came_out_of_beta_after_an_year_show_on/", "comms_num": 0, "created": 1678236526.0, "body": " [tgbiofy](https://github.com/elpideus/tgbiofy) is a very little project that I started more than an year ago which a lot of people enjoyed. It basically allows to show the Spotify song that you are listening to on your profile.  \nThe script replaces your first and last name with \"Listening to <song name>, your profile picture with the cover of the song, and your bio with the song's Spotify link.\n\nToday I released the version [1.0](https://github.com/elpideus/tgbiofy/releases/tag/1.0) and I really hope you will like it and find it useful.\n\n`Little tip: If you're on Linux it is really easy to set this script to silently run at startup so that it runs at every startup.`"}, {"title": "PyTekla - Python wrap around the Tekla Structures Open API", "score": 3, "id": "11lgjqd", "url": "https://www.reddit.com/r/Python/comments/11lgjqd/pytekla_python_wrap_around_the_tekla_structures/", "comms_num": 0, "created": 1678234850.0, "body": "We just released (actually is a pre-release) this library to work with the [Tekla Structures ](https://www.tekla.com/us/products/tekla-structures) Open API. The idea is to facilitate the experience of the engineer/architect using this API.\n\nSo, any engineer, architect, developer is invited to collaborate.\n\nWith time we'll be adding more features and examples!\n\nTake a look here: \n\nhttps://efdiloreto.github.io/PyTekla/\n\nThanks!"}, {"title": "Wednesday Daily Thread: Beginner questions", "score": 2, "id": "11lg0t2", "url": "https://www.reddit.com/r/Python/comments/11lg0t2/wednesday_daily_thread_beginner_questions/", "comms_num": 4, "created": 1678233611.0, "body": "New to Python and have questions? Use this thread to ask anything about Python, there are no bad questions!\n\nThis thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response."}, {"title": "Regretting using pipenv for packaging a library", "score": 4, "id": "11lcko7", "url": "https://www.reddit.com/r/Python/comments/11lcko7/regretting_using_pipenv_for_packaging_a_library/", "comms_num": 4, "created": 1678225874.0, "body": "I learned it the hard way that pipenv is not meant to be used for packaging libraries. It is meant to be used for applications only. Any application that is using the library I packaged with pipenv is facing issues with version conflicts.\n\nNow I am using just the setuptools for packaging the library. Anything that I should must know to avoid a mistake like this."}, {"title": "beartype: It has documentation now. It only took two years, my last hair follicle, precious sanity points (SPs), and working with Sphinx. Don't be like @leycec. Go hard on documentation early.", "score": 124, "id": "11lac7g", "url": "https://beartype.readthedocs.io", "comms_num": 34, "created": 1678220965.0, "body": ""}, {"title": "Call ChatGPT from any text box (Linux only)", "score": 1, "id": "11l9t2e", "url": "https://www.reddit.com/r/Python/comments/11l9t2e/call_chatgpt_from_any_text_box_linux_only/", "comms_num": 6, "created": 1678219754.0, "body": "Hey folks, I thought I'd share a cool use of ibus. I was able to configure my system so that I can press `Super+Space` and make ChatGPT requests in any textbox in my system. Here's a quick [demo](https://www.youtube.com/watch?v=XMvlGEkLioI).\n\n&#x200B;\n\nTo set this up:\n\n1. Install 'shin' via this fork: [https://github.com/apockill/shin/tree/feature/arbitrary-commands](https://github.com/apockill/shin)\n2. Install 'clai' via 'pipx install clai', or from the repo here: [https://github.com/apockill/clai](https://github.com/apockill/clai)\n3. Add the following to your '\\~/.profile':export SHIN\\_DEFAULT\\_COMMAND=\"clai\"export OPENAI\\_API\\_TOKEN={your token here}\n\nNext steps are to set it up so it (optionally) reads the contents of the current window and gives that as context to the LLM. Here's hoping we get open source chatbots soon so this sort of thing can run locally!"}, {"title": "The first game automation script I have developed using python, opencv and pyautogui", "score": 0, "id": "11l5hs4", "url": "https://www.reddit.com/r/Python/comments/11l5hs4/the_first_game_automation_script_i_have_developed/", "comms_num": 0, "created": 1678210169.0, "body": "I have started learning python through courses and developing game automation scripts 2 years ago, and I wanted to share some of these, and give back to the community, I hope it helps some of you.\n\nThe project is available on [github](https://github.com/Possessed-Player/GoodGameEmpireBot), and fully explained and documented on [dev.to](https://dev.to/pssdplayer/goodgame-empire-auto-attack-bot-5g3g)\n\nThere is also a short video for it on [youtube](https://youtu.be/hzsmYM8ikW0), if you would like to see it running."}, {"title": "looking for a way of reading big data files into python without having to read the same file every time I run to debug", "score": 10, "id": "11l6iek", "url": "https://www.reddit.com/r/Python/comments/11l6iek/looking_for_a_way_of_reading_big_data_files_into/", "comms_num": 30, "created": 1678212440.0, "body": "looking for a way of reading big data files into python without having to read the same file every time I run to debug\n\n\n\nWorking with big economics datasets e.g. 10-50 gb. \n\nOnce I read the data, there are some data wrangling steps like value counts, combining some columns,loc functions, drop rows based on conditions, creating new volumes you get turn drift \n\nProblem is anytime I try to debug to see if it's working fine or if the new line of code I added functional; the data is read and consumes memory, time and delays my work. \n\nAssuming I've used all the possible libraries such as pandas, dask, modin, pyarrow,ray etc. \n\nWhat other things can I add to my code:\n\n1. To not have to read my data in every time I run the code while developing n debugging \n\n2. Save this csv virtually into my environment but without it taking away memory or cores thereby worsening my performance due to resource constraints \n\nOther economists I know use stata etc where once the file is loaded in, it stays there but it occupies memory for the time it's in use"}, {"title": "Creating a cool website using Python", "score": 13, "id": "11l63vg", "url": "https://www.reddit.com/r/Python/comments/11l63vg/creating_a_cool_website_using_python/", "comms_num": 9, "created": 1678211570.0, "body": "Hi Pythonistas, I am building my website using Python (FastAPI) with the Atri framework (I am one of the creators). It has always been a pain point for me to develop a beautiful UI with template engines in Python. Your feedback on the website and the Atri framework are welcome.\n\n&#x200B;\n\nWebsite - https://atrilabs.com\n\n&#x200B;\n\nhttps://preview.redd.it/bp9g09gyucma1.png?width=614&format=png&auto=webp&v=enabled&s=8007223b5c07a706404f8d85dabd7ce12b32cb70"}, {"title": "We tracked mentions of OpenAI, Bing, and Bard across social media to find out who's the most talked about in Silicon Valley", "score": 0, "id": "11l30gz", "url": "https://www.reddit.com/r/Python/comments/11l30gz/we_tracked_mentions_of_openai_bing_and_bard/", "comms_num": 0, "created": 1678204554.0, "body": "[Posts about OpenAI, Bing, and Bard in the San Francisco Bay Area and Silicon Valley](https://preview.redd.it/vks8y4r40cma1.png?width=1286&format=png&auto=webp&v=enabled&s=1e9e5a5bd15a494bc6e2d3f44eccf1244d1bc6b4)\n\nWe used social media data and [geolocation models](https://github.com/1712n/yachay-public/tree/master/conf_geotagging_model) to find posts about OpenAI, Bing, and Bard in the Silicon Valley and San Francisco Bay Area for the last two weeks to see which one received the most mentions.\n\nFirst, we filtered social media data with the keywords \"openai,\" \"bing,\" \"bard,\" and then we predicted coordinates for the social media posts by using our text-based geolocation models. After selecting texts which received a confidence score higher than 0.8, we plotted their coordinates as company logos on a leaflet map using Python and the folium library, restricting the map to the bounding box of the San Francisco Bay Area and Silicon Valley.\n\nWe analyzed over 300 social media posts and found that roughly 54.5% of the time, OpenAI was the most talked about. Bing made second place with around 27.2%, and then Bard came in last with 18.3%.\n\nOpenAI may be winning the AI race at the moment, but it's not the end yet. Let us know what other AI projects you're following, and we'll check them out."}, {"title": "ApiE: blueprint of a python/flask api for json objects", "score": 3, "id": "11l2omg", "url": "https://www.reddit.com/r/Python/comments/11l2omg/apie_blueprint_of_a_pythonflask_api_for_json/", "comms_num": 1, "created": 1678203794.0, "body": "# [ApiE](https://github.com/eom-dev/apie)\n\nblueprint of a python/flask api for json data\n\n## usage\n1. import DataModel and design a child class\n2. create a basic flask application\n3. import ApiE and create an instance parameterized with the DataModel child class\n4. register the ApiE instance blueprint to the flask application\n5. launch\n\n## interface\n### DataModel\n* the DataModel object is an abstract class whose children represent the json objects being operated on by the api\n* each child of the DataModel object is sourced from an underlying json file\n* DataModel children must define the following:\n\t- static variables:\n\t\t* *dataPath*: the directory in which to store json files\n\t\t* *identifier*: human-readable prefix for data id fields\n\t\t* *defaultFields*: dictionary of default fields with default values\n\t\t* *requiredFields*: list of required fields\n\t\t* *optionalFields*: list of optional fields\n\t- member variables:\n\t\t* *purge*: boolean value signaling the deletion of underlying data files\n\t- methods:\n\t\t* *filter*: returns boolean values from arbitrary filters based on supplied parameters\n\t\t* *validate*: throws errors if supplied data does not match desired schema\n\t\t\t- call the super method to validate presence of fields and supply defaults\n\n### ApiE\n* the ApiE object maintains a list of active DataModel child objects and creates a blueprint of api for that DataModel child\n* instantiate ApiE objects with DataModel child classes\n#### api methods\n\n**GET**:\n\n* retrieves json objects\n* filters may be parameterized\n\n**POST**\n\n* creates new json objects from posted data\n* requires json data to be stored\n\n**PUT**\n\n* replaces data in existing json objects with posted data\n* requires recordId and data to replace current version\n\n**PATCH**\n\n* updates data in existing json objects from patched data\n* requires recordId and data to update current version\n\n**DELETE**\n\n* removes a json object\n* requires recordId as the sole parameter\n\nNote: *recordId* is derived from the *identifier* of the DataModel child class\n\n- if *identifier* = 'example' then *recordId* = 'example-xxxxxxxxxxxx' where x is a random, hexidecimal integer"}, {"title": "Introduction to Knowledge Distillation with Keras", "score": 0, "id": "11l2i20", "url": "https://www.ai-contentlab.com/2023/03/introduction-to-knowledge-distillation.html?m=1", "comms_num": 0, "created": 1678203372.0, "body": ""}, {"title": "Do you find it hard understanding other people's code and logic?", "score": 36, "id": "11l2h8q", "url": "https://www.reddit.com/r/Python/comments/11l2h8q/do_you_find_it_hard_understanding_other_peoples/", "comms_num": 93, "created": 1678203318.0, "body": "Or is it just me? If it's just me, what can I do to advance in that skill?"}, {"title": "I made a program to find and delete similar or identical images in Windows", "score": 51, "id": "11l0sh3", "url": "https://www.reddit.com/r/Python/comments/11l0sh3/i_made_a_program_to_find_and_delete_similar_or/", "comms_num": 9, "created": 1678199306.0, "body": "Many people (me included) usually take many photos and then dump them on the PC for backup. Or even save them two or three times because we don't remember if we already have them.\n\nWe end up with our folders packed with similar or even duplicates of images all over the place.\n\nI made [SimilPhoto](https://github.com/MarceAriel99/simil-photo) to solve this.\n\nI'm a student, and this is my first time making a full Python program. If you encounter any errors, please let me know.\n\nI would be grateful if you have any suggestions or ideas on how to improve my code, as it is one of the first times I have designed around the MVP pattern, work with CNN pre-trained models, threads, etc.\n\nIt currently only works on Windows.\n\nhttps://preview.redd.it/2gem8w7etbma1.png?width=1576&format=png&auto=webp&v=enabled&s=75873c7068068495a189dd1d29e6563c084a2515\n\nhttps://preview.redd.it/c9axco27fdma1.png?width=1572&format=png&auto=webp&v=enabled&s=0066bbeadf936436e9c0a09eb60f35e5a256126b"}, {"title": "A Programming game where you use Python to automate all kinds of machines, robots, drones and more and solve exciting bite-sized coding challenges (developer post)", "score": 701, "id": "11l0a09", "url": "https://www.reddit.com/r/Python/comments/11l0a09/a_programming_game_where_you_use_python_to/", "comms_num": 60, "created": 1678198023.0, "body": "I had the pleasure of presenting JOY OF PROGRAMMING here on r/python before and it was met with an overwhelmingly positive reception and a lot of valuable feedback. Thank you!  In case you missed it, the game is all about practicing and applying your Python skills to challenging tasks in realistic, physically simulated 3D environments. It covers a wide variety of topics, from basic algo / ds, oop, GUI programming to control theory, robotics, image processing, machine learning, genetic algorithms, and more. Development is well underway and I'm aiming for a release in Q4 this year.\n\nToday I'd like to get your thoughts on the importance of debugging! Obviously, I already spent an unreasonable amount of time solving the problem, before talking to stakeholders :). So I did create a custom Python debugger (using sys.settrace) and hooked it up to my in-game GUI (based on Codemirror). Now you can set breakpoints, step through the code and inspect variables like you are used to - and the game / simulation steps along in sync (mostly).\n\nIf you are interested in the game, you can find a lot more information about this and all other features and an up to date devlog on the Steam page:\n\n[https://store.steampowered.com/app/2216770/JOY\\_OF\\_PROGRAMMING\\_\\_Software\\_Engineering\\_Simulator](https://store.steampowered.com/app/2216770/JOY_OF_PROGRAMMING__Software_Engineering_Simulator)\n\nI\u2019m happy to answer any questions or to hear your feedback and ideas."}, {"title": "What's a Python Namespace Package, and What's It For? \u2013 Real Python", "score": 1, "id": "11kzd8g", "url": "https://realpython.com/python-namespace-package/", "comms_num": 0, "created": 1678195735.0, "body": ""}, {"title": "Mypy 1.1.1 Released", "score": 36, "id": "11kxeu5", "url": "https://mypy-lang.blogspot.com/2023/03/mypy-111-released.html", "comms_num": 3, "created": 1678190378.0, "body": ""}, {"title": "What are some useful standard libraries that you wish you had known earlier?", "score": 230, "id": "11kwy08", "url": "https://www.reddit.com/r/Python/comments/11kwy08/what_are_some_useful_standard_libraries_that_you/", "comms_num": 117, "created": 1678188984.0, "body": "I am fairly new to to python and just discovered enum and more recently, pickle. They were perfect for this small program I was building and it seems python has something perfect for almost every scenario. What are some other useful standard libs or methods within, that would be good for a beginner to know about?"}, {"title": "Textual widget gallery", "score": 228, "id": "11kw6ev", "url": "https://textual.textualize.io/widget_gallery/", "comms_num": 20, "created": 1678186726.0, "body": ""}, {"title": "Runtime autocompletion with Reloadium. The most reliable way to autocomplete Python code?", "score": 6, "id": "11kvblv", "url": "https://www.reddit.com/r/Python/comments/11kvblv/runtime_autocompletion_with_reloadium_the_most/", "comms_num": 0, "created": 1678183956.0, "body": "Hey guys, just added this feature to reloadium [https://github.com/reloadware/reloadium](https://github.com/reloadware/reloadium)\n\n[Left hand side - during debugging with reloadium, right hand side, without debugging](https://i.redd.it/qf5q9wirjama1.gif)\n\nBecause of dynamic nature of Python PyCharm and other IDEs struggle to autocomplete some libraries\n\nReloadium uses runtime data to produce autocomplete suggestions instead, making it very reliable and resulting with the actual object fields and types.\n\nI'm very curious what you guys think about it!\n\nWould this be useful for daily development?"}, {"title": "Getting Started with GitHub CLI", "score": 1, "id": "11ktqq7", "url": "https://www.kdnuggets.com/2023/03/getting-started-github-cli.html", "comms_num": 0, "created": 1678178245.0, "body": ""}, {"title": "How to setup Python, PyEnv & Poetry on Windows", "score": 0, "id": "11kt1xz", "url": "https://endjin.com/blog/2023/03/how-to-setup-python-pyenv-poetry-on-windows", "comms_num": 0, "created": 1678175761.0, "body": ""}, {"title": "PyQt signal tricks", "score": 17, "id": "11ks1hl", "url": "https://www.reddit.com/r/Python/comments/11ks1hl/pyqt_signal_tricks/", "comms_num": 4, "created": 1678172155.0, "body": "**Callable pyqtBoundSignal**\n\nThe usual way to connect signal to slots in PyQt is using the connect method:\n\n    button.clicked.connect(self._on_click)\n\nBut actually we can also use it as a decorator with inline `def:`\n\n    @button.clicked.connect\n    def _():\n        clicked = True\n        print('clicked')\n\nWe can make it better by removing the `connect` keyword by adding a `__call__` method to `pyqtBoundSignal`\n\n    pyqtBoundSignal.__call__ = pyqtBoundSignal.connect\n\nNow we can write\n\n    @button.clicked\n    def _():\n        clicked = True\n        print('clicked')\n\n**Access child wiget using dict syntax**\n\nIt is a challenge in a complex widget hierarchy to connect a function to a signal in a deeply nested child widget\n\n    @widget.tab.tab1.left.frame.button.clicked\n    def _():\n        print('deeply nested widget')\n\nHow about adding a name to the button and then accessing it using python `dict` syntax. First we add a `__getitem__` method to `QObject`:\n\n    QObject.__getitem__ = lambda self, name: self.findChild((QWidget, ), name)\n\nThen give the button a name\n\n    button.setObjectName('submit_button')\n\nThen we can connect the signal with\n\n    @widget['submit_button'].clicked\n    def _():\n        print('submit clicked')\n\nThis will work even if we change the widget hierarchy as long as the object name does not change and the button is a child of widget."}, {"title": "Context manager that provides simple graceful shutdown interface for your asyncio tasks.", "score": 2, "id": "11kqt97", "url": "https://www.reddit.com/r/Python/comments/11kqt97/context_manager_that_provides_simple_graceful/", "comms_num": 0, "created": 1678168307.0, "body": "# aioshutdown\n\nContext manager that provides simple graceful shutdown interface for your asyncio tasks.\n\n## Installation\n\n    pip install -U aioshutdown\n\n## Usage\n\nJust specify the list of signals that you want to intercept using the `|` operator:\n\n    from aioshutdown import SIGTERM, SIGINT, SIGHUP\n    \n    \n    with SIGTERM | SIGHUP | SIGINT as loop:\n        ...\n\nThe context manager will return an instance of the current event loop. You can intercept signals directly inside your coroutines:\n\n    async def my_task(sleep: int):\n        try:\n            \"\"\" Main logic of your coroutine. \"\"\"\n        except asyncio.CancelledError as exc:\n            \"\"\" In this place you can gracefully complete the work. \"\"\"\n\nFull example:\n\n    import asyncio\n    from aioshutdown import SIGTERM, SIGINT, SIGHUP\n    import logging\n    \n    \n    logging.basicConfig(\n        level=logging.INFO,\n        format=\"%(asctime)s,%(msecs)d %(levelname)s: %(message)s\",\n        datefmt=\"%H:%M:%S\",\n    )\n    \n    async def my_task(sleep: int):\n        try:\n            while True:\n                logging.info(\"Sleep from task #%s\", sleep)\n                await asyncio.sleep(sleep)\n        except asyncio.CancelledError as exc:\n            # Received an exit signal. In this place we gracefully complete the work.\n            signal = exc.args[0] # NOTE: works in Python >= 3.9 only: https://docs.python.org/3/library/asyncio-future.html?highlight=Changed%20in%20version%203.9:%20Added%20the%20msg%20parameter.#asyncio.Future.cancel\n            logging.warning(\"Received %s signal. Shutting down...\", signal.value)\n    \n    # Usage with `run_forever`\n    \n    with SIGTERM | SIGHUP | SIGINT as loop:\n        tasks = [loop.create_task(my_task(i)) for i in range(1, 10)]\n        loop.run_forever()\n    \n    # Usage with `run_until_complete`\n    \n    with SIGTERM | SIGHUP | SIGINT as loop:\n        tasks = [loop.create_task(my_task(i)) for i in range(1, 10)]\n        loop.run_until_complete(asyncio.gather(*results))\n\nOutput\n\n    23:04:05,798 INFO: Sleep from task #1\n    23:04:05,798 INFO: Sleep from task #2\n    23:04:06,799 INFO: Sleep from task #1\n    23:04:07,800 INFO: Sleep from task #2\n    23:04:07,800 INFO: Sleep from task #1\n    23:04:08,801 INFO: Sleep from task #1\n    ^C23:04:09,504 INFO: Received exit signal SIGINT...\n    23:04:09,504 INFO: Cancelling 2 outstanding tasks\n    23:04:09,504 WARNING: Received 2 signal. Shutting down...\n    23:04:09,504 WARNING: Received 2 signal. Shutting down...\n    23:04:09,504 INFO: Stopping event loop\n\nProject homepage: [https://github.com/aliev/aioshutdown](https://github.com/aliev/aioshutdown)"}, {"title": "What is the furthest extent one can go in python?", "score": 0, "id": "11kp0wj", "url": "https://www.reddit.com/r/Python/comments/11kp0wj/what_is_the_furthest_extent_one_can_go_in_python/", "comms_num": 11, "created": 1678163182.0, "body": "I\u2019m pretty much a beginner buying courses and learning more and more every day. As I go I\u2019m learning that there\u2019s a huge void of know long how much I don\u2019t know about what can be done with python is it\u2019s most advanced variations. So I wanted to know how far could one be able to program and create with Python?"}, {"title": "Two different ways to write configuration files in Python", "score": 32, "id": "11knilb", "url": "https://www.reddit.com/r/Python/comments/11knilb/two_different_ways_to_write_configuration_files/", "comms_num": 11, "created": 1678159045.0, "body": "When working on a Python project, it's often necessary to use configuration files to store application settings and parameters. Writing configuration files in Python can provide a simple and organized way to manage these settings, allowing you to easily modify and update them as needed. In this article, we'll explore the basics of writing configuration files in Python \n\n[https://datamajor.net/how-to-write-configuration-files-in-python/](https://datamajor.net/how-to-write-configuration-files-in-python/)"}, {"title": "Python is COOL", "score": 28, "id": "11kmp9q", "url": "https://www.reddit.com/r/Python/comments/11kmp9q/python_is_cool/", "comms_num": 10, "created": 1678156891.0, "body": "First off I am a self taught. Grabbed some books took a couple of Coursera certs and the learning just kept piling on. My bread and butter is with pandas. I have create automated sql db's for crypto OHLCV data which led me to creating trading bots which I run two non stop. The journey was not always easy but always fun for me. \n\nRecently I started learning Ubuntu Server and MYSQL Server as I want to become a Data Engineer (yes getting hired is hard for me) . I finally now can set and configure all that I need currently and would like to show off my skills in my portfolio. If you have any **suggestions** on what I should build my ears are open. Any suggestions/help on interviewing for this title would be helpful. \n\nAlso side note if you trying to get an automated sql db for crypto data shoot a message and will send you the code. Cant link github since LINKDIN."}, {"title": "Best place to find jobs as a freelancer", "score": 0, "id": "11kmfag", "url": "https://www.reddit.com/r/Python/comments/11kmfag/best_place_to_find_jobs_as_a_freelancer/", "comms_num": 0, "created": 1678156206.0, "body": "Greetings,  \n\n\nWanted to ask if anyone knows a place/website to find freelance jobs. Very much appreciated."}, {"title": "pyllama - I just published a python library for LLaMA with Single GPU inference code", "score": 16, "id": "11klkad", "url": "https://www.reddit.com/r/Python/comments/11klkad/pyllama_i_just_published_a_python_library_for/", "comms_num": 3, "created": 1678154070.0, "body": "pyllama - I just published a python library for LLaMA with Single GPU inference code\n\npyllama is a hacked version of LLaMA based on original Facebook's implementation but more convenient to run in a Single consumer grade GPU.\n\nInstallation:\n\n    pip install pyllama\n\nURL: [https://github.com/juncongmoo/pyllama](https://github.com/juncongmoo/pyllama)"}, {"title": "If you had to pick a library from another language (Rust, JS, etc.) that isn\u2019t currently available in Python and have it instantly converted into Python for you to use, what would it be?", "score": 325, "id": "11kkvfo", "url": "https://www.reddit.com/r/Python/comments/11kkvfo/if_you_had_to_pick_a_library_from_another/", "comms_num": 246, "created": 1678152361.0, "body": ""}, {"title": "1 WEEK TO GO: Register for Python Web Conf Today!", "score": 1, "id": "11kjz7z", "url": "https://www.reddit.com/r/Python/comments/11kjz7z/1_week_to_go_register_for_python_web_conf_today/", "comms_num": 0, "created": 1678150155.0, "body": "https://preview.redd.it/0gopi5rds7ma1.png?width=1460&format=png&auto=webp&v=enabled&s=b35071db214286d9cab9b6ba6e6298039931576c\n\nJoin Pythonistas from around the world for the 5th annual Python Web Conference (March 13-17). Tickets include 5 days, 65+ live talks, expert-led tutorials, social events, an exclusive pass to all conference recordings for 90 days, cool swag and more. Don\u2019t wait, buy your ticket today!\n\nThat's not all, we're offering an exclusive 15% discount code for past Python Web Conference attendees! To register,  use the discount code \"PastPWCAttendee\u201d at checkout or check out this link \ud83d\udc47\n\n[https://ti.to/six-feet-up/python-web-conf-2023/discount/PastPWCAttendee](https://ti.to/six-feet-up/python-web-conf-2023/discount/PastPWCAttendee)\n\n* Full Schedule: [https://2023.pythonwebconf.com/schedule](https://2023.pythonwebconf.com/schedule)\n* Register today: [https://ti.to/six-feet-up/python-web-conf-2023](https://ti.to/six-feet-up/python-web-conf-2023)\n\nSee you on March 13!"}, {"title": "Tuesday Daily Thread: Advanced questions", "score": 4, "id": "11kiq85", "url": "https://www.reddit.com/r/Python/comments/11kiq85/tuesday_daily_thread_advanced_questions/", "comms_num": 5, "created": 1678147210.0, "body": "Have some burning questions on advanced Python topics? Use this thread to ask more advanced questions related to Python.\n\n**If your question is a beginner question we hold a beginner Daily Thread tomorrow (Wednesday) where you can ask any question! We may remove questions here and ask you to resubmit tomorrow.**\n\nThis thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response."}, {"title": "Monorepo for Data Science projects in Python", "score": 3, "id": "11kgyel", "url": "https://www.reddit.com/r/Python/comments/11kgyel/monorepo_for_data_science_projects_in_python/", "comms_num": 1, "created": 1678143197.0, "body": "I've joined an organization that uses a monorepo for their code and Bazel to manage the monorepo.\n\nI come from the land of poetry, tox, miniconda, asdf, and the like.  I don't know Bazel at all.\n\nDoes anyone have advice or pointers to docs for how to think about Monorepo/Bazel when trying to support multiple python, ds projects in that repo?"}, {"title": "Introducing ItsPrompt: Prompting - the fancy way", "score": 106, "id": "11kfpzw", "url": "https://www.reddit.com/r/Python/comments/11kfpzw/introducing_itsprompt_prompting_the_fancy_way/", "comms_num": 17, "created": 1678140428.0, "body": "[a presentation of ItsPrompt](https://reddit.com/link/11kfpzw/video/xtf0n71iy6ma1/player)\n\nHello r/Python!\n\nAsking the user for input is important, right?\n\nSo, i created **ItsPrompt**, a python module that asks the user various kinds of prompts, like a list, checkboxes, or text input.\n\nIt helps you getting information from the user, easy and quick, without losing focus on your main project.\n\nIf you want to try it out, it's on PyPI: [https://pypi.org/project/ItsPrompt/](https://pypi.org/project/ItsPrompt/).\n\nThe source code is available on github: [https://github.com/TheItsProjects/ItsPrompt](https://github.com/TheItsProjects/ItsPrompt).\n\nYou've got ideas or want to help us make **ItsPrompt** better, don't hesitate to open an issue, create a PR or even join our [Discord](https://discord.gg/rP9Qke2jDs)!"}, {"title": "A Deep Dive into the __new__() Method in Python: Customizing Object Creation 4 Examples", "score": 70, "id": "11kek1e", "url": "https://amr-khalil.medium.com/a-deep-dive-into-the-new-method-in-python-25e4cb5d1361", "comms_num": 2, "created": 1678137942.0, "body": ""}, {"title": "I made a pydantic token validation module! Check it out!", "score": 3, "id": "11ke48w", "url": "https://www.reddit.com/r/Python/comments/11ke48w/i_made_a_pydantic_token_validation_module_check/", "comms_num": 0, "created": 1678137012.0, "body": "It is called \\`bootleg-jwt\\` and can be installed in [pip](https://pypi.org/project/bootleg-jwt/)). Source: [https://github.com/freyjagp/bootleg-jwt](https://github.com/freyjagp/bootleg-jwt)\n\n\nUsing pydantic, one can easily integrate this module with any web framework for quick and simple token validation. See the readme for basic usage.\n\n\n\n\n# bootleg-jwt <!-- omit in toc -->\n\n`bootleg-jwt` aims to mimic JSON Web Tokens in a simple, `pydantic` way.\n\nThis module provides two main functions:\n\n- [Generate a token](#generate-a-token)\n- [Validate a token](#validate-a-token)\n\nThese are designed to be very simple to use. See below:\n\n## Generate a token\n\n```python\nfrom bootleg_jwt import BootlegJWT, Payload, header, body\nfrom pydantic import BaseModel\nfrom os import environ              # An environment variable is required.\n\n\nSECRET = \"some-secret-key\"\n\n\nDURATION = 60 * 60                  # Token expires after this many seconds\n\n\nTYPE = \"Testing Token\"              # An arbitrary name\n\n\nenviron['SECRET'] = SECRET          # This module depends upon an environment\n                                    # variable `SECRET`. You may also set this\n                                    # secret in a `.env` file in your project's root,\n                                    # or by using `export SECRET=\"secret\"`\n\n\n\n## These two pydantic models are simple examples. They may have arbitrary names and data. They must only map to Token.body.user and Token.body.data\nclass UserData(BaseModel):\n    id: int\n    username: str\n\n\nclass BodyData(BaseModel):\n    info: str\n    value: bool\n\n\npayload_user = UserData(id=69,username=\"nice\")\npayload_body = BodyData(info=\"Some Information\", value=True)\n\n\npayload = Payload(\n    header=header(duration=DURATION,type=TYPE),\n    body=body(user=payload_user,data=payload_body)\n)\n\n\ngenerate = BootlegJWT(payload=payload)\ntoken = generate.TOKEN\nencoded = generate.ENCODED\njson = generate.JSON\nvalidate = generate.VALID\ndivider = \"\\n------------------------------\\n\"\n\n\n\nprint(token,divider,encoded,divider,json,divider,validate)\n```\n\n<details>\n<summary>Output (click to expand):</summary>\n<br>\n\n```json\nheader=Header(type='Testing Token', duration=Duration(unit=Unit(type='time', name='seconds', shorthand='s'), value=3600), created=Timestamp(unit=Unit(type='time', name='seconds since epoch', shorthand='s+epoch'), value=1677382369), expires=Timestamp(unit=Unit(type='time', name='seconds since epoch', shorthand='s+epoch'), value=1677385969)) body=Body(user=UserData(id=69, username='nice'), data=BodyData(info='Some Information', value=True)) signature=Hash(value=b'e0b99c4eca2811bd9d164185219a283a4fddc2129ec0d2b3e5ba7b22596e4c7b8ac6d7b7c81812b50ace0a5b6d0be3ce5f977f753069d951bf15d13f179014df', algorithm='blake2b', keyed=True, salt=b'', person=b'')\n------------------------------\n b'eyJoZWFkZXIiOiB7InR5cGUiOiAiVGVzdGluZyBUb2tlbiIsICJkdXJhdGlvbiI6IHsidW5pdCI6IHsidHlwZSI6ICJ0aW1lIiwgIm5hbWUiOiAic2Vjb25kcyIsICJzaG9ydGhhbmQiOiAicyJ9LCAidmFsdWUiOiAzNjAwfSwgImNyZWF0ZWQiOiB7InVuaXQiOiB7InR5cGUiOiAidGltZSIsICJuYW1lIjogInNlY29uZHMgc2luY2UgZXBvY2giLCAic2hvcnRoYW5kIjogInMrZXBvY2gifSwgInZhbHVlIjogMTY3NzM4MjM2OX0sICJleHBpcmVzIjogeyJ1bml0IjogeyJ0eXBlIjogInRpbWUiLCAibmFtZSI6ICJzZWNvbmRzIHNpbmNlIGVwb2NoIiwgInNob3J0aGFuZCI6ICJzK2Vwb2NoIn0sICJ2YWx1ZSI6IDE2NzczODU5Njl9fSwgImJvZHkiOiB7InVzZXIiOiB7ImlkIjogNjksICJ1c2VybmFtZSI6ICJuaWNlIn0sICJkYXRhIjogeyJpbmZvIjogIlNvbWUgSW5mb3JtYXRpb24iLCAidmFsdWUiOiB0cnVlfX0sICJzaWduYXR1cmUiOiB7InZhbHVlIjogImUwYjk5YzRlY2EyODExYmQ5ZDE2NDE4NTIxOWEyODNhNGZkZGMyMTI5ZWMwZDJiM2U1YmE3YjIyNTk2ZTRjN2I4YWM2ZDdiN2M4MTgxMmI1MGFjZTBhNWI2ZDBiZTNjZTVmOTc3Zjc1MzA2OWQ5NTFiZjE1ZDEzZjE3OTAxNGRmIiwgImFsZ29yaXRobSI6ICJibGFrZTJiIiwgImtleWVkIjogdHJ1ZSwgInNhbHQiOiAiIiwgInBlcnNvbiI6ICIifX0='\n------------------------------\n {\n    \"header\": {\n        \"type\": \"Testing Token\",\n        \"duration\": {\n            \"unit\": {\n                \"type\": \"time\",\n                \"name\": \"seconds\",\n                \"shorthand\": \"s\"\n            },\n            \"value\": 3600\n        },\n        \"created\": {\n            \"unit\": {\n                \"type\": \"time\",\n                \"name\": \"seconds since epoch\",\n                \"shorthand\": \"s+epoch\"\n            },\n            \"value\": 1677382369\n        },\n        \"expires\": {\n            \"unit\": {\n                \"type\": \"time\",\n                \"name\": \"seconds since epoch\",\n                \"shorthand\": \"s+epoch\"\n            },\n            \"value\": 1677385969\n        }\n    },\n    \"body\": {\n        \"user\": {\n            \"id\": 69,\n            \"username\": \"nice\"\n        },\n        \"data\": {\n            \"info\": \"Some Information\",\n            \"value\": true\n        }\n    },\n    \"signature\": {\n        \"value\": \"e0b99c4eca2811bd9d164185219a283a4fddc2129ec0d2b3e5ba7b22596e4c7b8ac6d7b7c81812b50ace0a5b6d0be3ce5f977f753069d951bf15d13f179014df\",\n        \"algorithm\": \"blake2b\",\n        \"keyed\": true,\n        \"salt\": \"\",\n        \"person\": \"\"\n    }\n}\n------------------------------\n True\n```\n\n</details>\n<br>\n\n## Validate a token\n\n```python\nfrom bootleg_jwt import BootlegJWT, Payload, header, body\nfrom pydantic import BaseModel\nfrom os import environ              # An environment variable is required.\n\n\nSECRET = \"some-secret-key\"\n\n\nDURATION = 60 * 60                  # Token expires after this many seconds\n\n\nTYPE = \"Testing Token\"              # An arbitrary name\n\n\nenviron['SECRET'] = SECRET          # This module depends upon an environment\n                                    # variable `SECRET`. You may also set this\n                                    # secret in a `.env` file in your project's root,\n                                    # or by using `export SECRET=\"secret\"`\n\n\n\n## These two pydantic models are simple examples. They may have arbitrary names and data. They must only map to Token.body.user and Token.body.data\nclass UserData(BaseModel):\n    id: int\n    username: str\n\n\nclass BodyData(BaseModel):\n    info: str\n    value: bool\n\n\npayload_user = UserData(id=69,username=\"nice\")\npayload_body = BodyData(info=\"Some Information\", value=True)\n\n\npayload = Payload(\n    header=header(duration=DURATION,type=TYPE),\n    body=body(user=payload_user,data=payload_body)\n)\n\n\ndivider = \"\\n------------------------------\\n\"\n\n\ndef generate(payload):\n    generate = BootlegJWT(payload=payload)\n    decoded = generate.DECODED\n    encoded = generate.ENCODED\n    json = generate.JSON\n    validate = generate.VALID\n    print(decoded,divider,encoded,divider,json,divider,validate)\n    return encoded\n\n\ndef validate_token(token):\n    validate_token = BootlegJWT(token=token)\n    v_decoded = validate_token.DECODED\n    v_json = validate_token.JSON\n    v_valid = validate_token.VALID\n    print(v_decoded,divider,v_json,divider,v_valid)\n\n\nvalidate_token(generate(payload))\n```\n\n<details>\n<summary>Output (click to expand):</summary>\n<br>\n\n```json\nheader=Header(type='Testing Token', duration=Duration(unit=Unit(type='time', name='seconds', shorthand='s'), value=3600), created=Timestamp(unit=Unit(type='time', name='seconds since epoch', shorthand='s+epoch'), value=1677383225), expires=Timestamp(unit=Unit(type='time', name='seconds since epoch', shorthand='s+epoch'), value=1677386825)) body=Body(user=UserData(id=69, username='nice'), data=BodyData(info='Some Information', value=True)) signature=Hash(value=b'9a6a3fc5c866442ee886c1d20f44fe49da29be4e56fd6f40a1c3e23f672d801c0d787f9f239265477da1339fffc41754f16a0899f5955aa0ed7602693919071d', algorithm='blake2b', keyed=True, salt=b'', person=b'')\n------------------------------\n b'eyJoZWFkZXIiOiB7InR5cGUiOiAiVGVzdGluZyBUb2tlbiIsICJkdXJhdGlvbiI6IHsidW5pdCI6IHsidHlwZSI6ICJ0aW1lIiwgIm5hbWUiOiAic2Vjb25kcyIsICJzaG9ydGhhbmQiOiAicyJ9LCAidmFsdWUiOiAzNjAwfSwgImNyZWF0ZWQiOiB7InVuaXQiOiB7InR5cGUiOiAidGltZSIsICJuYW1lIjogInNlY29uZHMgc2luY2UgZXBvY2giLCAic2hvcnRoYW5kIjogInMrZXBvY2gifSwgInZhbHVlIjogMTY3NzM4MzIyNX0sICJleHBpcmVzIjogeyJ1bml0IjogeyJ0eXBlIjogInRpbWUiLCAibmFtZSI6ICJzZWNvbmRzIHNpbmNlIGVwb2NoIiwgInNob3J0aGFuZCI6ICJzK2Vwb2NoIn0sICJ2YWx1ZSI6IDE2NzczODY4MjV9fSwgImJvZHkiOiB7InVzZXIiOiB7ImlkIjogNjksICJ1c2VybmFtZSI6ICJuaWNlIn0sICJkYXRhIjogeyJpbmZvIjogIlNvbWUgSW5mb3JtYXRpb24iLCAidmFsdWUiOiB0cnVlfX0sICJzaWduYXR1cmUiOiB7InZhbHVlIjogIjlhNmEzZmM1Yzg2NjQ0MmVlODg2YzFkMjBmNDRmZTQ5ZGEyOWJlNGU1NmZkNmY0MGExYzNlMjNmNjcyZDgwMWMwZDc4N2Y5ZjIzOTI2NTQ3N2RhMTMzOWZmZmM0MTc1NGYxNmEwODk5ZjU5NTVhYTBlZDc2MDI2OTM5MTkwNzFkIiwgImFsZ29yaXRobSI6ICJibGFrZTJiIiwgImtleWVkIjogdHJ1ZSwgInNhbHQiOiAiIiwgInBlcnNvbiI6ICIifX0='\n------------------------------\n {\n    \"header\": {\n        \"type\": \"Testing Token\",\n        \"duration\": {\n            \"unit\": {\n                \"type\": \"time\",\n                \"name\": \"seconds\",\n                \"shorthand\": \"s\"\n            },\n            \"value\": 3600\n        },\n        \"created\": {\n            \"unit\": {\n                \"type\": \"time\",\n                \"name\": \"seconds since epoch\",\n                \"shorthand\": \"s+epoch\"\n            },\n            \"value\": 1677383225\n        },\n        \"expires\": {\n            \"unit\": {\n                \"type\": \"time\",\n                \"name\": \"seconds since epoch\",\n                \"shorthand\": \"s+epoch\"\n            },\n            \"value\": 1677386825\n        }\n    },\n    \"body\": {\n        \"user\": {\n            \"id\": 69,\n            \"username\": \"nice\"\n        },\n        \"data\": {\n            \"info\": \"Some Information\",\n            \"value\": true\n        }\n    },\n    \"signature\": {\n        \"value\": \"9a6a3fc5c866442ee886c1d20f44fe49da29be4e56fd6f40a1c3e23f672d801c0d787f9f239265477da1339fffc41754f16a0899f5955aa0ed7602693919071d\",\n        \"algorithm\": \"blake2b\",\n        \"keyed\": true,\n        \"salt\": \"\",\n        \"person\": \"\"\n    }\n}\n------------------------------\n True\nheader=Header(type='Testing Token', duration=Duration(unit=Unit(type='time', name='seconds', shorthand='s'), value=3600), created=Timestamp(unit=Unit(type='time', name='seconds since epoch', shorthand='s+epoch'), value=1677383225), expires=Timestamp(unit=Unit(type='time', name='seconds since epoch', shorthand='s+epoch'), value=1677386825)) body=Body(user={'id': 69, 'username': 'nice'}, data={'info': 'Some Information', 'value': True}) signature=Hash(value=b'9a6a3fc5c866442ee886c1d20f44fe49da29be4e56fd6f40a1c3e23f672d801c0d787f9f239265477da1339fffc41754f16a0899f5955aa0ed7602693919071d', algorithm='blake2b', keyed=True, salt=b'', person=b'')\n------------------------------\n {\n    \"header\": {\n        \"type\": \"Testing Token\",\n        \"duration\": {\n            \"unit\": {\n                \"type\": \"time\",\n                \"name\": \"seconds\",\n                \"shorthand\": \"s\"\n            },\n            \"value\": 3600\n        },\n        \"created\": {\n            \"unit\": {\n                \"type\": \"time\",\n                \"name\": \"seconds since epoch\",\n                \"shorthand\": \"s+epoch\"\n            },\n            \"value\": 1677383225\n        },\n        \"expires\": {\n            \"unit\": {\n                \"type\": \"time\",\n                \"name\": \"seconds since epoch\",\n                \"shorthand\": \"s+epoch\"\n            },\n            \"value\": 1677386825\n        }\n    },\n    \"body\": {\n        \"user\": {\n            \"id\": 69,\n            \"username\": \"nice\"\n        },\n        \"data\": {\n            \"info\": \"Some Information\",\n            \"value\": true\n        }\n    },\n    \"signature\": {\n        \"value\": \"9a6a3fc5c866442ee886c1d20f44fe49da29be4e56fd6f40a1c3e23f672d801c0d787f9f239265477da1339fffc41754f16a0899f5955aa0ed7602693919071d\",\n        \"algorithm\": \"blake2b\",\n        \"keyed\": true,\n        \"salt\": \"\",\n        \"person\": \"\"\n    }\n}\n------------------------------\n True\n\n\n```"}, {"title": "txtai 5.4 released: prompt templates, conversational task chaining and HF Hub", "score": 3, "id": "11kcqj1", "url": "https://github.com/neuml/txtai", "comms_num": 0, "created": 1678134126.0, "body": ""}, {"title": "streaming now: OpenAI's Codex to optimize code using python", "score": 4, "id": "11kcole", "url": "https://www.reddit.com/r/Python/comments/11kcole/streaming_now_openais_codex_to_optimize_code/", "comms_num": 1, "created": 1678134019.0, "body": "Hello everyone,\n\nI will try my best today to get a little project of the ground.\n\nThe idea is to use openAI's Codex with python to optimise code in a PR.  \nTune in [https://www.twitch.tv/3lmoritz](https://www.twitch.tv/3lmoritz)  \n\n\nI'm using python, because it is simple and can be used almost anywhere.\n\nHope to see you there."}, {"title": "Perl with Python? Turned out quite natural: alerting to Slack with Swatchdog", "score": 9, "id": "11kbvy3", "url": "https://www.reddit.com/r/Python/comments/11kbvy3/perl_with_python_turned_out_quite_natural/", "comms_num": 0, "created": 1678132335.0, "body": "For a bootstrapped business, you've got to keep aware of production problems as they happen.  \n\nBut: commercial solutions can be problematic, for instance a surge of logs - indicating a possible important problem that needs to be solved - pushes volume on to another tier. \n\nShould the \u201clog ransom\u201d be paid?\n\nNot necessarily - go old school and use Swatchdog:\n\nhttps://profitview.net/blog/simple-effective-system-alerts"}, {"title": "FluidFrames.RIFE 11.0 - video AI interpolation app (RIFE-HDv3)", "score": 1, "id": "11ju4fa", "url": "https://www.reddit.com/r/Python/comments/11ju4fa/fluidframesrife_110_video_ai_interpolation_app/", "comms_num": 0, "created": 1678095185.0, "body": "&#x200B;\n\nhttps://preview.redd.it/qn8mobyr63ma1.png?width=1627&format=png&auto=webp&v=enabled&s=6596b7c74a6ff3b55e8be392a4188e3b48a75bd3\n\n* Github: [https://github.com/Djdefrag/FluidFrames.RIFE](https://github.com/Djdefrag/FluidFrames.RIFE)\n* Itch: [https://jangystudio.itch.io/fluidframesrife](https://jangystudio.itch.io/fluidframesrife)\n\n**What is\u00a0FluidFrames.RIFE?**\n\nFluidFrames.RIFE is a Windows app that uses RIFE-HDv3 artificial intelligence to doubling or quadrupling videos fps.\n\n**Version 11.0 changelog**\n\nNEW\n\n* Optimized RIFEHDv3, is now faster and more stable\n* Added a description for each widget, accessible via button next to each widget\n* When selecting 100% as Input Resolution, resizing phase will be skipped\n* Input Resolution widget will now accept values > 100%\n   * video can be upscaled before passing through AI\n   * for example, a video 100x100px with Input Resolution 200%\n   * 100x100px > 200x200px\n\nGUI\n\n* Removed \"Options\" button\n* Some little changes\n\nBUGFIX / IMPROVEMENTS\n\n* Fix reading and writing images with non-ascii characters in filepath. Thanks [@jaycalixto](https://github.com/jaycalixto)\n* Fixed a bug that did not allow resources to be released upon upscale failure\n* Updated dependencies:\n   * Python 3.10.9 -> 3.10.10\n   * pytorch 1.13 -> 1.13.1\n   * torch-directml 1.13 -> 1.13.1\n* Code cleaning and improvements"}, {"title": "Tipe - typed pipe", "score": 4, "id": "11kbi1q", "url": "https://www.reddit.com/r/Python/comments/11kbi1q/tipe_typed_pipe/", "comms_num": 0, "created": 1678131504.0, "body": "Hi, everyone!\n\nSome time ago I saw how hyped JS community was about [pipeline operator proposal](https://github.com/tc39/proposal-pipeline-operator). So I tried to make something similar in python. There is how `tipe` module was created. Check it out if you are interested: [https://github.com/mishankov/tipe](https://github.com/mishankov/tipe)"}, {"title": "Streamlit App-A-Thon Contest \ud83c\udfc6", "score": 4, "id": "11kbd01", "url": "https://www.reddit.com/r/Python/comments/11kbd01/streamlit_appathon_contest/", "comms_num": 0, "created": 1678131205.0, "body": "\ud83d\udea8 We're back with the Streamlit App-A-Thon Contest! \ud83d\udea8\n\nBuild data apps and stand a chance of winning some cool Streamlit swag! \ud83c\udf81\n\nIf you have any questions, please post them on r/StreamlitOfficial.\n\nFind more info on our [forum post](https://discuss.streamlit.io/t/streamlit-app-a-thon-contest/38815).\n\nHappy Streamlit-ing! \ud83c\udf88\n\nhttps://preview.redd.it/lkiu3g8786ma1.png?width=1200&format=png&auto=webp&v=enabled&s=2063b4b7839ff0630f9ef5a7751061505c2ffb11"}, {"title": "Python guilds to pandas and numpy", "score": 0, "id": "11k8y21", "url": "https://www.reddit.com/r/Python/comments/11k8y21/python_guilds_to_pandas_and_numpy/", "comms_num": 0, "created": 1678127202.0, "body": "Hello all,\n\n&#x200B;\n\nI'm starting my statistics class with beginner python knowledge. Honestly I preferred java scripting and its layout and became to used to Java so now Python is confusing again. I need a good run down tutorial for numpy and pandas where i can learn to build and manipulate datasets in the form of graphs and charts. Thanks"}, {"title": "Pynecone or Anvil works?", "score": 2, "id": "11k457w", "url": "https://www.reddit.com/r/Python/comments/11k457w/pynecone_or_anvil_works/", "comms_num": 4, "created": 1678121614.0, "body": "Which is the best in terms of features and ease of use?"}, {"title": "Beginner's Python Cheat Sheets", "score": 25, "id": "11k2pcs", "url": "https://ehmatthes.github.io/pcc_3e/cheat_sheets/", "comms_num": 1, "created": 1678118417.0, "body": ""}, {"title": "Do you plan to develop games using Python?", "score": 0, "id": "11k2h5b", "url": "https://www.reddit.com/r/Python/comments/11k2h5b/do_you_plan_to_develop_games_using_python/", "comms_num": 9, "created": 1678117887.0, "body": "Hi all, I\u2019d like to know:   \n\n\n**Are there any Python Devs who know the language well** **(have experience in coding) and who would like to try Video Game Development for the first time?**   \n\n\nWe\u2019re currently developing a new web platform for creating and sharing indie games. It uses python. If you fit the description and are curious about Game Dev what would be the blocking point/ the difficult point in your opinion, that prevented you from giving the Game Creation a shot previously?   \nIf you don\u2019t care about Game Dev in Python you can also tell me why. We\u2019re curious to know about you.  \n\n\nhttps://preview.redd.it/r9d7yah045ma1.png?width=955&format=png&auto=webp&v=enabled&s=f96477da2282b1717f462158007ca136846b441d"}, {"title": "Un bot utilisant la derni\u00e8re version de l\u2019API chatGPT et Whisper", "score": 0, "id": "11k28ys", "url": "https://youtu.be/VQ4R47iAURI", "comms_num": 0, "created": 1678117368.0, "body": ""}, {"title": "I create a library that converts protocols into Pydantic models", "score": 6, "id": "11k283o", "url": "https://www.reddit.com/r/Python/comments/11k283o/i_create_a_library_that_converts_protocols_into/", "comms_num": 0, "created": 1678117310.0, "body": "\\[protobuf-to-pydantic\\]([https://github.com/so1n/protobuf\\_to\\_pydantic](https://github.com/so1n/protobuf_to_pydantic)) provides a functionality to convert Google Protocol Buffers to Pydantic models through parsing protocol file or protoc plugins. It supports the use of protoc-gen-validate to add optional parameters to Pydantic model fields, such as default values and validation rules. The generated Pydantic model code can be used directly in Python projects."}, {"title": "The Python on Microcontrollers Newsletter, a free weekly, no spam ever", "score": 7, "id": "11k0qf1", "url": "https://www.reddit.com/r/Python/comments/11k0qf1/the_python_on_microcontrollers_newsletter_a_free/", "comms_num": 0, "created": 1678113861.0, "body": " \n\nhttps://preview.redd.it/jrm0x547s4ma1.png?width=518&format=png&auto=webp&v=enabled&s=0b22c7b112d1add2a4bed7de906feac2cb6d7ef8\n\nWith the Python on Microcontrollers newsletter, you get all the latest information on Python running on hardware in one place!\n\nThe Python on Microcontrollers newsletter is the place for the latest news. It arrives Tuesday morning with all the week\u2019s happenings.\n\n10,354 subscribers - the largest Python on hardware newsletter out there.\n\n**Catch all the\u00a0weekly news on** [**Python for Microcontrollers**](https://www.adafruitdaily.com/)\u00a0with\u00a0[adafruitdaily.com](https://www.adafruitdaily.com/).\n\n>This\u00a0*ad-free, spam-free*\u00a0weekly email is filled with\u00a0**CircuitPython**,\u00a0**MicroPython**, and\u00a0**Python**\u00a0information that you may have missed, all in one place!  \nYou get a summary of all the software, events, projects, and the latest hardware worldwide once a week, no ads!\n\nEnsure you catch the weekly Python on Hardware roundup\u2013 you can cancel anytime\u00a0**\u2013** [**try our spam-free newsletter today**](https://www.adafruitdaily.com/)**!**\n\n[**https://www.adafruitdaily.com/**](https://www.adafruitdaily.com/)"}, {"title": "Castro - A DSL created to aid devs in scripting and automation in windows, made in python", "score": 1, "id": "11k0gio", "url": "https://www.reddit.com/r/Python/comments/11k0gio/castro_a_dsl_created_to_aid_devs_in_scripting_and/", "comms_num": 2, "created": 1678113143.0, "body": "[https://github.com/cmspeedrunner/Castro](https://github.com/cmspeedrunner/Castro)\n\nonly 1 external library needed"}, {"title": "mk is a python based tool for helping developer contribute to other projects", "score": 3, "id": "11jzzn4", "url": "https://www.reddit.com/r/Python/comments/11jzzn4/mk_is_a_python_based_tool_for_helping_developer/", "comms_num": 0, "created": 1678111932.0, "body": "As few project maintainers have time create and polish their CONTRIBUTING documentation, few years ago I wrote a small [mk](https://github.com/pycontribs/mk) tool that detects which testing tools/scripts are used by the current repository and expose them as simple commands.\n\nBasically this should help anyone discover which testing commands they can run without having to dig the documentation or the forums in some cases. One should no longer remember that the project uses make, tox, or a bunch of shells scripts.\n\nPlease take a look at it and let me know what you think. If you spot other popular build tools that are not supported it will be extremely easy to add support for them as they can be implemented in 10-20 lines of python.\n\nIf you find it useful, don't forget to star it on github, maybe even watch it for new releases."}, {"title": "From NumPy to Arrow: How Pandas 2.0 is Changing Data Processing for the Better", "score": 21, "id": "11jze5c", "url": "https://airbyte.com/blog/pandas-2-0-ecosystem-arrow-polars-duckdb/", "comms_num": 2, "created": 1678110414.0, "body": ""}, {"title": "Constant / Immutable parameters", "score": 1, "id": "11jz1ch", "url": "https://www.reddit.com/r/Python/comments/11jz1ch/constant_immutable_parameters/", "comms_num": 7, "created": 1678109493.0, "body": "A lot of languages support constant function parameters, to tell the user that the parameter will either be mutated (not constant) or not mutated (constant). \n\nIs there an already implemented way to achieve something similar in python?\nIf not was there ever a PEP discussing such a feature?\n\nI was thinking of writing a decorator that either overwrites the __setattr__ of each object or compare the parameter before and after the execution of the function.\nThis would decrease performance tho.\n\nA nicer option would be to be able to add a const keyword as a type-hint and have static type checkers validate, that the parameters would not be mutated in the function-body."}, {"title": "GitHub - fellerts/procal: Simple Qt-based programming calculator", "score": 5, "id": "11jx1aa", "url": "https://github.com/fellerts/procal", "comms_num": 0, "created": 1678104294.0, "body": ""}, {"title": "I made a library to help you migrate from one language to another.", "score": 339, "id": "11jvt40", "url": "https://www.reddit.com/r/Python/comments/11jvt40/i_made_a_library_to_help_you_migrate_from_one/", "comms_num": 42, "created": 1678100656.0, "body": "[Example](https://i.redd.it/heikyuykn3ma1.gif)\n\nHello r/Python! I am the owner of sushi - a library to help you migrate from one language to another and wanted to announce 0.1! When I first posted about sushi, it had lots of bugs and was in a really early stage. After releasing 0.1 all bugs were fixed and suggestions from my last post were applied.\n\nSo what really is sushi? As the title says it's a library to help you migrate from one language to another. It can also be used if you can't find any library for your language. In future, I want to have it compatible with any language.\n\nIf it sounds interesting, you can help me continue growing this project by giving it a star and contributing to it. Thanks for all the support!\n\nI will also listen to all your suggestions and opinions about it, so if you have any - comment it!\n\nHere's the repo: [https://github.com/dev-sushi/sushi](https://github.com/dev-sushi/sushi)  \nExamples:  [https://github.com/dev-sushi/sushi/tree/main/examples](https://github.com/dev-sushi/sushi/tree/main/examples). I will add more when auto indexing will be ready (alternative to regex based indexing)  \n\nEdit: Wow! Thanks for the suggestions and stars on github! This made my day! Also I wanted to add a quick note that sushi is just my side project and I won\u2019t be able to work on it every day. If you have any issues or suggestions create a pull request or a issue on github!\n\nOnce again thanks for all of the support!"}, {"title": "Introducing Fluke, a Python package to help you transfer your data between various remote locations", "score": 50, "id": "11jvleh", "url": "https://www.reddit.com/r/Python/comments/11jvleh/introducing_fluke_a_python_package_to_help_you/", "comms_num": 11, "created": 1678100013.0, "body": "Greetings to the Python community! Back in the summer I made a post here about [PRegEx](https://github.com/manoss96/pregex), an open source project I had made for fun, for which I received mostly positive feedback. This urged me to create [Fluke](https://github.com/manoss96/fluke), yet another open-source project, based on some issues I was having at work relating to transfering data between different cloud storage services. This project is by no means considered to be complete as I have tons of ideas regarding how it could be further expanded to tackle other issues as well. However, I think that it is now at a mature enough stage that it could help you speed up certain processes that may come up during your day-to-day work. \n\nYou can find the docs in here: [fluke.rtfd.io](https://fluke.rtfd.io/)\n\nAny feedback is welcome, and please don't hesitate to raise an issue on Github if you encounter any bugs!"}, {"title": "(rant) Can't find a library that is good for interactive animation / small game and is sharable via static web page.", "score": 6, "id": "11jqk3l", "url": "https://www.reddit.com/r/Python/comments/11jqk3l/rant_cant_find_a_library_that_is_good_for/", "comms_num": 6, "created": 1678083529.0, "body": "I have been waiting for years (more than 5 years now) for a library like p5.js, that helps me create small animations those are interactive and which can be shared through let's say a GitHub page.\nThroughout these years,\n* WebAssembly became a reality\n* Python became faster\n* Solid game engines like Godot and Arcade became popular.\n* Pyodide became stable and started supporting many many libraries.\n* PyScript turned into reality and gave lots of hopes.\n\nBut still months after release of PyScript, the closest thing I have for my use is arcade-web, which is broken was last committed 2 months ago. Nothing else even comes close.\n\nAny thoughts / suggestions? (Other than learning JavaScript)"}, {"title": "Is Python still a relevant programming language to learn?", "score": 0, "id": "11jlul5", "url": "https://www.reddit.com/r/Python/comments/11jlul5/is_python_still_a_relevant_programming_language/", "comms_num": 32, "created": 1678070064.0, "body": ""}, {"title": "DTXT Alpha Release - Feedback is welcome", "score": 2, "id": "11jlp2g", "url": "https://www.reddit.com/r/Python/comments/11jlp2g/dtxt_alpha_release_feedback_is_welcome/", "comms_num": 4, "created": 1678069646.0, "body": "Introducing DTXT, the sleek and versatile text editor designed for easy use and optimal productivity.   \nWith its minimalist interface and intuitive controls, DTXT makes editing text files a breeze.   \n\n\n&#x200B;\n\nhttps://preview.redd.it/7mvpzzxk41ma1.png?width=969&format=png&auto=webp&v=enabled&s=f31329518981ad3fd2c560573474ff303fd95919\n\nWhether you're a professional writer, student, or anyone who works with  text files, DTXT is the perfect tool for all your editing needs.  \n\n\nHOW TO USE  \nRight click to resize the window  \nMiddle click to drag the window \n\nDownload now and take your editing game to the next level!  \n[https://github.com/dlarssystems/DTXT/releases/tag/python](https://github.com/dlarssystems/DTXT/releases/tag/python)"}, {"title": "Monday Daily Thread: Project ideas!", "score": 4, "id": "11jiacw", "url": "https://www.reddit.com/r/Python/comments/11jiacw/monday_daily_thread_project_ideas/", "comms_num": 1, "created": 1678060812.0, "body": "Comment any project ideas beginner or advanced in this thread for others to give a try! If you complete one make sure to reply to the comment with how you found it and attach some source code! If you're looking for project ideas, you might be interested in checking out Al Sweigart's, [\"The Big Book of Small Python Projects\"](https://inventwithpython.com/bigbookpython/) which provides a list of projects and the code to make them work."}, {"title": "Moving hot loops from Python to WASM won\u2019t be feasible without this trick", "score": 0, "id": "11jhirp", "url": "https://medium.com/@alsadi/moving-hot-loops-from-python-to-wasm-wont-be-feasible-without-this-trick-65c9bd2dbe1b", "comms_num": 2, "created": 1678058891.0, "body": ""}, {"title": "Python Packaging Explained", "score": 10, "id": "11jheds", "url": "https://medium.com/@insight-in-plain-sight/python-packaging-12ef040c4ea0", "comms_num": 5, "created": 1678058596.0, "body": ""}, {"title": "Creating a Resume Automation Website with ChatGPT in 10 Minutes", "score": 7, "id": "11jetxj", "url": "https://shanenullain.medium.com/creating-a-resume-automation-website-with-chatgpt-in-10-minutes-efa2adfcc946", "comms_num": 1, "created": 1678052612.0, "body": ""}, {"title": "Solving the Monty Hall Problem with Python!", "score": 0, "id": "11je2zt", "url": "https://youtube.com/watch?v=-DqKSUSHwjc&feature=share", "comms_num": 2, "created": 1678050964.0, "body": ""}, {"title": "What are your thoughts on Ruff? Can it be integrated into our current Python projects to increase speed?", "score": 1, "id": "11jdyxr", "url": "https://www.reddit.com/r/Python/comments/11jdyxr/what_are_your_thoughts_on_ruff_can_it_be/", "comms_num": 8, "created": 1678050710.0, "body": "I'm interested in learning more about Ruff and its potential for integration into our Python projects. I'm wondering if anyone has experience with this and if it has resulted in significant speed improvements. Additionally, I'd like to hear opinions on whether this is a sensible approach and what potential issues may arise from incorporating Ruff into our projects."}, {"title": "Hey r/Python. I did a thing. Would love to get some feedback.", "score": 3, "id": "11jddxn", "url": "https://www.reddit.com/r/Python/comments/11jddxn/hey_rpython_i_did_a_thing_would_love_to_get_some/", "comms_num": 8, "created": 1678049529.0, "body": "Hey folks.\n\nI just \"finished\" (v1, at least) my first Flask app. It's a whiskey database for people to track their collections.\n\nWould love feedback on both the app (if you're a whiskey person) or the code.\n\nI actually \"finished\" it a few days ago, but spent the last 2 days furiously refactoring things that I knew could be better.\n\nOne nice thing about a personal project vs. a work project is that you actually _do_ get the chance to go back and refactor.\n\nSource is at https://github.com/charliegriefer/my-whiskies\n\nApp is at http://www.my-whiskies.online\n\nMy personal list is at http://www.my-whiskies.online/charlie\n\nStill got a few enhancements I'd like to make. \n\nThis is also the first app that I've ever deployed to EC2. Need to learn a _lot_ more there. Site became unresponsive 3x this week (\"Instance reachability check failed\"). A simple reboot fixed it, but would sure love to be a bit more proactive there.\n\nAnyway, apologies for rambling. First real Flask app, and first time asking others to put eyes on the code. Nervous as hell, but appreciate any feedback.\n\nThanks!"}, {"title": "An awesome python GUI: Vue3, Vite, and Eel", "score": 0, "id": "11jcufo", "url": "https://medium.com/@nijhof.dns/an-awesome-python-gui-vue3-vite-and-eel-ce95fa17878e", "comms_num": 13, "created": 1678048649.0, "body": ""}, {"title": "AI-Generated Mind Maps with the ChatGPT API in Python and Streamlit", "score": 4, "id": "11j93uv", "url": "https://medium.com/@dreamferus/ai-generated-mind-maps-with-the-chatgpt-api-in-python-and-streamlit-bad9cd63f402?sk=72e27fcb7b83c0c011dda5f9441a4151", "comms_num": 0, "created": 1678044455.0, "body": ""}, {"title": "EZ-AppInstaller - A cli tool for windows to help install programs that don't come with an installer!", "score": 3, "id": "11j7tcu", "url": "https://www.reddit.com/r/Python/comments/11j7tcu/ezappinstaller_a_cli_tool_for_windows_to_help/", "comms_num": 0, "created": 1678042939.0, "body": "I personally found manually installing application to be a pain (example: dolphin emulator), and I happened to be messing around with chatGPT and, as a result, this was made! It automatically creates a shortcut for the start menu and can install it anywhere you would like. It's using the rich\\_click, pyyaml, pywin32, and other system packages. Install with pip and use `ez-install --help` or check out the readme in the [github repo](https://github.com/bananapizzuh/EZ-AppInstaller) to get started. If you try it out please share your opinions because this is my first finished project :D"}, {"title": "I just published my new book \"A Hands-On Introduction to Essential Python Libraries and Frameworks (With Code Samples)\"", "score": 408, "id": "11j2wgk", "url": "https://www.reddit.com/r/Python/comments/11j2wgk/i_just_published_my_new_book_a_handson/", "comms_num": 31, "created": 1678036426.0, "body": "**Essential Python libraries and frameworks that every aspiring data scientist, ML engineer, and Python developer should know.** \n\n&#x200B;\n\n**You can grab it at Leanpub for free:** [A Hands-On Introduction to Essential Python Libraries and Frameworks (With Code Samples)](https://leanpub.com/essential_python_libraries_and_frameworks)\n\n&#x200B;"}, {"title": "Back-end dev: Math skills required or not really?", "score": 103, "id": "11j1bsk", "url": "https://www.reddit.com/r/Python/comments/11j1bsk/backend_dev_math_skills_required_or_not_really/", "comms_num": 121, "created": 1678033914.0, "body": "I tweaked Python for about two weeks before two programmers have told me I'd eventually need serious math like Fourier Transformations in order to get hired so I dropped it. But after that I've also been told that I can do back-end dev just fine with some logic and no math.\n\nSo which is it?"}, {"title": "How to Fine-Tune DeiT: Data-efficient Image Transformer", "score": 0, "id": "11j0m71", "url": "https://www.ai-contentlab.com/2023/03/how-to-fine-tune-deit-data-efficient.html?m=1", "comms_num": 0, "created": 1678032323.0, "body": ""}, {"title": "How do you manage malicious package security?", "score": 49, "id": "11iymqr", "url": "https://www.reddit.com/r/Python/comments/11iymqr/how_do_you_manage_malicious_package_security/", "comms_num": 15, "created": 1678027105.0, "body": "What are you all doing (or not doing) as far as managing security for individual python packages that aren't part of the standard distribution?\n\nI've been at a company where there was a whitelist for approved python packages and versions but obviously this was extremely slow and people were always trying to find ways around it. I'm currently at a company where we can download whatever the hell we want which is great for speed but maybe risky.\n\nAre there services or processes that you guys use to make sure you're not using a known or potentially malicious python package?"}, {"title": "Build RESTful API with Flask and Python", "score": 7, "id": "11iq1rx", "url": "https://technicbate.blogspot.com/2023/03/build-restful-api-flask-python.html", "comms_num": 9, "created": 1677998664.0, "body": ""}, {"title": "Signals and Slots in PyQt6!", "score": 26, "id": "11imq7k", "url": "https://youtu.be/WYe9lUmvsXM", "comms_num": 0, "created": 1677988369.0, "body": ""}, {"title": "Top 3 hardest things with debugging as a beginner?", "score": 244, "id": "11il0gh", "url": "https://www.reddit.com/r/Python/comments/11il0gh/top_3_hardest_things_with_debugging_as_a_beginner/", "comms_num": 79, "created": 1677983487.0, "body": "I often feel that there should have been more debugging in my programming classes. It is my belief that this would have produced better programmers.\n\nYou tend to write the code differently when you know how to debug code compared to when you have little to no experience with debugging in my experience.\n\nWhen you were a beginner in programming and things did not work as you wanted them to. You had to resort to some level of debugging.\n\nWhat would be the top 3 that you struggled with the most?"}, {"title": "Rust Result in Python!", "score": 2, "id": "11ik7p7", "url": "https://www.reddit.com/r/Python/comments/11ik7p7/rust_result_in_python/", "comms_num": 4, "created": 1677981336.0, "body": "Recently, I discovered `result`, a library bringing the Rust Result type to Python. I played a bit around with it, and felt quite happy with the outcome. I know it's (still?) not \"pythonic\", but it tactually feels quite good to write like that. What are your thoughts about it?\n\nLibrary (not by me): [https://pypi.org/project/result/](https://pypi.org/project/result/)\n\n&#x200B;\n\n[Result with match\\_case](https://preview.redd.it/sx5iuf8eutla1.png?width=1588&format=png&auto=webp&v=enabled&s=5ae0934665d5633b88c899b604ba553a66c214e1)"}, {"title": "Unit testing", "score": 29, "id": "11ik5dm", "url": "https://www.reddit.com/r/Python/comments/11ik5dm/unit_testing/", "comms_num": 19, "created": 1677981161.0, "body": "Does anyone have any good resources that helped you understand unit testing using pytest and mock? I'm a network engineer that does a good bit of automation at work. We are required to have unit testing for all of our code but I struggle to do this since it just doesnt make sense to me. I end up burning hours of time everytime I take a stab at writing testing again."}, {"title": "Sunday Daily Thread: What's everyone working on this week?", "score": 21, "id": "11ihkjk", "url": "https://www.reddit.com/r/Python/comments/11ihkjk/sunday_daily_thread_whats_everyone_working_on/", "comms_num": 41, "created": 1677974411.0, "body": "Tell /r/python what you're working on this week! You can be bragging, grousing, sharing your passion, or explaining your pain. Talk about your current project or your pet project; whatever you want to share."}, {"title": "I need a tool to find out what deletions are in the two videos.", "score": 0, "id": "11ih1qk", "url": "https://www.reddit.com/r/Python/comments/11ih1qk/i_need_a_tool_to_find_out_what_deletions_are_in/", "comms_num": 3, "created": 1677973109.0, "body": ""}, {"title": "VS Code Extension for real-time feedback with optional static typing", "score": 3, "id": "11iduyj", "url": "https://www.reddit.com/r/Python/comments/11iduyj/vs_code_extension_for_realtime_feedback_with/", "comms_num": 0, "created": 1677965420.0, "body": "&#x200B;\n\nhttps://i.redd.it/bubvcyo1jsla1.gif\n\n[Amethyst](https://marketplace.visualstudio.com/items?itemName=rmdashrfv.amethyst) enables you to type into your code editor and get the feedback directly inline, similar to QuokkaJS but for Python. It builds on the no longer maintained project Wolf.\n\nOne major addition is the support for optional static typing (via MyPy). MyPy isn't the fastest on its own, so I'm strongly considering moving this feature to be an onsave rather than every keypress check the types. It does work though. \n\nYou can also customize the colors of the output for light and dark themes respectively, and increase the debounce timer if you are having any performance issues.\n\nThe biggest goal I had for this is actually the one I did not accomplish (but came extremely close) in the time allotted:\n\nExtensions like these update with every keystroke and that means you can run destructive and expensive actions with every character you type. My primary goal was to add caching for SQL database calls and HTTP requests enabled by default and lasting for a default of 5 minutes, so that you could freely edit your code and get real-time feedback elsewhere in your code without beating up your API or hammering your database. I came close, and I think I'll have something for that in the coming 2-3 months.\n\nIf you have any thoughts or suggestions, feel free to drop them below! The things I'm already working on:\n\n1. cache HTTP requests\n2. cache database calls via SQLAlchemy, psycopg2\n3. Disable writing to files by default, toggleable via settings\n\n[https://marketplace.visualstudio.com/items?itemName=rmdashrfv.amethyst](https://marketplace.visualstudio.com/items?itemName=rmdashrfv.amethyst)"}, {"title": "sys Module in Python", "score": 0, "id": "11iauxx", "url": "https://soamtripathy.hashnode.dev/sys-module-in-python", "comms_num": 1, "created": 1677958437.0, "body": ""}, {"title": "Matrix filter using python (webcam input to Ascii)", "score": 3, "id": "11i92e9", "url": "https://youtu.be/BsjXf9MTAzs", "comms_num": 0, "created": 1677954233.0, "body": ""}, {"title": "Testing multiple Python versions with nox and pyenv", "score": 6, "id": "11i8yjw", "url": "https://sethmlarson.dev/nox-pyenv-all-python-versions", "comms_num": 0, "created": 1677953983.0, "body": ""}, {"title": "Wrapyfi for distributing LLaMA by Meta on multiple machines https://github.com/modular-ml/wrapyfi-examples_llama", "score": 0, "id": "11i7psv", "url": "https://www.reddit.com/r/Python/comments/11i7psv/wrapyfi_for_distributing_llama_by_meta_on/", "comms_num": 0, "created": 1677951354.0, "body": ""}, {"title": "Free Online Pandas Tutorial - Learn Pandas Basics In Lessons!", "score": 7, "id": "11i5r0n", "url": "https://bigdata-etl.com/free-online-pandas-tutorial/", "comms_num": 0, "created": 1677948781.0, "body": ""}, {"title": "I want to work more with Python instead of making it just a hobby, but where do I start?", "score": 14, "id": "11i2d9r", "url": "https://www.reddit.com/r/Python/comments/11i2d9r/i_want_to_work_more_with_python_instead_of_making/", "comms_num": 8, "created": 1677944887.0, "body": "I first started to mess with Python back in 2014, never really did anything with it besides make it a fun hobby in between work and whatever I had going on back then. There would be times where I would consider getting an entry level job in Python development but I have don't have working experience or any personal projects under my belt just a handful of skills I learned from tutorials and Udemy.\n\nI've been working as an AV installer for 5 years doing almost everything under the sun. Home automation, security, home theater, integration, fire alarm, camera systems, networking. I've been putting in long hours through all of it and it's challenging most days but I ultimately want to start working with Python, full-time in the near future. I want something more stable, hybrid or remote like a job as a Python programmer/coder.\n\nThe thing is I don't know where to start to get to that point. Should I embark on a giant month to year project? Should I incorporate more of my college degree into my personal projects (BS in Acoustical Engineering)? Should I follow some sort of road map that gets me where I need to go, hopefully quickly?\n\nMy focus as of late has been mess around with Django, containers, DevOps, some data science, and a little bit of 3d game development with ursina. I have ideas for a video game so I would love to create one but I would also want to code a program that makes my job or any one else's job a lot easier. If anyone has any good I ideas where I should go from here, that would really appreciate it :)"}, {"title": "Finally got enough screen space for this.", "score": 0, "id": "11i1wdq", "url": "https://www.reddit.com/r/Python/comments/11i1wdq/finally_got_enough_screen_space_for_this/", "comms_num": 6, "created": 1677943751.0, "body": "&#x200B;\n\n[Seriously why does open\\(\\) need more text than the bible?](https://preview.redd.it/xfbb1ptkqqla1.png?width=1920&format=png&auto=webp&v=enabled&s=6f90cf7d2059a54b71627049476d52aeee6f0a5f)"}, {"title": "TutorialLang - An esoteric programming language written in python!", "score": 0, "id": "11i19m6", "url": "https://www.reddit.com/r/Python/comments/11i19m6/tutoriallang_an_esoteric_programming_language/", "comms_num": 2, "created": 1677942192.0, "body": "[https://github.com/cmspeedrunner/TutorialLang](https://github.com/cmspeedrunner/TutorialLang)\n\nIts code is structured like a tutorial, its pretty readable for experienced programmers ig,"}, {"title": "How to Print-Debug Python Comprehensions", "score": 9, "id": "11hz806", "url": "https://nickdrozd.github.io/2023/03/02/python-comprehension-print-debug.html", "comms_num": 1, "created": 1677936747.0, "body": ""}, {"title": "Prompt templates and task chains - run with Python, YAML or FastAPI", "score": 2, "id": "11hxuml", "url": "https://neuml.hashnode.dev/prompt-templates-and-task-chains", "comms_num": 0, "created": 1677932132.0, "body": ""}, {"title": "python data visualization libraries", "score": 2, "id": "11hwvpc", "url": "https://technicbate.blogspot.com/2023/03/python-data-visualization-libraries.html", "comms_num": 0, "created": 1677928435.0, "body": ""}, {"title": "Clean Architecture with FastAPI", "score": 16, "id": "11hwr7n", "url": "https://www.reddit.com/r/Python/comments/11hwr7n/clean_architecture_with_fastapi/", "comms_num": 2, "created": 1677927958.0, "body": "https://fueled.com/the-cache/posts/backend/clean-architecture-with-fastapi/"}, {"title": "I built a chatbot that debugs your Python code better than ChatGPT", "score": 900, "id": "11hwppa", "url": "https://www.reddit.com/r/Python/comments/11hwppa/i_built_a_chatbot_that_debugs_your_python_code/", "comms_num": 123, "created": 1677927805.0, "body": "Link: [https://useadrenaline.com/](https://useadrenaline.com/)\n\n[Demo video](https://reddit.com/link/11hwppa/video/6b6rkdexepla1/player)\n\nI built this using semantic search and the ChatGPT API, which was just released the other day. What makes it special is it not only understands the code you're debugging, but also pulls in additional context like relevant documentation to help answer your questions and suggest code changes. Ultimately, my goal is to take the hassle out of pasting error messages into Google, finding a vaguely related StackOverflow post, and manually integrating the solution into your code.\n\nPlease let me know what y'all think!"}, {"title": "Reducing size of dependencies", "score": 38, "id": "11hvh2f", "url": "https://www.reddit.com/r/Python/comments/11hvh2f/reducing_size_of_dependencies/", "comms_num": 25, "created": 1677923446.0, "body": "One thing that rarely seems to be discussed in python development is the size of dependencies. Even a simply application that requires pandas will come with around 150mb of dependencies. That's a lot of code and a lot of it is probably not used.\n\nWith serverless architectures becoming more and more important, I was wondering if there is a way to remove dead code from python environments. Functions will have a much longer cold start time if the dependencies are large. I believe lambda has a limit of 250mb which you already used up 60% of if you're in need of pandas alone.\n\nTree shaking in Javascript is an often used term. How come seemingly nobody talks about this in python projects? Is there a recommended way to remove unused code from environments?"}, {"title": "envanter - Yet another environment parser.", "score": 3, "id": "11huyed", "url": "https://www.reddit.com/r/Python/comments/11huyed/envanter_yet_another_environment_parser/", "comms_num": 0, "created": 1677921512.0, "body": "So yeah, this is a simple environment parser I wanted to share. Why? Well, the ones I found either did too much or too less (or I did not like their API), so I got something specific for my use case. Maybe you'll like it too.\n\nThis was also the first time I used Sphinx to generate docs, and I am quite shocked how easy and useful it is to set up.\n\nHere are some links:\n\nGitHub [github.com/realsuayip/envanter](https://github.com/realsuayip/envanter)  \nPyPI [pypi.org/project/envanter/](https://pypi.org/project/envanter/)  \nRead the docs [envanter.readthedocs.io/](https://envanter.readthedocs.io/)"}, {"title": "I am sick of writing argparse boilerplate code, so I made \"duckargs\" to do it for me", "score": 270, "id": "11hqsbv", "url": "https://www.reddit.com/r/Python/comments/11hqsbv/i_am_sick_of_writing_argparse_boilerplate_code_so/", "comms_num": 61, "created": 1677908076.0, "body": "I find myself writing a lot of relatively small/simple python programs that need to accept command-line arguments, and it can get annoying to keep writing similar boilerplate code for argparse and looking up / double checking function keyword names for \"parser.add\\_argument\". Distracts me from the thing I intended to do.\n\nYou can run \"duckargs\" and pass it whatever command line options/args/flags that you want it to accept, and it will spit out the python code for a program that has the necessary argparse calls to handle those arguments.\n\n[https://github.com/eriknyquist/duckargs](https://github.com/eriknyquist/duckargs)\n\nExample:\n\n    $ python -m duckargs -a -b -c -i --intval 4 -f 3.3 -F --file file_that_exists positional_arg\n    \n    import argparse\n    \n    def main():\n        parser = argparse.ArgumentParser(description='', formatter_class=argparse.ArgumentDefaultsHelpFormatter)\n    \n        parser.add_argument('-a', action='store_true')\n        parser.add_argument('-b', action='store_true')\n        parser.add_argument('-c', action='store_true')\n        parser.add_argument('-i', '--intval', default=4, type=int, help='an int value')\n        parser.add_argument('-f', default=3.3, type=float, help='a float value')\n        parser.add_argument('-F', '--file', default='file_that_exists', type=argparse.FileType('w'), help='a filename')\n        parser.add_argument('positional_arg', help='a string')\n        args = parser.parse_args()\n    \n    if __name__ == \"__main__\":\n        main()\n\n&#x200B;"}, {"title": "A small toolkit used for collecting responses from ChatGPT for research / data analysis", "score": 24, "id": "11hou9o", "url": "https://www.reddit.com/r/Python/comments/11hou9o/a_small_toolkit_used_for_collecting_responses/", "comms_num": 2, "created": 1677902414.0, "body": "I am excited to share [sleepyask](https://github.com/hwelsters/sleepyask) with you, a toolkit that I decided to open-source after using it for research purposes. **ChatGPT** currently limits the number of questions that users may ask per hour. The goal of this project is to allow users to just leave their computers on for extended periods of time to collect large amounts of responses from ChatGPT.\n\n\ud83c\udf70 I am aware that ChatGPT has released an official API. However, this method is still free, while the official API is not. OpenAI is doing good work though so do support them. I made this toolkit before the official API came out. \ud83c\udf70\n\nSome of the key features of  [sleepyask](https://github.com/hwelsters/sleepyask) include:\n\n* The ability to use multiple ChatGPT accounts to collect responses at a quicker rate.\n* The ability to collect a large amount of responses from ChatGPT over a long period of time."}, {"title": "restricted integer partition with the accel_acs algorithm", "score": 1, "id": "11hn94e", "url": "https://www.reddit.com/r/Python/comments/11hn94e/restricted_integer_partition_with_the_accel_acs/", "comms_num": 0, "created": 1677897980.0, "body": "I isolated this and put it up on pypi. Something I use a lot. Will handle restricted (max size per) partitions, so `tuple(iter_partition(50, 3))` is quick. I used a kind of fast forwarding to restrict the partitions.\n\n[ShayHill/restricted\\_partition: Integer partition with an optional max length (github.com)](https://github.com/ShayHill/restricted_partition)"}, {"title": "Is it possible land an entry level Python Developer role right out of college? I obtained my engineering BS and know some Python. I've really been digging deep into it and would love to become a Python Developer, but I don't know if I can obtain an entry level role. I also don't have any experience.", "score": 1, "id": "11hmf2v", "url": "https://www.reddit.com/r/Python/comments/11hmf2v/is_it_possible_land_an_entry_level_python/", "comms_num": 12, "created": 1677895691.0, "body": "P.S. the only 'experience' I have are some personal Python projects. I am not sure if those count as anything. I am also thinking of getting a Python Certification from [https://pythoninstitute.org/pcap](https://pythoninstitute.org/pcap) I am not sure if that would do any favors for me."}, {"title": "Saturday Daily Thread: Resource Request and Sharing! Daily Thread", "score": 1, "id": "11hjfsg", "url": "https://www.reddit.com/r/Python/comments/11hjfsg/saturday_daily_thread_resource_request_and/", "comms_num": 0, "created": 1677888024.0, "body": "Found a neat resource related to Python over the past week? Looking for a resource to explain a certain topic?\n\nUse this thread to chat about and share Python resources!"}, {"title": "Can we talk about error messages?", "score": 0, "id": "11hhyiz", "url": "https://www.reddit.com/r/Python/comments/11hhyiz/can_we_talk_about_error_messages/", "comms_num": 7, "created": 1677884500.0, "body": "I don't want to be dumping on python because I really like it.  Been using it for several years off and on for various projects, but the error messages aren't very clean or good.  What does everyone do about this?  \n\nI was fighting with an error for a couple hours until I tried something totally unrelated to what the error message was telling me and it solved my issue.  Just as an example usually in many languages tracebacks are reversed because usually that is what is going to be most interesting to the developer.  In python though it shows the unrelated stuff at the top.\n\nIs this something I can fix with another package?"}, {"title": "SlashSlack - A framework for developing Slack slash command bots.", "score": 17, "id": "11hhmb8", "url": "https://www.reddit.com/r/Python/comments/11hhmb8/slashslack_a_framework_for_developing_slack_slash/", "comms_num": 0, "created": 1677883704.0, "body": "I am excited to share [SlashSlack](https://pypi.org/project/slash-slack/), a framework for developing Slack slash command bots.\n\nWith [SlashSlack](https://pypi.org/project/slash-slack/) you get input parsing and validation, command routing, async responses, auto-generated help dialog, response visibility, and response message formatting all out of the box.\n\n    # EX: /slash-slack math 10 * 10\n    # Response: 100.0\n    import os\n    \n    from slash_slack import Flag, Float, SlashSlack, String\n    \n    slash = SlashSlack(signing_secret=os.environ['SLACK_SIGNING_SECRET'])\n    app = slash.get_fast_api()\n    \n    \n    @slash.command(\"math\")\n    def math_fn(\n        x: float = Float(),\n        symbol: str = Enum(values={\"*\", \"+\", \"-\", \"/\"}),\n        y: float = Float(),\n    ):\n        if symbol == \"*\":\n            return x * y\n        if symbol == \"+\":\n            return x + y\n        if symbol == \"-\":\n            return x - y\n        if symbol == \"/\":\n            return x / y\n\nAll code is available on [Github](https://github.com/henryivesjones/slash-slack) and the package is available on [pypi](https://pypi.org/project/slash-slack/).\n\n&#x200B;\n\nThanks for reading!"}, {"title": "Learning Chinese by programming: ChinesePython intro", "score": 0, "id": "11hfslh", "url": "https://www.reddit.com/r/Python/comments/11hfslh/learning_chinese_by_programming_chinesepython/", "comms_num": 6, "created": 1677879534.0, "body": "Here is a very simple two-line python program. The interpreter works with Traditional characters, but I provide the Simplified Chinese \"translation\" for reference and learning purposes.\n\n\u8cc7\u6599 = \u8f38\u5165(\"\u8f38\u5165\u59d3\u540d: \")\n\n\u5370\u51fa(\"\u6b61\u8fce,\", \u8cc7\u6599)\n\n&#x200B;\n\nSimplified Chinese:\n\n\u8d44\u6599 = \u8f93\u5165(\"\u8f93\u5165\u59d3\u540d: \")\n\n\u5370\u51fa(\"\u6b22\u8fce,\", \u8d44\u6599)\n\n&#x200B;\n\nThis  is a Python program using the UTF-8 encoding for Unicode characters.  The first line \"\u8cc7\u6599 = \u8f38\u5165(\"\u8f38\u5165\u59d3\u540d: \")\" prompts the user to enter their name  and assigns it to the variable \"\u8cc7\u6599\".\n\nSimplified Chinese: The first line \"\u8d44\u6599 = \u8f93\u5165(\"\u8f93\u5165\u59d3\u540d: \")\" prompts the user to enter their name and assigns it to the variable \"\u8d44\u6599\".\n\n&#x200B;\n\nI posted more about it here, the breakdown of words and grammae used in the code:\n\n[https://chinesememe.substack.com/p/sunflower-by-xie-tian-xiao-part-2](https://chinesememe.substack.com/p/sunflower-by-xie-tian-xiao-part-2)"}, {"title": "Camus - An esoteric programming lang written in Python!", "score": 1, "id": "11hf0o9", "url": "https://www.reddit.com/r/Python/comments/11hf0o9/camus_an_esoteric_programming_lang_written_in/", "comms_num": 3, "created": 1677877750.0, "body": "[https://github.com/cmspeedrunner/Camus](https://github.com/cmspeedrunner/Camus)\n\nCamus is a esoteric programming language named after the particularly descriptive writer Albert Camus\n\nThe idea for Camus is to create a programming language with all human readable words, no symbols. It is turing complete and allows reading and writing of data, and changing that data to do things like converting it to a string, num, float or a boolean, adding it or evaluating it. Examples are in the project but here are some important things to note."}, {"title": "Function purity and idempotence", "score": 4, "id": "11heaaw", "url": "https://www.reddit.com/r/Python/comments/11heaaw/function_purity_and_idempotence/", "comms_num": 3, "created": 1677876136.0, "body": "Someone mentioned ***idempotence*** at work. I looked it up and noted that it too is a property of functions, like function ***purity***.\n\nI decided to see if I could write functions with combinations of those properties and embedded tests for those properties.\n\n[https://paddy3118.blogspot.com/2023/03/function-purity-and-idempotence.html](https://paddy3118.blogspot.com/2023/03/function-purity-and-idempotence.html)"}, {"title": "PyBroker - Algotrading in Python with Machine Learning", "score": 245, "id": "11hbstv", "url": "https://www.reddit.com/r/Python/comments/11hbstv/pybroker_algotrading_in_python_with_machine/", "comms_num": 26, "created": 1677870441.0, "body": "Hello, I am excited to share [**PyBroker**](https://github.com/edtechre/pybroker/) with you, an open-source Python framework that I developed for creating algorithmic trading strategies, including those that utilize machine learning. With [PyBroker](https://github.com/edtechre/pybroker/), you can easily develop and fine-tune trading rules, build powerful ML models, and gain valuable insights into your strategy's performance.\n\nSome of the key features of [PyBroker](https://github.com/edtechre/pybroker/) include:\n\n* A super-fast backtesting engine built using NumPy and accelerated with Numba.\n* The ability to create and execute trading rules and models across multiple instruments with ease.\n* Access to historical data from Alpaca and Yahoo Finance.\n* The option to train and backtest models using [Walkforward Analysis](https://www.pybroker.com/en/latest/notebooks/6.%20Training%20a%20Model.html#Walkforward-Analysis), which simulates how the strategy would perform during actual trading.\n* More reliable trading metrics that use randomized bootstrapping to provide more accurate results.\n* Caching of downloaded data, indicators, and models to speed up your development process.\n* Parallelized computations that enable faster performance.\n\nAdditionally, I have written tutorials on the framework and some general algorithmic trading concepts that can be found on [**https://www.pybroker.com**](https://www.pybroker.com/). All of the code is available on [Github](https://github.com/edtechre/pybroker/).\n\nThanks for reading!"}, {"title": "Python in Visual Studio Code (March 2023 Release)", "score": 13, "id": "11h7wal", "url": "https://devblogs.microsoft.com/python/python-in-visual-studio-code-march-2023-release/", "comms_num": 0, "created": 1677865130.0, "body": ""}, {"title": "JUST NOTICED THE PYTHONISTA APP FOR IOS HAS AN UPDATED BETA!", "score": 0, "id": "11h4t4j", "url": "https://www.reddit.com/r/Python/comments/11h4t4j/just_noticed_the_pythonista_app_for_ios_has_an/", "comms_num": 0, "created": 1677860532.0, "body": "IM SO EXCITED! Even when it was on a super outdated runtime it still had the best editor experience of all the python apps! Hopefully it gets public release soon!"}, {"title": "You know you're a python developer when?", "score": 0, "id": "11h317w", "url": "https://www.reddit.com/r/Python/comments/11h317w/you_know_youre_a_python_developer_when/", "comms_num": 17, "created": 1677856076.0, "body": "You know you're a python developer when you start to Google \"python exception handling best practices\" to see if you can do more to make your exceptions easier. \n\nWhen did you realise you're past the noob stage?"}, {"title": "Jinja and Django Jinja", "score": 1, "id": "11h0sh4", "url": "https://www.reddit.com/r/Python/comments/11h0sh4/jinja_and_django_jinja/", "comms_num": 1, "created": 1677850124.0, "body": "I was reading about Jinja and an article on Wikipedia caught my attention: [Jinja (template engine)](https://en.wikipedia.org/wiki/Jinja_(template_engine)) At the beginning I read: \n\n> Jinja is similar to the [Django](https://en.wikipedia.org/wiki/Django_(web_framework)) \n\nSo, Django Jinja and Jinja projects are different? I don't think so because, in the same article, the sources point to the Jinja2 documentation. And this also happens in the [Django article](https://en.wikipedia.org/wiki/Django_(web_framework))\n\nBut, on the other hand, I can read in the jinja repository that there is not the same [Switching From Other Template Engines](https://github.com/pallets/jinja/blob/5d9ece6d65ae4c2f57dd2bdccc28943984a767f9/docs/switching.rst) and also exists documentation about [Support for templates engines](https://docs.djangoproject.com/en/4.1/topics/templates/#support-for-template-engines)\n\nSo,\n\n1. Template engines are different, for example between Airflow and Django, Nerveless Django support jinja?\n2. The template engine in the Django source code is located here [django/django/template/](https://github.com/django/django/tree/main/django/template) ?"}, {"title": "Build an AI search engine using FastAPI, Qdrant, and ChatGPT", "score": 84, "id": "11gxip7", "url": "https://dylancastillo.co/ai-search-engine-fastapi-qdrant-chatgpt/", "comms_num": 16, "created": 1677839950.0, "body": ""}, {"title": "How to assume an IAM role to access another AWS account", "score": 3, "id": "11gwk6q", "url": "https://www.reddit.com/r/Python/comments/11gwk6q/how_to_assume_an_iam_role_to_access_another_aws/", "comms_num": 4, "created": 1677836217.0, "body": "[https://blog.szymonmiks.pl/p/how-to-assume-an-iam-role-to-access-another-aws-account/](https://blog.szymonmiks.pl/p/how-to-assume-an-iam-role-to-access-another-aws-account/)"}, {"title": "Learn django signals", "score": 4, "id": "11gwatw", "url": "https://simplifiedweb.netlify.app/why-do-you-need-django-signals-right-now/", "comms_num": 0, "created": 1677835189.0, "body": ""}, {"title": "String Searching Algorithm (Knuth\u2013Morris\u2013Pratt)", "score": 6, "id": "11gvq4b", "url": "https://www.reddit.com/r/Python/comments/11gvq4b/string_searching_algorithm_knuthmorrispratt/", "comms_num": 0, "created": 1677832949.0, "body": "This week i\u2019ve written about the: String Searching Algorithm (Knuth\u2013Morris\u2013Pratt) or KMP.  \nIt sounds like a mouthful however it was a pretty interesting algorithm to research \ud83e\udd13 and I\u2019m guessing that its applications are quite handy.  \n\n\n>The KMP algorithm searches for occurrences of a \u201cword\u201d W within a main \"text string\" S by employing the observation that when a mismatch occurs, the word itself embodies sufficient information to determine where the next match could begin, thus bypassing re-examination of previously matched characters.\n\n&#x200B;\n\n[https://medium.com/@tudorache.a.bogdan/string-searching-algorithm-knuth-morris-pratt-d18b9435d4e0](https://medium.com/@tudorache.a.bogdan/string-searching-algorithm-knuth-morris-pratt-d18b9435d4e0)"}, {"title": "Python 3.12: A Game-Changer in Performance and Efficiency", "score": 839, "id": "11gvo6m", "url": "https://python.plainenglish.io/python-3-12-a-game-changer-in-performance-and-efficiency-8dfaaa1e744c", "comms_num": 151, "created": 1677832736.0, "body": ""}, {"title": "GitHub - raaidarshad/dbdeclare: Declarative layer for your database.", "score": 7, "id": "11gvjuq", "url": "https://github.com/raaidarshad/dbdeclare", "comms_num": 0, "created": 1677832263.0, "body": ""}, {"title": "Make your Debugging easier with these 8 tips in Python", "score": 8, "id": "11gves5", "url": "https://adicode.ml/make-your-debugging-easier-with-these-8-tips-in-python", "comms_num": 8, "created": 1677831733.0, "body": ""}, {"title": "6 different ways to reverse a string in Python", "score": 0, "id": "11gtwob", "url": "https://adicode.ml/6-different-ways-to-reverse-a-string-in-python", "comms_num": 7, "created": 1677826250.0, "body": ""}, {"title": "Hello guys, I just made this program for an assignment to find perfect numbers. Do you have any suggestions to improve?", "score": 2, "id": "11govt6", "url": "https://www.reddit.com/r/Python/comments/11govt6/hello_guys_i_just_made_this_program_for_an/", "comms_num": 7, "created": 1677811168.0, "body": "Code: [https://github.com/Kyu9go5san3/perfect\\_numbers](https://github.com/Kyu9go5san3/perfect_numbers)"}, {"title": "QMainWindow and OOP in PyQt6!", "score": 5, "id": "11gnizz", "url": "https://youtu.be/5qKTo-ns0U4", "comms_num": 0, "created": 1677807529.0, "body": ""}, {"title": "Signal handling in a multithreaded socket server", "score": 27, "id": "11gi7hz", "url": "https://www.reddit.com/r/Python/comments/11gi7hz/signal_handling_in_a_multithreaded_socket_server/", "comms_num": 2, "created": 1677797240.0, "body": "While working in an embedded environment, I found out that handling signals in a multithreaded Python socket server require some extra work.   I was fiddling w/ the ThreadingTCPServer API and came up with this to handle interruption signals gracefully:\n\n[https://rednafi.github.io/reflections/signal-handling-in-a-multithreaded-socket-server.html](https://rednafi.github.io/reflections/signal-handling-in-a-multithreaded-socket-server.html)"}, {"title": "Should I make a thread worker that launches a logging GUI, or a logging GUI that launches a thread worker? The worker runs a subprocess that will update the GUI.", "score": 39, "id": "11ghsph", "url": "https://www.reddit.com/r/Python/comments/11ghsph/should_i_make_a_thread_worker_that_launches_a/", "comms_num": 20, "created": 1677796783.0, "body": "I am using Python 3.6 and PyQt. I am having a chicken-or-the-egg problem.\n\nI am launching a subprocess that does work, I capture the output, then I need to update a new pyqt Window specifically made to capture that info. Like a logging window. Or will both approaches work?\n\nThere may be multiple windows with workers running their own subprocesses at a time."}, {"title": "I made a ChatGPT CLI (using official APIs)", "score": 3, "id": "11ggs3j", "url": "https://www.reddit.com/r/Python/comments/11ggs3j/i_made_a_chatgpt_cli_using_official_apis/", "comms_num": 11, "created": 1677795695.0, "body": "Hey,\n\nyesterday OpenAI released the ChatGPT API ([https://openai.com/blog/introducing-chatgpt-and-whisper-apis](https://openai.com/blog/introducing-chatgpt-and-whisper-apis)). I wanted to try it, so I made a very basic command line chat script:\n\n[https://github.com/marcolardera/chatgpt-cli](https://github.com/marcolardera/chatgpt-cli)\n\nSo far is working as intended and I'm using it with pleasure.\n\nDo you have any feedback or suggestions? Any interesting feature to add? (a command for saving the conversation to an external file is on top of my list...)"}, {"title": "How this algorithm knows every detail of your life | Library of Babel algorithm explained with Python example", "score": 19, "id": "11ggi7c", "url": "https://www.reddit.com/r/Python/comments/11ggi7c/how_this_algorithm_knows_every_detail_of_your/", "comms_num": 6, "created": 1677795406.0, "body": "I'm fascinated by the concept of the Library of Babel, so I decided to research it, write a simple implementation of it in Python and make an explanation video about it. I basically tried to make a little deepdive into all the basics while not making it too complex. Maybe someone finds it helpful! :)\n\nExplanation video: [https://www.youtube.com/watch?v=I54-5E0r1f0](https://www.youtube.com/watch?v=I54-5E0r1f0) \n\nSource code: [https://github.com/louis-e/LibraryOfBabel-Python](https://github.com/louis-e/LibraryOfBabel-Python)"}, {"title": "A Python Programming Bundle", "score": 70, "id": "11gevit", "url": "https://www.humblebundle.com/software/complete-python-programming-mega-bundle-zenva-software", "comms_num": 12, "created": 1677793104.0, "body": "Just saw this on the humble bundle website. Might be good for some!"}, {"title": "What are your experiences with the Rust Result ported to Python?", "score": 3, "id": "11gd4fy", "url": "https://www.reddit.com/r/Python/comments/11gd4fy/what_are_your_experiences_with_the_rust_result/", "comms_num": 13, "created": 1677789083.0, "body": "Talking about that project: https://pypi.org/project/result/\n\nWhen writing Python, I really missed that and was happy to have found it now. With `match` coming to Python as well, I feel like it's worth it to go that route.\n\nAny experiences to share?\n\nEdit: Also if you have experiences with https://github.com/dry-python/returns I would be interested in that!"}, {"title": "An app offers 1000+ free Python challenges for beginners to advanced users to practice", "score": 0, "id": "11gck2v", "url": "https://www.reddit.com/r/Python/comments/11gck2v/an_app_offers_1000_free_python_challenges_for/", "comms_num": 4, "created": 1677787782.0, "body": "Hey friends! A couple of months ago, I shared my app that provides hundreds of free Python challenges for practice and learning. Now, we have 1000+ challenges and a structured learning path from basic to advanced topics. We've recently added a ton of updated challenges and practice exercises to help you improve your Python skills even further. Download it here and let me know your thoughts: [**https://apps.apple.com/us/app/id1632477791**](https://apps.apple.com/us/app/id1632477791). Feedback is welcome!"}, {"title": "CLI Image Converter", "score": 10, "id": "11gbcgp", "url": "https://www.reddit.com/r/Python/comments/11gbcgp/cli_image_converter/", "comms_num": 2, "created": 1677784957.0, "body": "A command line image converter written in Python. Got tired of always converting my images online through a website and wanted something to convert my images locally through a CLI.\n\nWould highly appreciate feedback for improvements and PR/Issues are welcome on the Github link below.\n\nGithub Link: [https://github.com/WMRamadan/itic](https://github.com/WMRamadan/itic)"}, {"title": "A serverless Python app to send public domain gutenberg.org ebooks to your Kindle with one click!", "score": 4, "id": "11gasmg", "url": "https://dev.to/aws-builders/a-serverless-app-to-send-public-domain-gutenbergorg-ebooks-to-your-kindle-with-one-click-2cdp", "comms_num": 0, "created": 1677783668.0, "body": ""}, {"title": "*args **kwargs ***what's next? (Yes, tripple star)", "score": 252, "id": "11g9iat", "url": "https://www.reddit.com/r/Python/comments/11g9iat/args_kwargs_whats_next_yes_tripple_star/", "comms_num": 74, "created": 1677780505.0, "body": "I recently found out about \\*args \\*\\*kwargs, cool stuff.\n\nI noticed that \\* works well with array-like data types: lists, tuples etc. And that \\*\\* works well with mapping types, like dictionaries, although here this isn't as natural as for the case of  \\*.\n\nNow I wonder, what data type would \\*\\*\\* work with?\n\nI know that this isn't a very practical question and that it doesn't make much sense, since there's no such thing as \\*\\*\\* in python (as far as I know). But if we wanted to introduce it, what would it work on?\n\nOne idea I had was rooted in category theory. I noticed that you could think of lists as objects, dictionaries as morphisms between those objects. So maybe \\*\\*\\* could work on morphisms between morphisms? So dictionaries containing other dictionaries maybe? I'm not sure, I have no clue if you can even think about lists and dictionaries in such a way, so please correct me if I'm wrong.\n\nAny input is appreciated!"}, {"title": "3 Usecases of _ in Python", "score": 0, "id": "11g9299", "url": "https://youtube.com/shorts/6QySgQHiaiM", "comms_num": 2, "created": 1677779459.0, "body": ""}, {"title": "How async should have been", "score": 15, "id": "11g40gv", "url": "https://sobolevn.me/2020/06/how-async-should-have-been", "comms_num": 2, "created": 1677767013.0, "body": ""}, {"title": "deal facilitates design-by-contract programming in Python. quite impressive", "score": 13, "id": "11g3hk8", "url": "https://pypi.org/project/deal/", "comms_num": 1, "created": 1677765631.0, "body": ""}, {"title": "A python library for competitive coders", "score": 0, "id": "11g3c5u", "url": "https://www.reddit.com/r/Python/comments/11g3c5u/a_python_library_for_competitive_coders/", "comms_num": 8, "created": 1677765231.0, "body": "Hey everyone! I recently created competitivepython, an open-source Python library for implementing algorithms and data structures. If you're interested in learning more about the library's features, I wrote an article on Medium that provides an overview: https://pandeyshikha075.medium.com/an-overview-of-competitivepython-a-python-library-for-implementing-algorithms-and-data-structures-3a5776e13535.\n\nYou can also find the library's code on GitHub: https://github.com/Shikha-code36/Competitive-Python. If you're into competitive programming or coding challenges, this library might be useful to you! And if you're interested in contributing to the project, feel free to check out the GitHub repository. #Python #Algorithms #DataStructures #OpenSource #competitiveprogramming #competitivecoding #competitivepython #pip"}, {"title": "[WIP] drag\u2019n drop UI builder in VS Code", "score": 12, "id": "11g2d9t", "url": "https://youtu.be/zbAjFIha3vE", "comms_num": 5, "created": 1677762517.0, "body": ""}, {"title": "How does web developement process compare to java web developement ?", "score": 0, "id": "11g15o9", "url": "https://www.reddit.com/r/Python/comments/11g15o9/how_does_web_developement_process_compare_to_java/", "comms_num": 1, "created": 1677758848.0, "body": "I came mainly from a python background, I did some Django, I did some PHP as well. The process of web developement and concepts in these two languages are pretty much the same for me when we are talking about the layers of abstraction getting involved in a request/response life cycle and how stuff is organized.\n\nIm trying to learn web developpement in java, and while doing that i try to make analogy with Python web developpement, but some times I just can't relate.\n\n*servlet container.\n*servlets.\n*what is tomcat is a servlet container or a web server like gunicorn for example.\n*... and so one\n\nshould I maybe stop doing analogies because the two languages are different in nature or what ?"}, {"title": "Using Python 3.11 with AWS Lambda", "score": 37, "id": "11g0fgn", "url": "https://dev.l1x.be/posts/2023/02/28/using-python-3.11-with-aws-lambda/", "comms_num": 26, "created": 1677756394.0, "body": ""}, {"title": "How to create a 1D- CNN in TensorFlow", "score": 0, "id": "11g0e9s", "url": "https://www.ai-contentlab.com/2023/03/how-to-create-1d-cnn-in-tensorflow.html?m=1", "comms_num": 0, "created": 1677756276.0, "body": ""}, {"title": "python module to store/retrieve variables from file in formats int,str,tuple,list,float,dict and can store event python objects", "score": 2, "id": "11g08x6", "url": "https://www.reddit.com/r/Python/comments/11g08x6/python_module_to_storeretrieve_variables_from/", "comms_num": 4, "created": 1677755760.0, "body": "[Github repository](https://github.com/AbdulWahab321/HyperDS)\nHyperDS (HyperDataStorage) is a library written in Python that provides a compressed data storage and retrieval system for large data. It uses the ZipFile format and provides a Pythonic interface to manipulate and access the data. The library is designed to be easy to use and provides advanced features such as storing python objects"}, {"title": "Iterators and Iterables in Python: Run Efficient Iterations \u2013 Real Python", "score": 45, "id": "11fzsun", "url": "https://realpython.com/python-iterators-iterables/", "comms_num": 6, "created": 1677754142.0, "body": ""}, {"title": "CLI tool to query the latest version of a package for a python version", "score": 2, "id": "11fyxxv", "url": "https://www.reddit.com/r/Python/comments/11fyxxv/cli_tool_to_query_the_latest_version_of_a_package/", "comms_num": 2, "created": 1677751000.0, "body": "[https://github.com/andregri/pipmore](https://github.com/andregri/pipmore)\n\nOften I need to find what is the latest version available for a specific Python version without installing it because I don't have an environment available.\n\nThis CLI tool queries the pypi index.\n\nOpen to feedback and suggestions! thank you"}, {"title": "Build a full-fledged installable python CLI from scratch.", "score": 3, "id": "11fup3e", "url": "https://youtu.be/EJbWJ-sWUP0", "comms_num": 0, "created": 1677736686.0, "body": ""}, {"title": "Suppressing audio with Python", "score": 2, "id": "11fszb7", "url": "https://www.reddit.com/r/Python/comments/11fszb7/suppressing_audio_with_python/", "comms_num": 1, "created": 1677731586.0, "body": "In my [previous article](https://vicentereyes.org/separate-vocals-from-a-track-using-python), I separated the vocals from a track using `librosa`. I wasn't happy about the outcome so I did a little googling and found another audio library from python called [noisereduce](https://pypi.org/project/noisereduce/). In this article, I'll show you how I solved my problem with a muddy audio which was removed using `librosa`.\n\nhttps://vicentereyes.org/suppressing-audio-with-python"}, {"title": "Video search algorithm with SpeakTheBeats, Spacy-enabled TTS script editing with SpeakTheScript and automatic music arrangement with FixTheBeats!", "score": 1, "id": "11frcfs", "url": "https://www.reddit.com/r/Python/comments/11frcfs/video_search_algorithm_with_speakthebeats/", "comms_num": 0, "created": 1677727161.0, "body": "Hi!\n\nI would like to share three projects with you today.\n\n&#x200B;\n\n1- **Speak the Beats** returns a list of (hopefully) relevant YouTube videos based on some text of yours. You can watch the following YouTube video for a demonstration ([https://www.youtube.com/watch?v=ULsm7gItJ1s](https://www.youtube.com/watch?v=ULsm7gItJ1s)) or try it out for yourself at [http://www.speakthebeats.com/](http://www.speakthebeats.com/)! All the code is available on my github: [https://github.com/LPBeaulieu/Video-Search-Based-On-Your-Text-Speakthebeats](https://github.com/LPBeaulieu/Video-Search-Based-On-Your-Text-Speakthebeats).\n\n&#x200B;\n\n2- **Speak the Script** returns a revised script with the addition of commas where needed for more natural-sounding pauses, and with some heteronym substitution to their corresponding Speech Synthesis Markup Language (SSML) \"phoneme\" tags, rendered according to their International Phonetic Alphabet (IPA) pronunciation. Here is an YouTube demonstration video: [https://www.youtube.com/watch?v=HApdMh1Aup8](https://www.youtube.com/watch?v=HApdMh1Aup8). You can try it out at the following link: [http://www.speakthebeats.com/SpeakTheScript/](http://www.speakthebeats.com/SpeakTheScript/). The code is posted on my github: [https://github.com/LPBeaulieu/Improve-Your-TTS-SpeakTheScript/blob/main/README.md](https://github.com/LPBeaulieu/Improve-Your-TTS-SpeakTheScript/blob/main/README.md).\n\n&#x200B;\n\n3- **Fix the Beats** automatically arranges the notes in a MIDI file so that they fit within the range of your instrument. It then annotates the changes as lyric tags, which can be displayed in a scorewriter software. Here is a YouTube video showing how it works: [https://www.youtube.com/watch?v=O4FZk1XRNpc](https://www.youtube.com/watch?v=O4FZk1XRNpc). You can try it for yourself at the following link: [http://www.speakthebeats.com/FixTheBeats/](http://www.speakthebeats.com/FixTheBeats/). The code is available on my github: [https://github.com/LPBeaulieu/Automatic-Music-Arrangement-FixTheBeats](https://github.com/LPBeaulieu/Automatic-Music-Arrangement-FixTheBeats)\n\nI hope that you can build on this to improve it and find other useful applications for the code!\n\n[Screenshot of Speak the Script showing the phoneme substitutions for heteronyms, for unambiguous pronunciation when conducting TTS.](https://preview.redd.it/3wscou5zt8la1.png?width=1806&format=png&auto=webp&v=enabled&s=ed624e024e78fe52e1d5a01ccf99572f5dc5b5d5)"}, {"title": "Thursday Daily Thread: Python Careers, Courses, and Furthering Education!", "score": 1, "id": "11fmm6e", "url": "https://www.reddit.com/r/Python/comments/11fmm6e/thursday_daily_thread_python_careers_courses_and/", "comms_num": 0, "created": 1677715211.0, "body": "Discussion of using Python in a professional environment, getting jobs in Python as well as ask questions about courses to further your python education!\n\n**This thread is not for recruitment, please see** r/PythonJobs **or the thread in the sidebar for that.**"}, {"title": "How to build a chatbot on the command line with the ChatGPT API and Python", "score": 1, "id": "11fl9l8", "url": "https://haihai.ai/chatgpt-api", "comms_num": 0, "created": 1677711988.0, "body": ""}, {"title": "Building a Document Converter with the Factory Method pattern using Python", "score": 1, "id": "11fkqtz", "url": "https://www.reddit.com/r/Python/comments/11fkqtz/building_a_document_converter_with_the_factory/", "comms_num": 0, "created": 1677710771.0, "body": "I am implementing real-world projects using the design patterns to see how we could benefit from them when building our own software, in this article, I am building a Document Converter using the Factory Method design pattern, check it out at [https://dev.to/mstva/building-a-document-converter-with-the-factory-method-pattern-using-python-fc5](https://dev.to/mstva/building-a-document-converter-with-the-factory-method-pattern-using-python-fc5)\n\nYou could follow this series on [https://dev.to/mstva](https://dev.to/mstva) as I will continue writing about it and give me feedback to improve it better. Thanks"}, {"title": "uniswap-universal-router-decoder v0.6.0 has just been released !! Feedback appreciated :)", "score": 1, "id": "11fisd4", "url": "https://www.reddit.com/r/Python/comments/11fisd4/uniswapuniversalrouterdecoder_v060_has_just_been/", "comms_num": 0, "created": 1677706370.0, "body": "Hello! :)\n\nThis new version of the open source **Python coder and encoder** for the **Uniswap universal router** (0xEf1c6E67703c7BD7107eed8303Fbe6EC2554BF6B on Mainnet) contains some nice goodies:\n\n \\- support for the PERMIT2\\_PERMIT function: you can now give token allowance to the UR through the Permit2 contract\n\n \\- support for chaining PERMIT2\\_PERMIT and V2\\_SWAP\\_EXACT\\_IN in the same transaction\n\n \\- upgrade to [web3.py](https://web3.py) v6, which allows support for Python 3.11 and the implementation of the already mentioned PERMIT2\\_PERMIT function\n\n&#x200B;\n\nSource on [GitHub](https://github.com/Elnaril/uniswap-universal-router-decoder)\n\nPackaged on [PyPI](https://pypi.org/project/uniswap-universal-router-decoder/) \n\n&#x200B;\n\nFor those who don't already know this library, it aims to provide an easy way to encode and decode transaction data sent to the universal router's functions. It is in an early development stage, so not all of them have been implemented yet, but already a few interesting ones like V2\\_SWAP\\_EXACT\\_IN and V3\\_SWAP\\_EXACT\\_IN, ...\n\n&#x200B;\n\nMore functions and chaining will be supported soon!\n\n&#x200B;\n\nAny (constructive) feedback would be greatly appreciated! :)\n\n&#x200B;\n\nThank you!"}, {"title": "We are the developers behind pandas, currently preparing for the 2.0 release :) AMA", "score": 1423, "id": "11fio85", "url": "https://www.reddit.com/r/Python/comments/11fio85/we_are_the_developers_behind_pandas_currently/", "comms_num": 375, "created": 1677706113.0, "body": "Hello everyone!\n\nI'm Patrick Hoefler aka phofl and I'm one of the core team members developing and maintaining pandas ([repo](https://github.com/pandas-dev/pandas), [docs](https://pandas.pydata.org/docs/dev/index.html)), a popular data analysis library.\n\nThis AMA will be at least joined by\n\n* [Marc Garcia](https://github.com/datapythonista) \\-- maintainer\n* [Marco Gorelli](https://github.com/marcogorelli), -- maintainer\n* [Richard Shadrach](https://github.com/rhshadrach) \\-- maintainer\n* [me](https://github.com/phofl)! -- maintainer\n\n**The official start time for the AMA will be 5:30pm UTC on March 2nd**, before then this post will exist to collect questions in advance. Since most of us live all over North America and Europe, **it's likely we'll answer questions before & after the official start time by a significant margin**.\n\n**pandas** is a Python package that provides fast, flexible, and expressive data structures designed to make working with \"relational\" or \"labeled\" data both easy and intuitive. It aims to be the fundamental high-level building block for doing practical, **real world** data analysis in Python. Additionally, it has the broader goal of becoming **the most powerful and flexible open source data analysis / manipulation tool available in any language**.\n\nWe will soon celebrate our 2.0 release. We released the release candidate for 2.0 last week, so the actual release is expected shortly, possibly next week. Please help us in testing that everything works through [testing the rc](https://github.com/pandas-dev/pandas/releases/tag/v2.0.0rc0) :)\n\nAsk us anything! Post your questions and upvote the ones you think are the most important and should get our replies.\n\n\\- Patrick, on behalf of the team\n\n&#x200B;\n\n&#x200B;\n\nMarc:\n\nI'm Marc Garcia (username datapythonista), pandas core developer since 2018, and current release manager of the project. I work on pandas part time paid by the funds the project gets from grants and sponsors. And I'm also consultant, advising data teams on how to work more efficiently. I sometimes write about pandas and technical topics at my [blog](https://datapythonista.me/blog/), and I speak at Python and open source conferences regularly. You can connect with me via [LinkedIn](https://www.linkedin.com/in/datapythonista/), [Twitter](https://twitter.com/datapythonista) and [Mastodon](https://fosstodon.org/@datapythonista).\n\nMarco:\n\nI'm Marco, one of the devs from the AMA. I work on pandas as part of my job at Quansight, and live in the UK. I'm mostly interested in time-series-related stuff\n\nPatrick:\n\nI'm Patrick and part of the core team of pandas. Part of my daytime job allows me to contribute to pandas, I am based in Germany. I am currently mostly working on Copy-on-Write, a new feature in pandas 2.0. (check my [blog-post](https://medium.com/towards-data-science/a-solution-for-inconsistencies-in-indexing-operations-in-pandas-b76e10719744) or our new [docs](https://pandas.pydata.org/docs/dev/user_guide/copy_on_write.html) for more information).\n\nRichard:\n\nI work as a Data Scientist at [84.51](https://www.8451.com/) and am a core developer of pandas. I work mostly on groupby within pandas.\n\n\\--\n\n* [Announcement post](https://www.reddit.com/r/Python/comments/11ebuh0/join_us_for_an_ama_with_the_developers_of_pandas/)\n* [full pandas team](https://pandas.pydata.org/about/team.html)\n* [Marc wrote about pandas 2.0 and our Arrow support](https://datapythonista.me/blog/pandas-20-and-the-arrow-revolution-part-i)"}, {"title": "Searching for a not laggy way to plot", "score": 7, "id": "11fimln", "url": "https://www.reddit.com/r/Python/comments/11fimln/searching_for_a_not_laggy_way_to_plot/", "comms_num": 17, "created": 1677706006.0, "body": "HI,\n\nI'm trying to create a plot with around 1000 values. What I'm trying to have is little rectangle at different y  value.\n\nI am using matplotlib Barh.  The graph is laggy and nearly impossible to use.  \n\nThen when I write numbers over the various Barhs it becomes unusable.  I also tried with broken bar getting the same problems.\n\nI'm looking for another way to create this plot or maybe another library that can handle the plot without lag. \n\nDo you have any advice?\n\n Thank you"}, {"title": "Applications communication interface documentation", "score": 5, "id": "11feuid", "url": "https://www.reddit.com/r/Python/comments/11feuid/applications_communication_interface_documentation/", "comms_num": 1, "created": 1677699689.0, "body": "How do you document how apps communicate between each other? I mean e.g. how the interfaces look, how the messages look, example inputs and outputs, what protocols/technology is used etc. Do you have google documents describing \u201chow it works\u201d or e.g. detailed diagrams? Is there any industry standard for such things?"}, {"title": "Learn how to work with LISTS as a BEGINNER", "score": 0, "id": "11fes48", "url": "https://youtu.be/Ac7jefbpesE", "comms_num": 0, "created": 1677699614.0, "body": ""}, {"title": "I just updated my recent Python AI book to use the new OpenAI ChatGPT API instead of the older GPT-3 API.", "score": 0, "id": "11fertv", "url": "https://www.reddit.com/r/Python/comments/11fertv/i_just_updated_my_recent_python_ai_book_to_use/", "comms_num": 1, "created": 1677699605.0, "body": "You can read it for free at [https://leanpub.com/pythonai](https://leanpub.com/pythonai)\n\nThis is a minor change.\n\nBTW, I am working on a new book \"LangChain Project Lab Book: Hooking Large Language Models Up to the Real World\" specifically about hooking language models together, interacting with external Python programs, etc.: [https://leanpub.com/langchain](https://leanpub.com/langchain)"}, {"title": "I feel I'm getting dumber", "score": 1, "id": "11fdwqv", "url": "https://www.reddit.com/r/Python/comments/11fdwqv/i_feel_im_getting_dumber/", "comms_num": 0, "created": 1677698627.0, "body": "So I made an admin page for a client that allows to add some work with images and their descriptions. The image part is stored in a db as a string of a list of dictionaries (yeah). While the creation was fine, I noticed, that when I try to add an image or change a description, it doesn't work.\n\nThere were no errors, the object I'm editing is fine, its fields are populated with the right values. I can even change the title and other fields, but the changes to the images just doesn't save. I spent an hour testing and following every step in a debugger, trying different ways to get\\\\create a session to the db, but that one last glance at \"\\_\\_Session\\_\\_: return None\" convinced me that it has to do something with the way SQLAlchemy is communicating to sqlite with JSON-like fields. \n\nSo I spent another hour changing this and other modules so that they can work with json fields instead of list(eval()). And guess what I've noticed in the end? \n\nMy object stores images in the 'images' variable, while I was populating the 'img-data'\u2026\n\nDo such stories happen to you or am I extra-smart?"}, {"title": "I built my first VS Code extension - Solve errors 10x faster", "score": 0, "id": "11fd96s", "url": "https://www.reddit.com/r/Python/comments/11fd96s/i_built_my_first_vs_code_extension_solve_errors/", "comms_num": 8, "created": 1677697883.0, "body": "I'm using ChatGPT a lot lately. Inspired by ChatGPT, and utilizing the OpenAI API, I created a VS Code extension using TypeScript and Python, that can analyze your whole source code and give suggestions to resolve errors in your code. OpenAI doesn't support analyzing a bunch of text, there GPT-3 model is limited to 4k tokens in input size, so I utilized embedding to vectorize the code and use it as an index to pass the related code in small chunks to OpenAI to analyze it and generate solutions. Check it out if you'd like, it's free (for now) ;)\n\n[https://github.com/MusabShakeel576/quickfix.ai](https://github.com/MusabShakeel576/quickfix.ai)\n\n[Quickfix.ai](https://reddit.com/link/11fd96s/video/v1dqroy3f6la1/player)"}, {"title": "A brief primer to ChinesePython for those interested and new to mandarin", "score": 0, "id": "11fd9os", "url": "https://chinesememe.substack.com/p/sunflower-by-xie-tian-xiao-part-2", "comms_num": 0, "created": 1677697899.0, "body": ""}, {"title": "how to increase focus while coding?", "score": 20, "id": "11fb0k4", "url": "https://www.reddit.com/r/Python/comments/11fb0k4/how_to_increase_focus_while_coding/", "comms_num": 17, "created": 1677694734.0, "body": "I usually find myself thinking about something or someone while I am coding. how do you overcome this lack of concentration?"}, {"title": "2,000 free sign ups available for the \"Automate the Boring Stuff with Python\" online course. (March 2023)", "score": 249, "id": "11fanbv", "url": "https://www.reddit.com/r/Python/comments/11fanbv/2000_free_sign_ups_available_for_the_automate_the/", "comms_num": 40, "created": 1677693902.0, "body": "UPDATE: The codes are used up. You can still watch [the first 15 videos on YouTube](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW). You can also go to [the course page](https://www.udemy.com/course/automate/) and click \"Expand All Sections\" and click the \"Preview\" link for each video to watch them on the site.\n\nIf you want to learn to code, I've released 2,000 free sign ups for my course following my Automate the Boring Stuff with Python book (each has 1,000 sign ups, use the other one if one is sold out): \n\n~~https ://udemy. com/course/automate/?couponCode=MAR2023FREE~~\n\n~~https ://udemy. com/course/automate/?couponCode=MAR2023FREE2~~\n\nUdemy has changed their promo code and severely limited the number of sign ups I can provide each month, so only sign up if you are reasonably certain you can eventually finish the course. [The first 15 of the course's 50 videos are free on YouTube if you want to preview them.](https://www.youtube.com/watch?v=1F_OgqRuSdI&list=PL0-84-yl1fUnRuXGFe_F7qSH1LEnn9LkW)\n\nYOU CAN ALSO WATCH THE VIDEOS WITHOUT SIGNING UP FOR THE COURSE. All of the videos on the course webpage have \"preview\" turned on. Scroll down to find and click \"Expand All Sections\" and then click the preview link. You won't have access to the forums and other materials, but you can watch the videos.\n\n**NOTE: Be sure to BUY the course for $0, and not sign up for Udemy's subscription plan. The subscription plan is free for the first seven days and then they charge you. It's selected by default. If you are on a laptop and can't click the BUY checkbox, try shrinking the browser window. Some have reported it works in mobile view.**\n\nSometimes it takes an hour or so for the code to become active just after I create it, so if it doesn't work, go ahead and try again a while later.\n\nSome people in India and South Africa get a **\"The coupon has exceeded it's maximum possible redemptions\"** error message. [Udemy advises that you contact their support if you have difficulty applying coupon codes, so click here to go to the contact form.](https://support.udemy.com/hc/en-us/requests/new?type=student) If you have a VPN service, try to sign up from a North American or European proxy.\n\n**I'm also working on another Udemy course** that follows my recent book \"Beyond the Basic Stuff with Python\". So far I have [the first 15 of the planned 56 videos done. You can watch them for free on YouTube.](https://www.youtube.com/watch?v=kSrnLbioN6w&list=PL0-84-yl1fUmeV_2bBSguF_S0TVZk8wow&index=1)\n\nSide note: My latest book, Python Programming Exercises Gently Explained is a set of 42 programming exercises for beginners [for free](https://inventwithpython.com/pythongently/) or as a [99 cent ebook](https://www.amazon.com/Python-Programming-Exercises-Gently-Explained-ebook/dp/B0BGYJ7G6T/).\n\n\n**Frequently Asked Questions:** (*read this before posting questions*)\n\n* This course is for beginners and assumes no previous programming experience, but the second half is useful for experienced programmers who want to learn about various third-party Python modules.\n* If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace.\n* This Udemy course covers roughly the same content as the 1st edition book (the book has a little bit more, but all the basics are covered in the online course), which you can read for free online at https://inventwithpython.com\n* The 2nd edition of Automate the Boring Stuff with Python is free online: https://automatetheboringstuff.com/2e/\n* I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course.\n* It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read.\n* I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/)\n* **You're not too old to learn to code. You don't need to be \"good at math\" to be good at coding.**\n* Signing up is the first step. Actually finishing the course is the next. :) [There are several ways to get/stay motivated.](https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_how_can_i_get.2Fstay_motivated_to_learn_programming.3F) I suggest getting a \"gym buddy\" to learn with. Check out /r/ProgrammingBuddies"}, {"title": "spend so much hours on the first day of learning python", "score": 0, "id": "11f8uhe", "url": "https://www.reddit.com/r/Python/comments/11f8uhe/spend_so_much_hours_on_the_first_day_of_learning/", "comms_num": 3, "created": 1677689743.0, "body": "I just spend at least 7 hours to learn first day of python course by Dr. Angela Yu in Udemy. You know, the topics actually very basic just like talking how to use print, input, variable and several assignment.\n\nOn the other hand, i try myself to take all the important information then transferring them into my obsidian notes. Do you think this is the reason why i spend so much hours in the first day? Maybe y'all can share the story of how much you spend a first day in learning python n."}, {"title": "Parsing nginx logs using python and pandas", "score": 0, "id": "11f00ii", "url": "https://dev.to/ksndeveloper/parsing-nginx-logs-using-python-1m6k", "comms_num": 0, "created": 1677665240.0, "body": ""}, {"title": "Unleash the Power of Python Monads: A Design Pattern for Elegant Code!", "score": 23, "id": "11f5s4w", "url": "https://www.reddit.com/r/Python/comments/11f5s4w/unleash_the_power_of_python_monads_a_design/", "comms_num": 5, "created": 1677682480.0, "body": " The Monad design pattern is a functional programming concept that provides a way to encapsulate complex operations and computations in a concise and elegant manner. Monads allow you to write code that is easy to read, maintain and test, by providing a set of rules and conventions for composing functions and dealing with side effects. \n\n Whether you are a beginner or an experienced developer, studying Monads is a valuable investment in your programming skills. \n\n\\-> [https://medium.com/@hk151817/mastering-pythons-hidden-power-monad-design-patterns-for-smarter-code-123e509553d1](https://medium.com/@hk151817/mastering-pythons-hidden-power-monad-design-patterns-for-smarter-code-123e509553d1)\n\n\\-> [https://dev.to/hamzzak/mastering-monad-design-patterns-simplify-your-python-code-and-boost-efficiency-kal](https://dev.to/hamzzak/mastering-monad-design-patterns-simplify-your-python-code-and-boost-efficiency-kal)"}, {"title": "Einsum Visualized", "score": 9, "id": "11f71o9", "url": "https://betterprogramming.pub/einsum-visualized-c050903145ef?sk=e05c7d70e150f91e29f3d0a37326e087", "comms_num": 0, "created": 1677685491.0, "body": ""}, {"title": "Beginner Showcase for Inventory Control System", "score": 11, "id": "11f66va", "url": "https://www.reddit.com/r/Python/comments/11f66va/beginner_showcase_for_inventory_control_system/", "comms_num": 4, "created": 1677683459.0, "body": "&#x200B;\n\nhttps://preview.redd.it/zs5b7n9l75la1.png?width=993&format=png&auto=webp&v=enabled&s=c6b979932a6454b5e79ad90c44834d997b9172e1\n\nhttps://preview.redd.it/tiv2459j75la1.png?width=995&format=png&auto=webp&v=enabled&s=0e2e350033dfbf4b23a0102299a7671bcf8a0d5e\n\nThis is a basic Inventory Control System I have been working on for awhile now. It's my first real step up from simple one file programs to actually trying to create a usable bit of code. This program uses customtkinter as the GUI and SQLite as the database to store information. The user can add new products, update the product counts, generate reports and control users. Its still a big work in progress for me and I plan on adding barcode scanner compatibility and hopefully pdf report options as well. \n\nI hope this counts as a beginner showcase as I have worked hard on it for awhile and I'm sure its buggy, but man am I proud of it. I'll link the github in case anyone wants to take a look and offer some feedback or ideas. Thanks for reading and looking! [https://github.com/brandon10135/Inventory\\_control](https://github.com/brandon10135/Inventory_control)"}, {"title": "Pydata NYC talk on Shiny for Python", "score": 4, "id": "11f5i5j", "url": "https://www.youtube.com/watch?v=ijRBbtT2tgc&t=5s", "comms_num": 5, "created": 1677681781.0, "body": ""}, {"title": "I made a privacy focused, Chromium web browser to intercept all requests on a website while web scraping. I built it using Tor and PySide6 (a QT framework for Python).", "score": 14, "id": "11f5b2w", "url": "https://www.reddit.com/r/Python/comments/11f5b2w/i_made_a_privacy_focused_chromium_web_browser_to/", "comms_num": 7, "created": 1677681281.0, "body": "I've spent the last 5 month (Oct 2022 to Feb 2023) on a web scraping deep dive. I got to the point where I can scrape many of the public websites (not including the social media giants) using Selenium and Headless Chrome.\n\nOne thing I wanted more control over were the network requests. I wanted to see if there was a lightweight way to block requests from reaching the server from the browser. I spent the next few days diving deep into the chromium, and servo project source code to understand how web browsers work.\n\nTo my surprise I found there is a rather simple way to do this via Python. The next step is to turn this into a lightweight headless browser to do some distributed web scraping.\n\n[Source code on Github](https://github.com/nodox/simple-tor-chrome-browser-python)"}, {"title": "Flask-Moreshell : flask shell with ipython, bpython, ptpython", "score": 6, "id": "11f4r3h", "url": "https://www.reddit.com/r/Python/comments/11f4r3h/flaskmoreshell_flask_shell_with_ipython_bpython/", "comms_num": 0, "created": 1677679874.0, "body": "Flask-Moreshell is a flask extension which supports `ipython, bpython, ptpython` shells in `flask shell` command. you can install this via `pip install flask-moreshell` command.\n\n&#x200B;\n\nhere's the repo:\n\n[https://github.com/TGoddessana/flask-moreshell](https://github.com/TGoddessana/flask-moreshell)\n\n&#x200B;\n\nas you can see, you can use `ipython, bpython, ptpython` stuff in flask shell command. this finds current flask application, and loads it. highly inspired by [flask-shell-ipython](https://github.com/ei-grad/flask-shell-ipython), [flask-shell-bpython](https://github.com/jacquerie/flask-shell-bpython), [flask-shell-ptpython](https://github.com/jacquerie/flask-shell-ptpython).\n\nhttps://preview.redd.it/jptyhfblw4la1.png?width=1462&format=png&auto=webp&v=enabled&s=603f5acb0f9b6e74a6e26ecc52463f909be68390\n\nhttps://preview.redd.it/4hucljalw4la1.png?width=1462&format=png&auto=webp&v=enabled&s=4dbf51d9c718d76125b8875f6c8b06e057030e52\n\n[  ](https://preview.redd.it/9y9g3oblw4la1.png?width=1462&format=png&auto=webp&v=enabled&s=1bfcf194273a97fcabb72e25662e0fb49bdec6f2)\n\nlet me know any python REPL alternatives(shell types, like ipython) which can i add to this package, or any improvements. thanks!"}, {"title": "How can I read GBs or TBs of data optimally and perform transformation on it and store it into database with limited hardware resources.", "score": 4, "id": "11f37wx", "url": "https://www.reddit.com/r/Python/comments/11f37wx/how_can_i_read_gbs_or_tbs_of_data_optimally_and/", "comms_num": 12, "created": 1677675723.0, "body": "I want to read GBS and TBs of data from the source and perform transformation on it and store it into database. \n\nProblem occurs when I read 1 GB of data spark need  at max 4 GBs of memory to process it. While my system also running other task Simultaneously. I have limited resources which results in killing spark task. I have read the online about optimisation techniques of spark such as -\n\n- Cache and persist\n- Data serialisation \n- Memory management \n- Dataframes rather the RDD\n- Data Structuring\n\nStill problem persist.\n\nIf anyhow I can make Spark to take less memory comparatively. This can get my job done. \n\nI am looking for more logical and programmable solutions."}, {"title": "Why are you *not* writing unit tests or using TDD?", "score": 67, "id": "11f1bxk", "url": "https://www.reddit.com/r/Python/comments/11f1bxk/why_are_you_not_writing_unit_tests_or_using_tdd/", "comms_num": 130, "created": 1677669946.0, "body": "The question is as simple as the title: If you're writing Python professionally, why are you not writing unit tests for your code, or using test-driven development?\n\nAs weird as it sounds, tests make writing Python way more enjoyable for me. Earlier in my career I spent a long time looking for ways to make my code suck less, and I tried all sorts of things: I learned OO, FP, design patterns, all the latest frameworks, read a lot of books, etc. - none of those truly solved it. Then, I found using test-driven development has so far been the solution I had been looking for. There are also extensions such as codium.ai you can install on VS.\n\nBecause I've found it so useful, I'm kind of curious as to why more devs aren't using unit tests and TDD :)"}, {"title": "My first open-source project: Letterboxd Stats - A CLI tool for retrieving info of your Letterboxd activity", "score": 1, "id": "11f19ct", "url": "https://www.reddit.com/r/Python/comments/11f19ct/my_first_opensource_project_letterboxd_stats_a/", "comms_num": 0, "created": 1677669699.0, "body": "Finally, I managed to release my first project.\n\nLetterboxd Stats is a CLI tool build with Python using web-scraping (requests + lxml) to access data from a Letterboxd Account. You can:\n\n* Search for directors using the TMDb API and check which film you have seen\n* List your diary/watchlist/ratings activity\n* Get info about a film and print its poster as ASCII art\n\nThis is just an initial version and more features may come up soon.\n\nPlease let me know what you think!\n\nEDIT: Now with the possibility of adding film to your Diary, and adding/removing films to your Watchlist.\n\n[https://github.com/mBaratta96/letterboxd\\_stats](https://github.com/mBaratta96/letterboxd_stats)\n\nhttps://i.redd.it/8x7nhwbr34la1.gif"}, {"title": "GitHub - mtshiba/pylyzer: A fast static code analyzer & language server for Python", "score": 56, "id": "11f0uvx", "url": "https://github.com/mtshiba/pylyzer", "comms_num": 10, "created": 1677668387.0, "body": ""}, {"title": "Web Scraping LinkedIn Jobs using Python (without Selenium\ud83d\ude09)", "score": 213, "id": "11ezfwd", "url": "https://www.scrapingdog.com/blog/scrape-linkedin-jobs/", "comms_num": 35, "created": 1677663083.0, "body": ""}, {"title": "3.10 Finally close to release for aws lambda", "score": 29, "id": "11ezfjv", "url": "https://github.com/aws/aws-lambda-base-images/issues/31#issuecomment-1448638312", "comms_num": 5, "created": 1677663050.0, "body": ""}, {"title": "Fast DOOM WAD renderer in 999 lines of Python", "score": 35, "id": "11ez5ln", "url": "https://www.reddit.com/r/Python/comments/11ez5ln/fast_doom_wad_renderer_in_999_lines_of_python/", "comms_num": 5, "created": 1677662007.0, "body": "A re-implementation of the  original DOOM WAD renderer, based on Leonardo Ono's Java implementation,  and compiled with Shedskin for a 100-time speedup or so."}, {"title": "Are comments for code necessary?", "score": 24, "id": "11ez3sd", "url": "https://www.reddit.com/r/Python/comments/11ez3sd/are_comments_for_code_necessary/", "comms_num": 97, "created": 1677661812.0, "body": "I heard a colleague say that good coders do not write comments anymore as their code is written in an easy understandable way. \n\nWhat do you think about that? I dont code much that is the first time I have heard that."}, {"title": "Pantsbuild 2.15: Easier multi-platform workflows, Docker build support, automatic code cleanup. Coming attractions in 2.16: Ruff support, support for integrating adhoc tools into your Pants codebase without writing plugins.", "score": 7, "id": "11ez3ea", "url": "https://blog.pantsbuild.org/pants-2-15/", "comms_num": 1, "created": 1677661774.0, "body": ""}, {"title": "I made a json parser for studying(wrapper of C json parser actually) , can you guys check this out?", "score": 5, "id": "11eyp3j", "url": "https://www.reddit.com/r/Python/comments/11eyp3j/i_made_a_json_parser_for_studyingwrapper_of_c/", "comms_num": 2, "created": 1677660264.0, "body": "I made it to study Python C API\n\nit seems quite comparable to popular UltraJson and SimpleJson, but slower than orjson (another wrapper of yyjson)\n\nI don't know how I'll make this better and want to get comments and ideas to improve it...!\n\n[https://github.com/ita9naiwa/pyyjson](https://github.com/ita9naiwa/pyyjson)"}, {"title": "A library for creating huge Sqlite indexes at breakneck speeds", "score": 0, "id": "11evbg0", "url": "https://github.com/siara-cc/sqlite_blaster_python", "comms_num": 2, "created": 1677648471.0, "body": ""}, {"title": "Introduction to PyQt6!", "score": 41, "id": "11esfmc", "url": "https://youtu.be/F35fWyrkNKM", "comms_num": 0, "created": 1677639885.0, "body": ""}, {"title": "\ud83d\udc3c Pandas 2.0 Up To 32x Faster", "score": 254, "id": "11eqczv", "url": "https://link.medium.com/346MZW9HNxb", "comms_num": 20, "created": 1677634198.0, "body": ""}, {"title": "PSA: Bootleg `python.org` spotted in the wild", "score": 321, "id": "11eq5pi", "url": "https://www.reddit.com/r/Python/comments/11eq5pi/psa_bootleg_pythonorg_spotted_in_the_wild/", "comms_num": 29, "created": 1677633642.0, "body": "Just came across a clone of the [Python](https://www.python.org/) website. Flagging so y'all keep your eyes peeled for them camouflaged rattlesnakes.\n\n&#x200B;\n\nhttps://preview.redd.it/z35yy8ery0la1.png?width=786&format=png&auto=webp&v=enabled&s=4f022c2627ffc89b9b267282652f35b79e3bcb7f"}, {"title": "Show Reddit: StarQueue - Postgres database backed message queue server for Python", "score": 7, "id": "11eovtt", "url": "https://www.reddit.com/r/Python/comments/11eovtt/show_reddit_starqueue_postgres_database_backed/", "comms_num": 3, "created": 1677630297.0, "body": "Hey all,\n\nhttps://github.com/starqueue/starqueue/\n\nThis  is a project I wrote and since I am doing nothing with it any more I  thought I would publish the source code in case anyone finds it  interesting.  I wrote this at a time that I was finding message queues  interesting.\n\nStarQueue is a message queue server written in Python.\n\nIt is designed to be a more simple copy of Amazon Simple Queue Server.\n\nClients access it via HTTP. The API is documented at https://github.com/starqueue/starqueue/tree/main/starqueueserver/website\n\nThe database is Postgres.\n\nWhen I developed it initially, I included seamless support for Postgres, MySQL and Microsoft SQL server.\n\nAt  some point in the development I gave up on all databases except  Postgres, though I have left the MySQL and SQL server code in place.\n\nI  deployed StarQueue as an online service at one point (no longer  online). This github repo is a copy of the source code for that service.\n\nThis project is not live and is archived, but I have posted it here in case anyone finds the source code interesting.\n\nAfter  I finished StarQueue I found it frustrating that StarQueue's Python  based/db backed message queue is not fast, so I wrote a prototype HTTP  message queue in Rust, which saved its messages as plain files on the  file system, using the fact that Linux's move is atomic to ensure  message could not be double handled - that was so fast it easily maxed  out the hard disk write speed and left many other message queue systems  behind with 30,000 messages a second. Frustrated by the speed limit of  the hard disk I updated the prototype to operate as RAM only and that  was able to handle about 8 million messages a second.  More important  things came up for me to do, and I never got that Rust project to  completion."}, {"title": "Wednesday Daily Thread: Beginner questions", "score": 5, "id": "11eoalz", "url": "https://www.reddit.com/r/Python/comments/11eoalz/wednesday_daily_thread_beginner_questions/", "comms_num": 2, "created": 1677628808.0, "body": "New to Python and have questions? Use this thread to ask anything about Python, there are no bad questions!\n\nThis thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response."}, {"title": "Raspberry Pi Flight Controller: Hardware Review", "score": 3, "id": "11emzwx", "url": "https://www.reddit.com/r/Python/comments/11emzwx/raspberry_pi_flight_controller_hardware_review/", "comms_num": 0, "created": 1677625556.0, "body": "Hi everyone! I released a new installment in my series on Raspberry Pi flight controllers. In this video, I explain the hardware components. If you're interested in autonomous aviation, check it out!  \n[https://youtu.be/MBLD8sjiYiU](https://youtu.be/MBLD8sjiYiU)\n\n&#x200B;\n\nhttps://preview.redd.it/ln02nrwig0la1.png?width=1280&format=png&auto=webp&v=enabled&s=c2931fc00d2dab7218a0230cd00e07395c4df857"}, {"title": "Developed an effortless terminal notifier completely in Python - Nudge Notifier", "score": 4, "id": "11emwwq", "url": "https://www.reddit.com/r/Python/comments/11emwwq/developed_an_effortless_terminal_notifier/", "comms_num": 1, "created": 1677625357.0, "body": "# [Nudge Notifier](https://NudgeNotifier.com) - Effortless Terminal Notifications over Slack and Discord\n\nhttps://preview.redd.it/trzfbceye0la1.png?width=1123&format=png&auto=webp&v=enabled&s=4f9b58e206c42f63dc961b1b82860abb76a0f45c\n\nHi /r/python, built this completely in Python for development-speed and ease of maintenance, and was mildly surprised by how easy adding simple GUI turned out.\n\nThe biggest challenge was in using packaging libraries like py2app and pyinstaller.\n\nI used rumps for ridiculously simple MacOS GUI, py2app for packaging (though I recommend pyinstaller if you can get it to work), and pyarmor for encryption. And then Flask for backend. The longest part was Slack integration because of the fussy review process.\n\n*Check it out at* [*NudgeNotifier.com*](https://NudgeNotifier.com) \n\nhttps://preview.redd.it/emcymng0f0la1.png?width=1225&format=png&auto=webp&v=enabled&s=edba0c02f7ec1dea89a33e104dada632e6f8b194"}, {"title": "I created a clone of Jasper AI/Copy AI and open sourced it", "score": 5, "id": "11emvg8", "url": "https://www.reddit.com/r/Python/comments/11emvg8/i_created_a_clone_of_jasper_aicopy_ai_and_open/", "comms_num": 0, "created": 1677625268.0, "body": "It's wild to me that Jasper AI raised 125M last year. I made a version using GPT-3 from [OpenAI](https://openai.com) as the backend and [Steamship](https://www.steamship.com/packages/copy-ai-clone?utm_source=PythonAlgos&utm_medium=Blog&utm_campaign=pythonalgos-copy-ai-clone&utm_id=pythonalgos-copy-ai-clone) as the infra to put it online. Here's the [GitHub](https://github.com/ytang07/copy-ai-clone)."}, {"title": "Scrape Google Maps Reviews With Python", "score": 1, "id": "11ej1rd", "url": "https://dev.to/serpdogapi/scrape-google-maps-reviews-with-python-2d2g", "comms_num": 0, "created": 1677616228.0, "body": ""}, {"title": "Pypi project to collect a large amount of responses from ChatGPT over extended periods of time", "score": 0, "id": "11ejutp", "url": "https://www.reddit.com/r/Python/comments/11ejutp/pypi_project_to_collect_a_large_amount_of/", "comms_num": 0, "created": 1677618204.0, "body": "[https://github.com/hwelsters/sleepyask](https://github.com/hwelsters/sleepyask)\n\nChatGPT currently limits the number of questions that users may ask per hour. I made this to allow users to just leave their computers on for extended periods of time to collect large amounts of responses from ChatGPT. \n\nIts main use will most likely be in research or data analysis related to ChatGPT where the user needs to collect results to a large number of responses. In fact, I made it specifically for research purposes and decided to just make a pypi project out of it. Feel free to use it!\n\nThe library is fairly basic for now but I'm currently working on allowing the user to use multiple accounts to ask questions to chip away at the questions a bit faster. Feel free to help out or suggest changes!"}, {"title": "When to use Python's \"list\" constructor", "score": 3, "id": "11ef8jc", "url": "https://www.pythonmorsels.com/using-list/", "comms_num": 0, "created": 1677607237.0, "body": ""}, {"title": "Migrating from Flask to FastAPI, part 3 (last part)", "score": 19, "id": "11eevqo", "url": "https://www.reddit.com/r/Python/comments/11eevqo/migrating_from_flask_to_fastapi_part_3_last_part/", "comms_num": 2, "created": 1677606346.0, "body": "Here it is! The last part of the Forethought blog post series, migrating from Flask to FastAPI \ud83c\udf81\n\nThis includes:\n\n\ud83c\udf2a Concurrency, async and await, and how to mix it with blocking code\n\n\ud83c\udf0e request and g pseudo-global variables\n\n\ud83d\ude0e Advanced refactoring\n\n[https://engineering.forethought.ai/blog/2023/02/28/migrating-from-flask-to-fastapi-part-3/](https://engineering.forethought.ai/blog/2023/02/28/migrating-from-flask-to-fastapi-part-3/)"}, {"title": "Help! LCD1602 library for a project.", "score": 0, "id": "11ed41j", "url": "https://www.reddit.com/r/Python/comments/11ed41j/help_lcd1602_library_for_a_project/", "comms_num": 6, "created": 1677602095.0, "body": "Good day; not sure where to start other than I need a little help with a raspberry pi project. It's a clone of the Superdeker hockey stick handling game.\n\nI've followed a how-to in order to put it all together. The physical build is complete; the python code however runs into an error.\n\nOne of the first lines of code is, \"import LCD1602\". I'm not a programmer. My guess is simply that the LCD1602 library is simply not installed.\n\nMy questions are,\n\n1. where do I get the LCD1602 library? 2. If it's a file, where do I put the file on the raspberry pi in order for the program to see it?\n\nI will paste the GitHub link to the project I'm working from further below.\n\nAny help would be greatly appreciated!\n\nThanks for taking the time to read this.\n\nhttps://gitlab.com/modernhackerspace/hockeyGame"}, {"title": "Learned how to write text input between separate text boxes", "score": 10, "id": "11ecbm6", "url": "https://www.reddit.com/r/Python/comments/11ecbm6/learned_how_to_write_text_input_between_separate/", "comms_num": 0, "created": 1677600245.0, "body": "[https://github.com/ProarchwasTaken/text\\_input](https://github.com/ProarchwasTaken/text_input)\n\nThis took me a while to figure out since I had to rewrite the code two times. Basically this will be used as a reference for future projects. In this test you can input text into two seperate boxes, have multiple lines and remove text with the backspace key. Pretty simple. Is there anything I could've done better?\n\n \n\nhttps://preview.redd.it/9sdt9ny9dyka1.png?width=1271&format=png&auto=webp&v=enabled&s=bee4c815b13937c94fe50e10164f1c2434028f1b"}, {"title": "Join us for an AMA with the developers of pandas, the powerful data analysis toolkit, this Thursday, March 2nd at 5:30 pm UTC to celebrate the upcoming 2.0 release", "score": 185, "id": "11ebuh0", "url": "https://www.reddit.com/r/Python/comments/11ebuh0/join_us_for_an_ama_with_the_developers_of_pandas/", "comms_num": 4, "created": 1677599250.0, "body": "The AMA can be found [here](https://www.reddit.com/r/Python/comments/11fio85/we_are_the_developers_behind_pandas_currently/).\n\nThis Thursday we'll be hosting an AMA with some of the developers of [pandas](https://pandas.pydata.org). The AMA will 'officially' start at 5:30pm UTC.\n\nWe will make a post for the AMA the shortly so folks can start asking questions.\n\n**pandas** is a Python package that provides fast, flexible, and expressive data structures designed to make working with \"relational\" or \"labeled\" data both easy and intuitive. It aims to be the fundamental high-level building block for doing practical, **real world** data analysis in Python.\n\nWe released the release candidate for 2.0 last week, so the actual release is expected shortly, possibly  next week. Please help us in testing that everything works through [testing the rc](https://github.com/pandas-dev/pandas/releases/tag/v2.0.0rc0) :)\n\nYou can find the [code repository here](https://github.com/pandas-dev/pandas) and if you find an [issue](https://github.com/pandas-dev/pandas/issues) you're interested in, you can follow [the contributor guidelines](https://pandas.pydata.org/docs/development/contributing.html)"}, {"title": "pandas 2.0 and the Arrow revolution", "score": 589, "id": "11e99a2", "url": "https://datapythonista.me/blog/pandas-20-and-the-arrow-revolution-part-i", "comms_num": 45, "created": 1677595790.0, "body": ""}, {"title": "Faster apps with use cache in Python", "score": 7, "id": "11e6ba0", "url": "https://www.reddit.com/r/Python/comments/11e6ba0/faster_apps_with_use_cache_in_python/", "comms_num": 0, "created": 1677591653.0, "body": "Hi guys, I published my article about caching in Python. You can have faster apps with use cache systems. \n\nhttps://kadermiyanyedi.medium.com/how-to-use-caching-in-python-5d7a150dd30c"}, {"title": "Using NumPy reshape() to Change the Shape of an Array \u2013 Real Python", "score": 0, "id": "11e5x0j", "url": "https://realpython.com/numpy-reshape/", "comms_num": 0, "created": 1677590492.0, "body": ""}, {"title": "Build a Robust Monitoring System with Flask and SQLAlchemy to Keep Your System Online", "score": 4, "id": "11e5wxg", "url": "https://www.reddit.com/r/Python/comments/11e5wxg/build_a_robust_monitoring_system_with_flask_and/", "comms_num": 8, "created": 1677590485.0, "body": "Hello everyone,\n\nDo you want to build a monitoring system for your system, application or website? Check out this step-by-step guide on building a monitoring system using Flask and SQLAlchemy.\n\nThis open-source project provides a monitoring system that tracks the online/offline status of multiple stores or applications, making it easy to identify downtimes and get a report of past outages. The system is scalable, and it uses caching and multithreading to ensure that it can handle large volumes of data.\n\nYou can find the code for this project on GitHub, so feel free to contribute and improve upon the existing codebase. Click on the link below to read the full guide and get started with building your own monitoring system.\n\nLink to the guide: https://pandeyshikha075.medium.com/a-step-by-step-guide-to-building-a-monitoring-system-with-flask-and-sqlalchemy-85e909bf75d9\n\nGitHub link: https://github.com/Shikha-code36/Restaurant-Monitoring-System\n\nHappy monitoring!"}, {"title": "GPUs and Data analysis", "score": 3, "id": "11e4vd3", "url": "https://www.reddit.com/r/Python/comments/11e4vd3/gpus_and_data_analysis/", "comms_num": 6, "created": 1677587397.0, "body": "I am relatively new to data analysis and pandas but I think they are really intresting . I am going to buy a new PC and I wanted to know if I need a good graphic card like an RTX 3070 for example in order to make data analysis projects.Help!"}, {"title": "Adding ability to import packages using Micropip to our low-code web framework - ToolJet", "score": 34, "id": "11e1dns", "url": "https://www.reddit.com/r/Python/comments/11e1dns/adding_ability_to_import_packages_using_micropip/", "comms_num": 5, "created": 1677574783.0, "body": "Hello everyone,\n\nI'm one of the maintainers of ToolJet ([https://github.com/ToolJet/ToolJet/](https://github.com/ToolJet/ToolJet/)) - an open-source low-code framework for building business applications.\n\n4 months ago we [posted in this community](https://www.reddit.com/r/Python/comments/ylrufi/adding_python_support_using_pyodide_to_our/) about adding support for Python in ToolJet's low-code platform. The feature is now being extensively used by our users and the most frequently requested feature was to add ability to importing external packages. \n\nWe use Pyodide for running custom Python code and you can even interact with the UI components using Python. Now you can also import your favourite packages via Micropip.\n\nHere is our documentation for this feature: [https://docs.tooljet.com/docs/how-to/import-external-libraries-using-runpy/](https://docs.tooljet.com/docs/how-to/import-external-libraries-using-runpy/)\n\nRelease notes: [https://github.com/ToolJet/ToolJet/releases/tag/v2.1.0](https://github.com/ToolJet/ToolJet/releases/tag/v2.1.0)\n\nYou can quickly try out this feature on ToolJet Cloud ([https://tooljet.com](https://tooljet.com)) or on your local machine ([https://docs.tooljet.com/docs/setup/try-tooljet](https://docs.tooljet.com/docs/setup/try-tooljet)).\n\n  \nWould love to know your thoughts and suggestions so that we can improve the user experience of the Python community."}, {"title": "GitHub - Aperocky/replbuilder: Python helper tool for building and running a repl with custom commands", "score": 10, "id": "11e035b", "url": "https://github.com/Aperocky/replbuilder", "comms_num": 0, "created": 1677569725.0, "body": ""}, {"title": "Code quality best practices", "score": 47, "id": "11e00kq", "url": "https://www.reddit.com/r/Python/comments/11e00kq/code_quality_best_practices/", "comms_num": 16, "created": 1677569463.0, "body": "Could you point me to as much resources as possible around python code documentation/code quality best practices? I am interested in as much strict and as much generally acceptable standards as possible. Meaning for example: generating a class diagram for every app, docstring for every function, type hints everywhere, unit tests coverage, (how to) write readme, module docstrings but also merge requests best practices, commit messages etc."}, {"title": "PySpark for Data Science with Hands-on Examples.", "score": 2, "id": "11dzbeu", "url": "https://www.kdnuggets.com/2023/02/pyspark-data-science.html", "comms_num": 0, "created": 1677566876.0, "body": ""}, {"title": "How to Incorporate Basic Physics Concepts into Python games built using the Pygame Framework! Code linked in the GitHub in the comments!", "score": 2, "id": "11dw5cs", "url": "https://www.youtube.com/watch?v=5j0uU3aJxJM&t=2607s", "comms_num": 1, "created": 1677556455.0, "body": ""}, {"title": "Make Python debugger 80 times faster with Reloadium", "score": 17, "id": "11dsne4", "url": "https://www.reddit.com/r/Python/comments/11dsne4/make_python_debugger_80_times_faster_with/", "comms_num": 7, "created": 1677546514.0, "body": "[Fast debug in action](https://i.redd.it/mm2bcfgnxtka1.gif)\n\nHello everyone! We have just added this feature to Reloadium [https://github.com/reloadware/reloadium](https://github.com/reloadware/reloadium)\n\nThe Python debugger is a really useful tool for developers as it helps us write better code more efficiently. However, it can be extremely slow - especially for bigger projects. So, we decided to do something about it and made some optimizations. The results have been amazing and Reloadium can now speed up the Python debugger by 80 times! This means the debugger runs just as fast as it would without using it, which makes it a much more viable option for larger projects.\n\nJust keep in mind that the debugger will only debug functions that have breakpoints set, instead of everything (including the standard library) like it used to. But, if you only need to investigate specific functions, this shouldn't be a problem. Plus, other features like hot reloading still work in fast debug mode.\n\nOverall, these optimizations make the Python debugger even more valuable for developers and should help improve the debugging experience."}, {"title": "Corey Schafer is making videos again!", "score": 457, "id": "11dryt5", "url": "https://www.youtube.com/watch?v=HZ8uXq5VG2w&ab_channel=CoreySchafer", "comms_num": 27, "created": 1677544669.0, "body": ""}, {"title": "Tuesday Daily Thread: Advanced questions", "score": 1, "id": "11dr3ta", "url": "https://www.reddit.com/r/Python/comments/11dr3ta/tuesday_daily_thread_advanced_questions/", "comms_num": 0, "created": 1677542411.0, "body": "Have some burning questions on advanced Python topics? Use this thread to ask more advanced questions related to Python.\n\n**If your question is a beginner question we hold a beginner Daily Thread tomorrow (Wednesday) where you can ask any question! We may remove questions here and ask you to resubmit tomorrow.**\n\nThis thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response."}, {"title": "How do you all go about writing API clients in python?", "score": 2, "id": "11dpfze", "url": "https://www.reddit.com/r/Python/comments/11dpfze/how_do_you_all_go_about_writing_api_clients_in/", "comms_num": 14, "created": 1677538202.0, "body": "It's a tricky one to find discussions for on google or anywhere else because of the overwhelming number of \"how to\"-s on writing REST APIs themselves, or on more basic concepts so I figured I would ask here.\n\nDo you have particular libraries you all like to use? What are the more important features you look for when it comes to concepts like caching, keeping your requests DRY, etc.\n\nI saw [this](https://pypi.org/project/api-client/) library and thought it had a lot of really good design concepts but I'm curious to hear some input from the community."}, {"title": "Python Auth Module using MySQL , looking for feedback", "score": 1, "id": "11dohnr", "url": "https://www.reddit.com/r/Python/comments/11dohnr/python_auth_module_using_mysql_looking_for/", "comms_num": 2, "created": 1677535844.0, "body": " Hey guys!\n\nI just wanted to share a little project I've been working on in my spare time. I've created a Python Authentication module using MySQL and I would love to get some feedback from the community.\n\nIt's still in its early stages and admittedly pretty basic, but I'm hoping to develop it further and turn it into something more comprehensive and robust. If you have any suggestions for improvements or alternative approaches, feel free to let me know!\n\nHere's the code for the module: [https://github.com/iq-thegoat/GoatAuth](https://github.com/iq-thegoat/GoatAuth)\n\nThanks for checking it out and I look forward to hearing your thoughts!"}, {"title": "Fastapi or Starlite for new project?", "score": 54, "id": "11dmea6", "url": "https://www.reddit.com/r/Python/comments/11dmea6/fastapi_or_starlite_for_new_project/", "comms_num": 81, "created": 1677530840.0, "body": "i am going to start a new web project but i don't know which framework i use between fastapi or starlite so what are your thoughts?"}, {"title": "Write production grade pandas (and other libraries!) with Hamilton", "score": 3, "id": "11dkshd", "url": "https://www.reddit.com/r/Python/comments/11dkshd/write_production_grade_pandas_and_other_libraries/", "comms_num": 9, "created": 1677526964.0, "body": "While Pandas is incredibly flexible and easy to get started with, it doesn't lend itself to writing good quality, extensible code. This is usually fine. Lots of it is thrown away -- written in notebooks and never seen again. However, a lot amount of it ends up making it into production ETLs, services, etc..\n\nWhen we ran the ML platform team at Stitch Fix, we dealt with a *lot* of monolithic, messy pandas scripts. We built [hamilton](https://github.com/dagworks-inc/hamilton/) to solve this problem. A programmer represents transforms on dataframes as a series of python functions. The parameter names are used to specify upstream dependencies, and the whole thing gets wired into a dependency graph.\n\nIn short -- instead of writing:\n\n    df['a'] = df['b'] + df['c'] \n\nYou'd write:\n\n    def a(b: pd.Series, c: pd.Series) -> pd.Series:     \n        return b+c \n\nThen you use a *driver* to customize execution, pass in paraemeters, etc... Note that its not at all limited to pandas -- while that was the initial use-case, it can handle any sort of python datatype!\n\nWe'd love feedback, contribution, and use-cases! We've started [DAGWorks, Inc.](https://www.dagworks.io) to build it out and support it. \n\nYou can try hamilton in the browser here: [www.tryhamilton.dev](https://www.tryhamilton.dev) .\n\nAnd find the repository here: [https://github.com/dagworks-inc/hamilton/](https://github.com/stitchfix/hamilton/)"}, {"title": "Looking for SQLx-like library", "score": 5, "id": "11dkrmz", "url": "https://www.reddit.com/r/Python/comments/11dkrmz/looking_for_sqlxlike_library/", "comms_num": 13, "created": 1677526910.0, "body": "I'm used to writing plain SQL queries (as opposed to a proper ORM), and I've found [SQLx](https://github.com/launchbadge/sqlx) ergonomics have a great balance:\n\n1. SQL queries are being checked at compile time.\n2. Output types are inferred to static types (in Rust, obviously).\n3. \\`sqlx-cli\\` allows to manage migrations based on SQL files.\n\nIs there any way to achieve the same process in Python? Ideally, plain queries will be inferred to \\`dataclass\\`s or something similar, and maybe mypy will be able to have static validation of types.\n\nThanks"}, {"title": "Released my first pypi project!", "score": 53, "id": "11dgg0a", "url": "https://www.reddit.com/r/Python/comments/11dgg0a/released_my_first_pypi_project/", "comms_num": 17, "created": 1677516516.0, "body": "Hi all! I've been tinkering with writing code for a while and i wanted to work on something easy and simple over the weekend so, here it is. Spinloader, an easy to use library that generates simple animations for while executing functions. Here's a demo of what it does. It adds simple functions like, 1. Timeout to functions \n\n2. Return value with threads. \n\n&#x200B;\n\nIt's a simple project anyone can go through. But, like I said, it's literally something i've been writing over the weekend, there might be better ways of doing things and, I'd love to here them. Feel free to visit the [repo](https://github.com/Abiskar-Timsina/spinloader).  Or, you can install it using   \n\n\n    pip install Spinloader\n\nHere's a sample code:\n\n    from spinloader import animate, TextColor\n    from spinloader.exceptions import ThreadTimeoutError\n    \n    import time \n    \n    \n    @animate(TextColor.green(\"Printing Messages \"),timeout=5)\n    def hello():\n        print(TextColor.yellow(\"Hello world!\"))\n        time.sleep(0.5)\n        return 100\n    \n    try:\n        print(hello())\n    except Exception as e:\n        print(e)\n\nwhich produces the following output. You can also run your own animations, choose your own colors. I'll keep updating it over time to make it more useful. Thanks for reading! \n\nhttps://i.redd.it/2ock74rhfrka1.gif"}, {"title": "Can Python, related software and Anaconda take advantage of more GPU-core of Apple's M1 Max and M2 Max chips?", "score": 0, "id": "11dfe97", "url": "https://www.reddit.com/r/Python/comments/11dfe97/can_python_related_software_and_anaconda_take/", "comms_num": 2, "created": 1677513849.0, "body": "Hi, I am trying to decide between M2 Pro and M2 Max. For those who have used a Mac with these two new chips or M1 Pro and M2 Max, do you find that the extra GPU-core of the Max chips helpful?"}, {"title": "hyper-bump-it: Bump the version for a software release", "score": 2, "id": "11dd2cr", "url": "https://www.reddit.com/r/Python/comments/11dd2cr/hyperbumpit_bump_the_version_for_a_software/", "comms_num": 5, "created": 1677507868.0, "body": "[hyper-bump-it](https://github.com/plannigan/hyper-bump-it) is a command line tool for updating the version in project files needed for the next release. The [documentation](https://plannigan.github.io/hyper-bump-it/latest/) details how to configure and use it. There is a page [compares it with similar tools](https://plannigan.github.io/hyper-bump-it/latest/why-hyper-bump-it/).\n\n`hyper-bump-it`'s features include:\n\n* Updating the version to a new fully specified value or increasing the version based on a specific version part\n* Optional Git integrations\n* Customizable search and replacement patterns\n* Safe by default\n* TOML configuration file (can be part of `pyproject.toml`)\n\nv0.4.0 was released today adding:\n\n* Multi-line search and replacement pasterns\n* Displaying planned changes in the unified diff format\n* Search pattern can match arbitrary dates in addition to the current version."}, {"title": "Building an instantaneous application using Python and WebSockets [Part 2]", "score": 3, "id": "11dd21x", "url": "https://www.reddit.com/r/Python/comments/11dd21x/building_an_instantaneous_application_using/", "comms_num": 0, "created": 1677507847.0, "body": "Hi everyone. I hope you are doing well. A couple of weeks ago, I wrote an article on building an instantaneous application using Python and WebSockets. Today I wrote a follow-up article where I added MongoDB to store the messages and create messaging rooms. This is part two of a three-part series of articles on building an instant messaging application.\n\nHere's a link to the article [Link](https://medium.com/@abderraoufbenchoubane/building-an-instant-messaging-application-using-python-and-websockets-part-2-83b1b9d2435a). I hope it's helpful to you.\n\nI would appreciate it if you could take the time to read the article. Feel free to let me know if you like it or not, I'm always looking for ways to improve, and this community has been great at that.\n\nThank you, and have a nice day"}, {"title": "Python is two languages now, and that's actually great", "score": 0, "id": "11dc82i", "url": "https://threeofwands.com/python-is-two-languages-now-and-thats-actually-great/", "comms_num": 3, "created": 1677505589.0, "body": ""}, {"title": "convtools: are we really DRY?", "score": 0, "id": "11dc6jb", "url": "https://medium.com/@nikita.almakov/convtools-are-we-really-dry-8f5fc350b98c", "comms_num": 0, "created": 1677505472.0, "body": ""}, {"title": "Pydantic Introduction - Models, Fields, Constrained Types, Validator Functions and Model Exports", "score": 0, "id": "11dc0hd", "url": "https://www.youtube.com/watch?v=i4jespFbA1c", "comms_num": 0, "created": 1677504987.0, "body": ""}, {"title": "\ud83d\udc0d Very clear Pydantic Introduction Video", "score": 1, "id": "11dapxk", "url": "https://www.reddit.com/r/Python/comments/11dapxk/very_clear_pydantic_introduction_video/", "comms_num": 5, "created": 1677501026.0, "body": "Pydantic made developing data driven apps WAY more fun for me.\n\nAnd I just discovered this Pydantic video that explains its features in a very clear and practical way:\n\n[https://www.youtube.com/watch?v=i4jespFbA1c&list=PL-2EBeDYMIbQQGc6kiBSm81XspmwVuk-t&index=1](https://www.youtube.com/watch?v=i4jespFbA1c&list=PL-2EBeDYMIbQQGc6kiBSm81XspmwVuk-t&index=1)\n\nThere's an accompanying blog post and dataset (on GitHub) too.\n\n**Update**: The video is part of a Pydantic series, more will be added: [https://www.youtube.com/playlist?list=PL-2EBeDYMIbQQGc6kiBSm81XspmwVuk-t](https://www.youtube.com/playlist?list=PL-2EBeDYMIbQQGc6kiBSm81XspmwVuk-t)\n\nI hope you'll enjoy it as much as I did.\n\nNow go code that awesome idea you have. \ud83e\udef5\ud83d\ude00\ud83d\udcbb\n\n# Chapters\n\n* [00:00](https://www.youtube.com/watch?v=i4jespFbA1c&t=0s) Intro\n* [01:13](https://www.youtube.com/watch?v=i4jespFbA1c&t=73s) Analysis of the structure of the data to model\n* [02:47](https://www.youtube.com/watch?v=i4jespFbA1c&t=167s) Installing Pydantic and Requests packages\n* [04:02](https://www.youtube.com/watch?v=i4jespFbA1c&t=242s) Defining Pydantic model class\n* [06:22](https://www.youtube.com/watch?v=i4jespFbA1c&t=382s) Creating Optional fields on the Pydantic model\n* [11:09](https://www.youtube.com/watch?v=i4jespFbA1c&t=669s) Constrained fields in Pydantic\n* [15:23](https://www.youtube.com/watch?v=i4jespFbA1c&t=923s) Using custom validator functions in Pydantic\n* [19:54](https://www.youtube.com/watch?v=i4jespFbA1c&t=1194s) Using Enums as types in Pydantic models\n* [22:22](https://www.youtube.com/watch?v=i4jespFbA1c&t=1342s) Exporting Pydantic models to dictionaries and JSON"}, {"title": "I wrote an enumclass decorator you may find useful... It turns your class type into an enumeration type", "score": 1, "id": "11d7mxr", "url": "https://www.reddit.com/r/Python/comments/11d7mxr/i_wrote_an_enumclass_decorator_you_may_find/", "comms_num": 4, "created": 1677490027.0, "body": "I was looking for a way to  have an enumeration-like type using Python's built-in tools without resorting to third-party libraries for the sake of portability, so  I thought sharing it with you guys won't harm. It's very short:\n\n```\nfrom typing import Type, Any #you can just remove this and the annotation for maximum portability\n\ndef enumclass(passed_class: Type[Any]):\n    def enum_init(passed_class):\n        properties = list(vars(passed_class))\n        \n        for p in properties:\n            if not p.startswith(\"__\"):\n                passed_class.p = repr(p)\n\n    passed_class.__init__ = enum_init\n    passed_class.__init__(passed_class)\n\n    return passed_class\n```\n\nWhat it does is, when used as a decorator, it sets the function `enum_init` as the init function of your class, then gets all the properties of the class using `vars` --- mind that `vars` returns a generator so we must spend it using `list` since it's actively writing to class and as it goes on, depending on what implementation of Python you use (I use CPython) the underlying pointer changes when the class changes. So you must save the data from the original class in the syntax tree, not the class that is being actively changed in the tree. I hope that makes sense. We set the property variable `p` to `repr(p)`. We have basically taken the value of `p` out of syntax tree and upon calling the function, this will be evaluated.\n\nAnyways we make sure the property name does not contain `__` which denotes Pythons built-in class properties. We then set that function as the class init and initialize.\n\nSo when we do something like this:\n\n```\n@enumclass\nclass AA:\n    ss: str = 'sa'\n    mm: str = 'mm'\n    aa: int = 1\n\n\nprint(AA.aa, AA.mm, AA.ss)\n```\n\nIt will print:\n```\n1 mm sa\n```\n\nWhy is that? Because the class is no longer a class in the syntax tree, rather, an evaluated variable which whose properties we set. This is the main difference between Python's decorators and macros in static languages. Python's decorators can be very powerful but they don't change the syntax tree in a way we want, rather, they change the value of the class or the function they are decorating in memory.\n\nThis perhaps would have been doable in a more elegant way using class inheritance. Not sure. I like this solution and it serves my purpose.\n\nI hope this thread is not against the rules. I did not see anything regarding such posts in there.\n\nEnjoy and keep safe."}, {"title": "Open-source alerting CLI", "score": 3, "id": "11d78ek", "url": "https://www.reddit.com/r/Python/comments/11d78ek/opensource_alerting_cli/", "comms_num": 0, "created": 1677488488.0, "body": "Hey everyone!\n\nI'm working on developer-first alerting CLI so every developer will be able to create alerts within their IDE, keep (pun intended) it close to the code, and integrate it with their CI/CD.\n\nEvery insight/interesting use case is welcome (feel free to create an issue in the repository and I'll get to it asap)\n\n&#x200B;\n\n[https://github.com/keephq/keep](https://github.com/keephq/keep)"}, {"title": "PEP 709 \u2013 Inlined comprehensions", "score": 206, "id": "11d6xzd", "url": "https://peps.python.org/pep-0709/", "comms_num": 31, "created": 1677487357.0, "body": ""}, {"title": "Two Week Programming Blitz - Open Source - Cash Prizes", "score": 8, "id": "11d6b56", "url": "https://www.reddit.com/r/Python/comments/11d6b56/two_week_programming_blitz_open_source_cash_prizes/", "comms_num": 0, "created": 1677484930.0, "body": "Greetings!\n\nMy name is Crag and I'm a Software Engineer at [Unstructured.io](https://Unstructured.io). We're all about extracting structured data from raw documents of any type.\n\nIf you enjoy any of:\n\n \\* python programming  \n \\* contributing to open source projects  \n \\* extracting clean text from raw documents  \n \\* NLP  \n \\* Curating text data for your favorite LLM projects\n\nTake a look at the ([Programming Blitz](https://github.com/Unstructured-IO/unstructured/blob/main/Competition.md)) that [Unstructured.io](https://Unstructured.io) is sponsoring through March 10. There are plenty of suggested issues that are of easy to moderate difficulty, and creative contributions besides those issues are also encouraged.  \n\n\nIf you've got any questions or have some ideas you'd like to discuss, reach out on our public Slack (link can be found from top of [https://github.com/Unstructured-IO/unstructured](https://github.com/Unstructured-IO/unstructured) ).\n\nHappy coding!  \nCrag"}, {"title": "Streamlining Event-Driven Architecture with Knative Channels and SinkBinding", "score": 1, "id": "11d5ue7", "url": "https://www.reddit.com/r/Python/comments/11d5ue7/streamlining_eventdriven_architecture_with/", "comms_num": 0, "created": 1677483160.0, "body": " I share my experience building a fully event-driven service using Knative and KafkaChannel-based resources with SinkBinding: https://rogulski.it/blog/knative-channel-subscription-with-sink-binding/"}, {"title": "I have used Flask and Django to implement some web apps before. I am now an intern of a company, and my team leader have written a requirement to implement a web app in Django. However, I really like Flask because it's minimalistic. What should I do? \ud83d\ude13\ud83d\ude13\ud83d\ude13", "score": 0, "id": "11d5pdo", "url": "https://www.reddit.com/r/Python/comments/11d5pdo/i_have_used_flask_and_django_to_implement_some/", "comms_num": 23, "created": 1677482643.0, "body": "I have used Flask and Django to implement some web apps before. I am now an intern of a company, and my team leader have written a requirement to implement a web app in Django. However, I really like Flask because it's minimalistic and I want to do more with it. What should I do?"}, {"title": "ClownSort is a tool for sorting images, PDFs, and movies into folders based on the text they contain and/or the filename. Particularly useful if you have tons of unsorted screenshots with any kind of text content and would like to be able to search for them based on their content.", "score": 31, "id": "11d454t", "url": "https://www.reddit.com/r/Python/comments/11d454t/clownsort_is_a_tool_for_sorting_images_pdfs_and/", "comms_num": 4, "created": 1677476988.0, "body": "[ClownSort](https://github.com/michelcrypt4d4mus/clown_sort) provides a command line tool (`sort_screenshots`) for sorting images, PDFs, and movies into folders based on the text they contain (meaning the text you see in the picture or read in the PDF) and/or the filename. It also puts the OCR extracted text in the EXIF tags. Particularly useful if you have tons of unsorted screenshots of any kind of text content.\n\n# Automated Sorting\n\nThe default use case is to have the tool sort all files in a given directory matching a given filename pattern automatically, meaning with no user input. You just make a two column CSV file like this (or sort of like this; reddit doesn't seem to like displaying the pipe symbol which would be the way you could have a single regex match multiple archangel names):\n\n|*folder*|*regex*|\n|:-|:-|\n|Demons|`asm[o0]d[e3]us`|\n|Archangels|`Michael\\b`|\n|Croesus|`croesus`|\n|FTX|`FTX`|\n\nand then tell it to use your rules rather than the defaults via some command line options:\n\n[--rules-csv lets you specify your own rules](https://preview.redd.it/dy0h9t303oka1.png?width=1519&format=png&auto=webp&v=enabled&s=c72f2179da7f09ac9e809bcd06587b42f43d8eca)\n\n**Tweets**\n\nIn particular ClownSort is good at Tweets and Reddit posts/comment screenshots. For instance when sorting this screenshot file called `Screen Shot 2022-11-08 at 4.39.32 PM.png` with the rules in the table above:\n\n[note the date...](https://preview.redd.it/0l3wy5wl1oka1.png?width=794&format=png&auto=webp&v=enabled&s=4027265f5ca178db94edc6544244c96a5af90c53)\n\nThese things would happen:\n\n1. the file would be renamed `Tweet by @lawmaster: \"I will say though before this thread gets taken over: 1. I do believe Alameda has the size to easily buy Binance\\'s FIT OTC 2. I think the chance of FTX insolvency is near\" Screen Shot 2023-02-17 at 7.11.37 PM.png` (Yes, the filenames can be kind of long, though they truncate at 200 chars or so).\n2. the file would be copied to a subdirectory called `Sorted/FTX/` because we had the \"FTX\" sorting rule in our CSV.\n3. the string \"Larry Cermak \\\\@lawmaster will say though before this thread gets taken over: 1. I do believe Alameda has the size to easily buy Binance's FIT OTC 2. I think the chance of FTX insolvency is near 0%...\" would be put into the newly copied file's ImageDescription EXIF tag.\n4. the original untouched file would be moved to your specified `Processed/` dir.\n\n**Reddit posts**\n\nThis file, currently called `Screen Shot 2023-01-23 at 4.39.32 PM`:\n\nhttps://preview.redd.it/zmm6594d1oka1.png?width=1180&format=png&auto=webp&v=enabled&s=adc780e9d1d90f88354a525eb335425a2adc263c\n\nwould be renamed `Reddit post by Spmhealy_ADA/ \"Support told me it was my bank. My bank told me it was the merchant\" Screen Shot 2023-01-23 at 4.39.32 PM.png.`\n\nOther stuff happens too:\n\n1. the OCR text that is scanned from the image will be put in the `ImageDescription` EXIF metadata field.\n2. if more than one sort rules is matched the file will be copied to multiple destinations\n3. file creation etc timestamps are preserved\n\n# Manual Sorting\n\nThis is an experimental feature accessed with the command line switch `--manual-sort`. When selected you will be presented with a popup showing the original filename, the suggested filename, and some radio buttons showing all the subdirectories in your `Sorted/` folder.\n\nhttps://preview.redd.it/9bix2lf34oka1.png?width=2772&format=png&auto=webp&v=enabled&s=cbe10633f1b44e3909ac7f6b1ac9a1b587dba368"}, {"title": "Yo Mama Jokes API", "score": 79, "id": "11d19ss", "url": "https://www.reddit.com/r/Python/comments/11d19ss/yo_mama_jokes_api/", "comms_num": 14, "created": 1677467886.0, "body": "Who doesn't like yo mama jokes? I found a github repo with close to 1000 of them and decided to make a django project using MySQL, some htmx and django-ninja so I could learn and have some fun. Plus I figured this would be fun to put on a resume. I have full crud on this but to figured it'd be a good idea for only the admin panel to upload the jokes. Figured I'd share this as these always make me laugh.\n\nThe webapp is located here \\~> [https://www.yomama-jokes.com](https://www.yomama-jokes.com)  \n\n\nThe code is located here \\~> [https://github.com/laffchem/yomama](https://github.com/laffchem/yomama)"}, {"title": "Is anyone using the Uncle Bob clean code style?", "score": 194, "id": "11d0y98", "url": "https://www.reddit.com/r/Python/comments/11d0y98/is_anyone_using_the_uncle_bob_clean_code_style/", "comms_num": 67, "created": 1677466919.0, "body": "I tried it on a small project. I think it\u2019s not for me.\n\nI get that comments can lie, but `fifty_character_function_names` can lie too. And seeing what code does is a very different thing than seeing *why* it does it.\n\nIt\u2019s not just the comments either. Hard to tell, because I haven\u2019t had the opportunity to go back in a year and try to read this project, but I feel like really breaking functions down makes it hard to keep track of sequence.\n\nPersonally, I lean toward \u201cdo one thing\u201d, but if I\u2019ve got a few lines of code that are only run once, maybe twice, I might leave them in a slightly longer function just to keep everything close together and in order.\n\nTo me, Dropbox SDK is a readable style for Python, but I\u2019d like to hear about longer-term experience with Uncle Bob style in Python."}, {"title": "Monday Daily Thread: Project ideas!", "score": 1, "id": "11cx2xv", "url": "https://www.reddit.com/r/Python/comments/11cx2xv/monday_daily_thread_project_ideas/", "comms_num": 5, "created": 1677456010.0, "body": "Comment any project ideas beginner or advanced in this thread for others to give a try! If you complete one make sure to reply to the comment with how you found it and attach some source code! If you're looking for project ideas, you might be interested in checking out Al Sweigart's, [\"The Big Book of Small Python Projects\"](https://inventwithpython.com/bigbookpython/) which provides a list of projects and the code to make them work."}, {"title": "PyCon US grants free booth space and conference passes to early-stage startups, and applications close Sunday at midnight Pacific Time", "score": 30, "id": "11cv65i", "url": "https://us.pycon.org/2023/expo/startup-row/", "comms_num": 0, "created": 1677451367.0, "body": ""}, {"title": "Web scraping from the terminal", "score": 7, "id": "11crk7n", "url": "https://www.reddit.com/r/Python/comments/11crk7n/web_scraping_from_the_terminal/", "comms_num": 0, "created": 1677442958.0, "body": "Hi!\n\nSome days ago, I made a simple CLI that lets you scrape a site, using CSS selectors. It accepts an optional Python oneliner to process data and the \\`requests.request\\` parameters\n\nHere's the URL: [https://github.com/ZSendokame/CScrape](https://github.com/ZSendokame/CScrape)\n\nIt can be used like this:\n\n    python -m cscrape \n        --url \"website\"  # URL to scrape\n        --select \"a\"  # CSS Selector to use\n        --oneliner \"'\\n'.join([tag.text for tag in nodes])\"  # Optional oneliner\n\nIf you have any idea, please share it to improve the CLI!"}, {"title": "Building your own PC or Mac based real time data acquisition system using Python and Arduino", "score": 6, "id": "11cojhs", "url": "https://www.reddit.com/r/Python/comments/11cojhs/building_your_own_pc_or_mac_based_real_time_data/", "comms_num": 2, "created": 1677435725.0, "body": "In this tutorial we will describe \n\n**How to build PC or Mac based real time data acquisition system using Python and Arduino**\n\nhttps://preview.redd.it/h7pcmla6rkka1.jpg?width=1443&format=pjpg&auto=webp&v=enabled&s=494380c625b063115d9d208b453a0ceaea1f3acb\n\n&#x200B;\n\n* Link to the [Video tutorial of How to build a Python Data Acquisition system (DAQ)](https://www.youtube.com/watch?v=hpHv4Iux6_s)\n* Link to the [code of How to build a Python DAQ system (Github)](https://github.com/xanthium-enterprises/Arduino-Python-Cross-platform-Data-logging-to-CSV-file-)\n\n&#x200B;\n\nHere the Python code running on the PC will read data send by the Arduino  via Serial Port (Virtual COM port ) and logs the data into  a CSV file on the Hard disk .\n\n* The Program uses  **PySerial** to communicate with the Arduino\n* **Python Signal Library** is used to trap the CTRL + C  signal  and to exit from the data acquisition loop\n* The log file name is a generated automatically using current system and time \n\n&#x200B;\n\nhttps://preview.redd.it/eqoxgu71skka1.jpg?width=575&format=pjpg&auto=webp&v=enabled&s=f59dd88b3fb9f075f489f6417a0dfcc76c8d0543"}, {"title": "A new implementation of a high-precision integrator algorithm for systems of second order differential equations", "score": 58, "id": "11coeve", "url": "https://www.reddit.com/r/Python/comments/11coeve/a_new_implementation_of_a_highprecision/", "comms_num": 4, "created": 1677435425.0, "body": "In orbital dynamics simulators, precision is key. In simulating a low-earth satellite in a circular orbit at an altitude of 650 km, this integrator produced an orbit which, after one complete orbit of the earth, deviated from the true value by...about 25 nanometers! That's about 1 part in 25 trillion per orbit. It is about 6 orders of magnitude more accurate that the very common Verlet integrator.\n\nAs far as I'm aware this is the first python implementation of this algorithm, called the Gauss-Jackson integrator. While it was originally intended to be used for space flight (it is allegedly the integrator being used by NASA to this day), by integrating the dynamics equation of motion, it can be used for any system of 2nd order differential equations, and with a little algebra on the user's side, any system of 1st order ODEs too.\n\nGitHub repo (with pictures and an example):  [https://github.com/lorcan2440/Gauss-Jackson-Integrator](https://github.com/lorcan2440/Gauss-Jackson-Integrator)\n\nMade by reading from this paper: [https://github.com/lorcan2440/Gauss-Jackson-Integrator/blob/master/GJ8%20Implementation.pdf](https://github.com/lorcan2440/Gauss-Jackson-Integrator/blob/master/GJ8%20Implementation.pdf)"}, {"title": "type-driven development in Python", "score": 7, "id": "11co0k2", "url": "https://www.reddit.com/r/Python/comments/11co0k2/typedriven_development_in_python/", "comms_num": 21, "created": 1677434488.0, "body": "Inspired by [this](https://lexi-lambda.github.io/blog/2019/11/05/parse-don-t-validate/) post, I would like to start developing by focusing on types. How would you do that in Python? Any resources for a newbie in this kind of approach?"}, {"title": "How To Create A Circle Pattern In Block Scripting and Python", "score": 0, "id": "11cmf8p", "url": "https://youtu.be/k7kDVZaQ8Nc", "comms_num": 0, "created": 1677431042.0, "body": ""}, {"title": "How to install python 3.11.2 and use it in PyCharm.", "score": 0, "id": "11ci1uw", "url": "https://youtu.be/HSe5nhwoaFU", "comms_num": 0, "created": 1677420550.0, "body": ""}, {"title": "Theine 0.3.0 release, 5x faster than cachetools/cacheout", "score": 7, "id": "11chrq3", "url": "https://www.reddit.com/r/Python/comments/11chrq3/theine_030_release_5x_faster_than/", "comms_num": 14, "created": 1677419847.0, "body": "Theine: [https://github.com/Yiling-J/theine](https://github.com/Yiling-J/theine)\n\n10k requests benchmark:\n\n||Read|Write|Mix Zipf|\n|:-|:-|:-|:-|\n|Theine(W-TinyLFU) API|3.42 ms|10.14 ms||\n|Theine(W-TinyLFU) Auto-Key Decorator|7.17 ms|18.41 ms|13.18 ms|\n|Theine(W-TinyLFU) Custom-Key Decorator|6.45 ms|17.67 ms|11.50 ms|\n|Cachetools LFU Decorator|15.70 ms|627.10 ms|191.04 ms|\n|Cacheout LFU Decorator|50.05 ms|704.70 ms|250.95 ms|\n|Theine(LRU) Custom-Key Decorator|5.70 ms|16.04 ms|10.91 ms|\n|Cachetools LRU Decorator|14.05 ms|61.06 ms|36.89 ms|\n|Cacheout LRU Decorator|47.90 ms|94.94 ms|68.25 ms|"}, {"title": "Cython 3.0 beta 1 is released", "score": 118, "id": "11chg45", "url": "https://groups.google.com/g/cython-users/c/avxEDypPB6k", "comms_num": 15, "created": 1677418915.0, "body": ""}, {"title": "Is there a way to automate writing unit tests?", "score": 55, "id": "11cgko1", "url": "https://www.reddit.com/r/Python/comments/11cgko1/is_there_a_way_to_automate_writing_unit_tests/", "comms_num": 65, "created": 1677416521.0, "body": "I found Devmate, but I'm not sure how good it is. I work in Visual Studio, and writing unit tests is a challenging job. Is there something we can do to make this easier?"}, {"title": "Python Garbage Collector and Highly Loaded Applications", "score": 19, "id": "11cggrl", "url": "https://www.reddit.com/r/Python/comments/11cggrl/python_garbage_collector_and_highly_loaded/", "comms_num": 16, "created": 1677416238.0, "body": "Recently I have been reading a lot about high throughput applications written in other languages and I have noticed that folks in Java, Golang and other prog languages with garbage collectors care about GC-related optimisations. For example,\n\n\\- Java: [https://www.papertrail.com/solution/tips/7-problems-to-look-out-for-when-analyzing-garbage-collection-logs/](https://www.papertrail.com/solution/tips/7-problems-to-look-out-for-when-analyzing-garbage-collection-logs/) (seems like a lot of JVM-related caveats, but I gather that some of the issues could be actual even for other GC-powered langs like higher CPU usage during extensive object creation)\n\n\\- Java: [https://blog.developer.adobe.com/engineering-high-throughput-low-latency-machine-learning-services-7d45edac0271](https://blog.developer.adobe.com/engineering-high-throughput-low-latency-machine-learning-services-7d45edac0271) (Adobe team seemed to spend a considerable amount of time optimising the way they allocates memory  (essentially, they tried to avoid (re)allocation)  in face of GC)\n\n\\- GoLang: [https://medium.com/swlh/processing-16gb-file-in-seconds-go-lang-3982c235dfa2](https://medium.com/swlh/processing-16gb-file-in-seconds-go-lang-3982c235dfa2) (the dude is using sync.Pool primitive (effectively implements object pool pattern) that reduce amount of short-lived objects)\n\nThat naturally made me think if this problem is actual in case of Python. For example, we tend to use Pydantic and other data classes to transmit structured information through out the application, wrap request and response data into them, etc. Most of those objects will be fairly short-lived.\n\nHow efficient are these operations? How noticeable would be a difference if we were using some sort of object pooling? And what other cases where we could think of reducing a pressure on GC?\n\nHas anyone done any experiments around that?"}, {"title": "GitHub - cdev-framework/cdev-sdk: Cdev Python SDK - Cdev provides a development environment and framework that allows python developers to easily create and deploy Serverless Applications on Amazon Web Services.", "score": 2, "id": "11cellh", "url": "https://github.com/cdev-framework/cdev-sdk", "comms_num": 0, "created": 1677411614.0, "body": ""}, {"title": "Starlite February Updates", "score": 219, "id": "11cdih0", "url": "https://www.reddit.com/r/Python/comments/11cdih0/starlite_february_updates/", "comms_num": 28, "created": 1677409983.0, "body": "Hi all \ud83d\udc4b,\n\nHere is the newest and latest update [Starlite](https://github.com/starlite-api/starlite) - the blazingly fast ASGI API framework!\n\nFirst off, we got a new logo, new docs and our own domain - check it out at https://starliteproject.dev/.\n\nThe big news is that we are working hard on releasing v2.0, for which we plan to release a first Release Candidate in early March. \n\nV2.0 will introduce a lot if improvements and additions, with some highlights being:\n\n1. SQL Alchemy 2.0 Support.\n2. Rewritten DTOs\n3. Improved Performance\n4. A builtin event bus and \"signals\"\n5. HTMX support\n6. SAQ support\n7. Improvements to caching and sessions\n\nAnd more!\n\nWe decided upon our long term versioning strategy - Starlite will adhere to strict Semver, which means no breaking changes except in major versions. And we will release major versions more often (at least once a year if not more). \n\nWe will keep the last minor version of the previous major version as a maintenance version. Thus, v1.51.* is now a maintenance version, and it keeps receiving bug fixes and dependency updates 1.51.5 is the current patch). \n\nThe other news is the [discord server](https://discord.gg/X3FJqy8d2j), which got a major overhaul. We now have 3 moderators who maintain it. \n\nAs always, we welcome contributors of all kinds. Join us on discord or our GitHub."}, {"title": "Dependency Injection Configuration (Dicfg)", "score": 11, "id": "11cdggj", "url": "https://www.reddit.com/r/Python/comments/11cdggj/dependency_injection_configuration_dicfg/", "comms_num": 0, "created": 1677409902.0, "body": "&#x200B;\n\n[Dicfg is a configuration system that supports dependency injection via object interpolation in config files.](https://preview.redd.it/9b1eym8ujika1.png?width=1746&format=png&auto=webp&v=enabled&s=447b9d7547d596460eb3bc129a8478c67f648281)\n\n**Main Features**\n\n* Loading of predefined config files (YAML and JSON).\n* Overwrite config with user\\_config files/dictionaries, command line interface, and/or presets.\n* Customize merge/replace behavior for dictionaries and lists.\n* Interpolation support for sub-config files, config variables, environment variables, and python objects.\n* Build object instances directly in the config.\n* Dependency injection via object interpolation: configure all object dependencies directly in the config.\n* Use object attribute interpolation for referencing object attributes directly in the config file.\n\n**Documentation:**\n\n[https://martvanrijthoven.github.io/dicfg](https://martvanrijthoven.github.io/dicfg/)/\n\n**Example using PyTorch experiment:**\n\n./configs/config.yml\n\n    default:\n      project: myproject\n      log_path: '/tmp/'\n      cpus: 4\n      epochs: 200\n      steps: 50\n      learning_rate: 0.05\n      model: \n        \"*object\": torchvision.models.resnet50\n        num_classes: 10\n      model_parameters:\n        \"*object\": __main__.get_parameters\n        model: ${model}\n      criterion:\n        \"*object\": torch.nn.CrossEntropyLoss\n        ignore_index: 0\n      optimizer:\n        '*object': torch.optim.Adam\n        params: ${model_parameters}\n        lr: ${learning_rate}\n      scheduler:\n        '*object': torch.optim.lr_scheduler.ExponentialLR\n        optimizer: ${optimizer}\n        gamma: 0.9\n\nAll settings can be overridden via user\\_config files/dictionaries, command line interface, and/or presets. Here below, we only override the learning\\_rate 0.05 to 0.005 via a user config:\n\n./custom.yml\n\n    experiment:\n        default:\n            learning_rate: 0.005\n\nmain.py\n\n    from dicfg import ConfigReader, build_config\n    \n    def get_parameters(model):\n        return model.parameters()\n    \n    def main():\n        # create config reader, name=experiment refers to the experiment in custom.yml\n        config_reader = ConfigReader(name='experiment')\n        \n        # Read the main config and override with custom config\n        # The location of the main config path can be set via main_config_path\n        # The default location of the main_config_path='./configs/config.yml'\n        config = config_reader.read(user_config='./custom.yml')\n    \n        # Build the config, which creates all the objects\n        experiment = build_config(config['default'])\n    \n        # Retreive objects\n        model = experiment['model']  # resnet50 model \n        criterion = experiment['criterion'] # CrossEntropyLoss\n        optimizer = experiment['optimizer'] # Build with resnet50 parameters dependency\n        scheduler = experiment['scheduler'] # Scheduler build with Adam dependency\n        \n        print(model)\n    \n    \n    if __name__ == \"__main__\":\n        main()"}, {"title": "[Celery] PreconditionFailed issue and how RabbitMQ/AWS related to it", "score": 0, "id": "11cbta3", "url": "https://twitter.com/DmytroLitvinov/status/1629773278242906114", "comms_num": 0, "created": 1677406491.0, "body": ""}, {"title": "bootleg-jwt 0.2.1 - sign and validate tokens quickly and easily with pydantic and blake2b!", "score": 7, "id": "11c93c9", "url": "https://www.reddit.com/r/Python/comments/11c93c9/bootlegjwt_021_sign_and_validate_tokens_quickly/", "comms_num": 0, "created": 1677399718.0, "body": "[https://github.com/freyjagp/bootleg-jwt](https://github.com/freyjagp/bootleg-jwt)\n\n&#x200B;\n\n[https://pypi.org/project/bootleg-jwt/](https://pypi.org/project/bootleg-jwt/)\n\n&#x200B;\n\nThis is bootleg-jwt, a python module implementing pydantic modules and blake2b hashing in order to sign and validate tokens with bodies containing some arbitrary user information, and data.\n\n&#x200B;\n\n&#x200B;\n\nSee example below for basic usage:\n\n```python\nfrom bootleg_jwt import BootlegJWT, Payload, header, body\nfrom pydantic import BaseModel\nfrom os import environ              # An environment variable is required.\n\n\nSECRET = \"some-secret-key\"\n\n\nDURATION = 60 * 60                  # Token expires after this many seconds\n\n\nTYPE = \"Testing Token\"              # An arbitrary name\n\n\nenviron['SECRET'] = SECRET          # This module depends upon an environment\n                                    # variable `SECRET`. You may also set this\n                                    # secret in a `.env` file in your project's root,\n                                    # or by using `export SECRET=\"secret\"`\n\n\n\n## These two pydantic models are simple examples. They may have arbitrary names and data. They must only map to Token.body.user and Token.body.data\nclass UserData(BaseModel):\n    id: int\n    username: str\n\n\nclass BodyData(BaseModel):\n    info: str\n    value: bool\n\n\npayload_user = UserData(id=69,username=\"nice\")\npayload_body = BodyData(info=\"Some Information\", value=True)\n\n\npayload = Payload(\n    header=header(duration=DURATION,type=TYPE),\n    body=body(user=payload_user,data=payload_body)\n)\n\n\ngenerate = BootlegJWT(payload=payload)\ntoken = generate.TOKEN\nencoded = generate.ENCODED\njson = generate.JSON\nvalidate = generate.VALID\ndivider = \"\\n------------------------------\\n\"\n\n\n\nprint(token,divider,encoded,divider,json,divider,validate)\n```\n\n```python\nfrom bootleg_jwt import BootlegJWT, Payload, header, body\nfrom pydantic import BaseModel\nfrom os import environ              # An environment variable is required.\n\n\nSECRET = \"some-secret-key\"\n\n\nDURATION = 60 * 60                  # Token expires after this many seconds\n\n\nTYPE = \"Testing Token\"              # An arbitrary name\n\n\nenviron['SECRET'] = SECRET          # This module depends upon an environment\n                                    # variable `SECRET`. You may also set this\n                                    # secret in a `.env` file in your project's root,\n                                    # or by using `export SECRET=\"secret\"`\n\n\n\n## These two pydantic models are simple examples. They may have arbitrary names and data. They must only map to Token.body.user and Token.body.data\nclass UserData(BaseModel):\n    id: int\n    username: str\n\n\nclass BodyData(BaseModel):\n    info: str\n    value: bool\n\n\npayload_user = UserData(id=69,username=\"nice\")\npayload_body = BodyData(info=\"Some Information\", value=True)\n\n\npayload = Payload(\n    header=header(duration=DURATION,type=TYPE),\n    body=body(user=payload_user,data=payload_body)\n)\n\n\ndivider = \"\\n------------------------------\\n\"\n\n\ndef generate(payload):\n    generate = BootlegJWT(payload=payload)\n    decoded = generate.DECODED\n    encoded = generate.ENCODED\n    json = generate.JSON\n    validate = generate.VALID\n    print(decoded,divider,encoded,divider,json,divider,validate)\n    return encoded\n\n\ndef validate_token(token):\n    validate_token = BootlegJWT(token=token)\n    v_decoded = validate_token.DECODED\n    v_json = validate_token.JSON\n    v_valid = validate_token.VALID\n    print(v_decoded,divider,v_json,divider,v_valid)\n\n\nvalidate_token(generate(payload))\n```"}, {"title": "Res Feci: A Python-based GUI alternative to manually entering Excel VBA macros/formulas (work in progress)", "score": 12, "id": "11c7ifo", "url": "https://www.reddit.com/r/Python/comments/11c7ifo/res_feci_a_pythonbased_gui_alternative_to/", "comms_num": 2, "created": 1677393570.0, "body": "Hi there,\n\nIf anyone is like me and finds entering Excel formulas and macros to be tedious, I have created a GUI-based alternative which I call *Res Feci*:\n\n[https://github.com/Guitarman-Waiting-In-The-Sky/ResFeci](https://github.com/Guitarman-Waiting-In-The-Sky/ResFeci)\n\nNote: you will need to install two libraries for this: \n\n1. pywin32 (pip install pywin32)\n2. pandas (pip install pandas)\n\nOnce these are installed, if you are on Windows, you can run the operations from your ACTIVE, ALREADY-OPEN Excel sheet.  This is important! The program will not prompt you to \"Select an Excel File\", instead, it just works with whatever sheet is in-focus and open your desktop.\n\n For now, the only ground rule is that your Excel sheet **MUST CONTAIN A HEADER ROW ON ROW 1.**\n\nHere are the features currently in the app:\n\n1) **Compare Two Columns**:  Running this will highlight similar values in 2 selected columns.\n\n 2) **Concatenate the Values of a Single Column:** This will let you join all values in a single column (and will also prompt you to enter a delimiter to the joined values (though this isn't necessary).\n\n3) **Index and Match**: This is near impossible to explain in words; but...here goes. The app will prompt you for 2 columns to compare against each other.  If a cell value in the 2nd column is present somewhere in the first column, the, the value from a 3rd column (that is on the same row as the 2nd column value) is placed into a 4th column.\n\nFor example, if this if your report and you want to see if any values from Animal\\_2 are in Animal\\_1 and then carry over the Color\\_1 values into the Color\\_2 column:\n\n&#x200B;\n\n|Color\\_1|Animal\\_1|Animal\\_2|Color\\_2|\n|:-|:-|:-|:-|\n|Grey|Elephant|Cat||\n|Black|Snail|Elephant||\n|White|Elephant|Snail||\n\nThen, after running the report, your Excel sheet would look like this (note, Elephants in Animal\\_1 have 2 separate Color\\_1 values).  Multiple values are retained and delimited with a |\n\n&#x200B;\n\n|Color\\_1|Animal\\_1|Animal\\_2|Color\\_2|\n|:-|:-|:-|:-|\n|Grey|Elephant|Cat||\n|Black|Snail|Elephant|Grey | White|\n|White|Elephant|Snail|Black|\n\n4) **Concatenate Multiple Columns**:  This is pretty much the standard CONCATENATE formula from Excel.  You will be ask which columns you want to join (only 3 supported at the moment---this is a work in progress).\n\nThat's pretty much it.  This is my first time ever doing something like this, so, feel free to offer any suggestions or ask me any questions.  \n\nDisclaimers: \n\n1) THIS IS ALL A DEVELOPMENTAL WORK IN PROGRESS.  USE IS \"AT YOUR OWN RISK\"! (THOUGH, I HAVEN'T COME ACROSS ANY MAJOR ISSUES YET.\n\n2) Always save your Excel file before running any macros (including mine :) ) as there is no UNDO.\n\n3) I don't entirely understand it yet; but, internally, Excel appears to store all #'s as floating point decimal values.  This can be different from the DISPLAYED value (which can be integers).  Long story short, pandas will sometimes read the displayed integer values as floats.  I try to account for this by erring on the side of what is more useful; but, the way the script is currently written, it is possible that your Excel column may end up with mixed FLOAT and INT values (currently, mathematical operations are really a primary concern---most of my uses are more string-based at the moment).  This may warrant further looking into at some point.\n\nThat's pretty much it; hopefully someone gets some use out of this!"}, {"title": "Why can't Pip just tell me my python version is too new? Someone please make this make sense to me.", "score": 89, "id": "11c69yz", "url": "https://www.reddit.com/r/Python/comments/11c69yz/why_cant_pip_just_tell_me_my_python_version_is/", "comms_num": 38, "created": 1677389092.0, "body": "Disclaimer: The problem is fixed; I don't need support.\n\nI wanted to install a project which used torch on a new computer, and I installed Python 3.11. As you may know, Torch only supports python 3.10, not 3.11. When I use pip to try and install Torch onto this particular python installation, I get this:\n\n> ERROR: Could not find a version that satisfies the requirement torch (from versions: none)\n\nObviously, as a programmer I understand what this means. \"No versions are available to install so I can't find your package. Sorry.\" But as a user whose brain isn't always in programming mode, this is a ridiculously unhelpful error because it requires me to consider the possibility that a package may not be available for my Python version, without explicitly telling me so. All it tells me is that this really popular package--which I *know* is *definitely* available--is not actually available.\n\nTo make things worse, when I try to install the actual project that relies on torch, it doesn't tell me any of the above; it just tells me there is a dependency conflict caused by Torch. This seems a bit like telling me you're having an argument with a thin stretch of air. How can there be a conflict when Torch itself is not even installed, and the only thing relying on it is the other thing i'm trying to install? I guess the \"conflict\" is that the dependency can't be installed, but then why can't it just ... say that?\n\nI work with Linux servers every day. This still does not seem user-friendly, at all. Am I missing something or is this just one of those charming little quirks everyone puts up with because that's the way it's always been?"}, {"title": "O que eu tenho a ver com esta tal Intelig\u00eancia Artificial? Devo aprender ou me preocupar?", "score": 0, "id": "11c25cj", "url": "https://youtube.com/shorts/I4CQ1BYP1-8?feature=share", "comms_num": 0, "created": 1677376002.0, "body": ""}, {"title": "Business Process Diagram as code", "score": 196, "id": "11c13xj", "url": "https://www.reddit.com/r/Python/comments/11c13xj/business_process_diagram_as_code/", "comms_num": 17, "created": 1677373008.0, "body": "Do you love business process diagrams as much as I do? Do you wish you could make diagrams using code rather than dragging and dropping shapes? Well, you\u2019re in luck!\n\nI am working on a Python package called ProcessMapper that will allow you to accomplish exactly that. Roadmapper is still a work in progress \ud83c\udfd7\ufe0f\ud83d\udea7, but I am making good progress.\n\nIf you\u2019re curious and want to give it a try, go ahead and check it out. And don\u2019t forget to let me know what you think. I\u2019d love to hear your feedback and suggestions.\n\nGitHub Repo: [https://github.com/csgoh/processmapper](https://github.com/csgoh/processmapper)\n\nhttps://preview.redd.it/9j83nycqlfka1.png?width=1227&format=png&auto=webp&v=enabled&s=3438f6774f89a0a189739bae4df64c61f6a146be\n\n&#x200B;\n\n&#x200B;"}, {"title": "Sunday Daily Thread: What's everyone working on this week?", "score": 4, "id": "11bzuxb", "url": "https://www.reddit.com/r/Python/comments/11bzuxb/sunday_daily_thread_whats_everyone_working_on/", "comms_num": 17, "created": 1677369612.0, "body": "Tell /r/python what you're working on this week! You can be bragging, grousing, sharing your passion, or explaining your pain. Talk about your current project or your pet project; whatever you want to share."}, {"title": "Aura Text: Code Editor Made With Python and Tkinter", "score": 29, "id": "11bqz4n", "url": "https://www.reddit.com/r/Python/comments/11bqz4n/aura_text_code_editor_made_with_python_and_tkinter/", "comms_num": 16, "created": 1677347335.0, "body": "&#x200B;\n\nhttps://preview.redd.it/ax3gfo12hdka1.png?width=6912&format=png&auto=webp&v=enabled&s=a913c4604c13d22364c3ec62acbd4ec0c6c16272\n\n Aura Text is a Windows-based Text-Editor built with Tkinter and Python. It offers a modern look and it is completely open-source with no ads or trackers. It also packs some advanced features, \n\n&#x200B;\n\n[UI](https://preview.redd.it/yw6ozi75hdka1.png?width=1635&format=png&auto=webp&v=enabled&s=825b8c2960c731d57890d3440f1c1e5357ef9500)\n\n&#x200B;\n\n\ud83c\udf1f star the repo plsss"}, {"title": "Convert EPUB files to speech using Azure's Text-to-Speech with Python", "score": 10, "id": "11bqqty", "url": "https://www.reddit.com/r/Python/comments/11bqqty/convert_epub_files_to_speech_using_azures/", "comms_num": 5, "created": 1677346765.0, "body": "I wanted to share my latest project with you all. I have created a Python script that converts EPUB files to speech using Azure's Text-to-Speech (TTS) service. The script reads an EPUB file and converts the text into speech using Microsoft Azure Cognitive Services.\n\nIf you're someone who loves audiobooks, this script could be a game-changer for you. You can now easily listen to your favourite books in EPUB format with just a few lines of Python code. All you need is a valid Azure subscription key and region, which you can set as environment variables.\n\nYou can check out my work here: [**https://github.com/prakhs123/read-epub-from-azure-tts**](https://github.com/prakhs123/read-epub-from-azure-tts)\n\nFeel free to leave any feedback or suggestions in the comments below. I would love to hear your thoughts on this project!\n\nEdit: Updated to add more options to validate the text before starting tts\n\nEdit2: Updated Prerequisites\n\nEdit3: Updated to read HTML pages\n\nEdit4: I have now added more features to this like skipping the current audio stream by \\`space\\`, and halting the program with \\`q\\`, specifying the amount of data you want to request in one request (--num-tokens).  \n\n\nEdit5: Guys, now I have used asyncio in this. Its so satisfying as most of the time you are doing nothing waiting for input, the thread version is just wasting resources. Now the effective power of asyncio is realized :) [https://github.com/prakhs123/read-epub-from-azure-tts/blob/master/read-epub.py](https://github.com/prakhs123/read-epub-from-azure-tts/blob/master/read-epub.py)"}, {"title": "Cdev: A New Python Serverless Development Framework", "score": 1, "id": "11bogey", "url": "https://www.reddit.com/r/Python/comments/11bogey/cdev_a_new_python_serverless_development_framework/", "comms_num": 0, "created": 1677341095.0, "body": " \n\nI am excited to share an early [Alpha of Cdev](https://github.com/cdev-framework/cdev-sdk), a new Python Serverless Development framework. Cdev is designed to help developers build and deploy Serverless applications on AWS quickly and easily by providing out-of-the-box optimizations for a developer\u2019s project.  Although Serverless Development can provide many benefits, it can come with many challenges that require developers to change their workflows and development experience. Cdev was designed from scratch to tackle the problems that arise with Serverless Development while providing a familiar experience for Python developers.\n\nSome of the key features of Cdev include:\n\n&#x200B;\n\n* **Easy deployments**: Cdev makes it easy to deploy your code to AWS Lambda by allowing you to deploy a Lambda function with just a single extra annotation.\n* **Serverless Optimizations**: Cdev provides optimizations that understand and parse out individual functions from files to automatically create artifacts that are optimized for Serverless Platforms.\n* **Automated Third Party Package Deployments:** Cdev manages the bundling of third party packages used by functions.\n* **Infrastructure as Code:** Cdev provides high level constructs for other Serverless Resources (DynamoDB, SQS, S3, etc) that easily integrate with your Serverless Functions.\n* **Isolated Environments:** Create isolated development environments in the Cloud using the Cdev CLI.\n\nWhen I first began learning about Serverless Development, one of the points of friction that felt unique to Serverless Development was having to break my functions into [individual files or accept tradeoffs](https://dev.to/cdkpatterns/learn-the-3-aws-lambda-states-today-the-single-purpose-function-the-fat-lambda-and-the-lambda-lith-361j) around package size, cold starts (latency), and purity of each Serverless Function only containing its own logic. To solve this issue, I created a process that analyzes a project\u2019s Abstract Syntax Tree to understand and create optimized deployment artifacts. The created artifacts contain only the code necessary for an individual function, which provides the ability to track changes to individual functions even if they are contained in the same file.\n\nOne of the other challenges when transitioning to Serverless Development is understanding the process of packaging a function\u2019s dependencies. Using the outputted artifacts from the Syntax Tree optimization, Cdev provides automated bundling of relative and packaged dependencies for your functions. These created dependencies are optimized to only contain the dependencies used by an individual function, which helps lower the cold start of your functions and avoid platform limitations regarding package sizes.\n\nThese optimizations are provided as part of a larger framework that strives to provide an approachable place for any Python developer to begin building Serverless applications. The framework provides high level Infrastructure as Code components for the most popular Serverless Resources on AWS that attempt to simplify connecting different Serverless resources. Along with helping developers get started fast, Cdev provides features like isolated deployment environments to help keep development fast as a project grows.\n\nCurrently, the framework is in an early alpha stage and has many rough edges, but it has all the features necessary to start building Serverless Python projects. I hope that Cdev will be a valuable tool for Python developers who want to build and deploy serverless applications quickly and easily. Thanks for checking it out and looking forward to any feedback!"}, {"title": "Ecommerce Website Part 2", "score": 5, "id": "11bm3x0", "url": "https://www.reddit.com/r/Python/comments/11bm3x0/ecommerce_website_part_2/", "comms_num": 2, "created": 1677334837.0, "body": "&#x200B;\n\n[ On Going E-commerce Website ](https://reddit.com/link/11bm3x0/video/8mpy1epnfcka1/player)\n\n Hi Guys, This is part 2 of my ongoing Clothing E-commerce project looking for a review so I can try to give more better experience.  \nP.S you are the best audience \n\n [Developer](https://github.com/Aaris-Kazi)"}, {"title": "Pydantic vs Protobuf vs Namedtuples vs Dataclasses", "score": 107, "id": "11bl6u5", "url": "https://janhendrikewers.uk/pydantic_vs_protobuf_vs_namedtuple_vs_dataclasses.html", "comms_num": 28, "created": 1677332221.0, "body": ""}, {"title": "Say Goodbye to Communication Chaos in Your Python App", "score": 0, "id": "11bgriq", "url": "https://medium.com/@lokiju_jukilo/say-goodbye-to-communication-chaos-in-your-python-app-dccf55007f46", "comms_num": 0, "created": 1677316660.0, "body": ""}, {"title": "Textual 0.12.0 adds syntactical sugar and batch updates", "score": 231, "id": "11bge8p", "url": "https://textual.textualize.io/blog/2023/02/24/textual-0120-adds-syntactical-sugar-and-batch-updates/", "comms_num": 24, "created": 1677315197.0, "body": ""}, {"title": "Dual ChatGPT Bots Talk to Two People with OpenAI API", "score": 0, "id": "11bfquo", "url": "https://youtube.com/watch?v=JBR2UwbioHs&feature=share", "comms_num": 0, "created": 1677312655.0, "body": ""}, {"title": "GitHub - EFavDB/inchwormrf: inchworm root finder - This package provides methods for finding roots of a function using only calls to the derivatives of the function, never the function itself", "score": 5, "id": "11beuuv", "url": "https://github.com/EFavDB/inchwormrf", "comms_num": 0, "created": 1677309325.0, "body": ""}, {"title": "Divide and Conquer Algorithms in Python", "score": 37, "id": "11becf2", "url": "https://www.reddit.com/r/Python/comments/11becf2/divide_and_conquer_algorithms_in_python/", "comms_num": 13, "created": 1677307468.0, "body": "From Binary Search to Quick Sort, this post covers classic examples and real-world applications in sorting, searching, and matrix multiplication and at last a interview question from FAANG which can be easily solved using Divide and Conquer Method. \n\nLink : [https://adicode.ml/divide-and-conquer-algorithms-in-python](https://adicode.ml/divide-and-conquer-algorithms-in-python)"}, {"title": "VS code interactive mode", "score": 65, "id": "11b8snc", "url": "https://www.reddit.com/r/Python/comments/11b8snc/vs_code_interactive_mode/", "comms_num": 15, "created": 1677290012.0, "body": "What are the pros and cons of creating a .py file and using interactive mode, instead of creating a Jupiter notebook file (.ipynb)? \n\nJupiter notebook vs Interactive mode"}, {"title": "Explaining Hash Tables in Python!", "score": 0, "id": "11b6btj", "url": "https://youtu.be/zv632UtbGqo", "comms_num": 0, "created": 1677283430.0, "body": ""}, {"title": "Saturday Daily Thread: Resource Request and Sharing! Daily Thread", "score": 5, "id": "11b68pk", "url": "https://www.reddit.com/r/Python/comments/11b68pk/saturday_daily_thread_resource_request_and/", "comms_num": 0, "created": 1677283225.0, "body": "Found a neat resource related to Python over the past week? Looking for a resource to explain a certain topic?\n\nUse this thread to chat about and share Python resources!"}, {"title": "pytest fixture to help debugging (and asserting) database queries on django tests.", "score": 8, "id": "11b5rr0", "url": "https://gist.github.com/edraobdu/59b743ae1358cca5b61c1f638ea2c63b", "comms_num": 0, "created": 1677282000.0, "body": ""}, {"title": "Finally done with my Python for Beginners Tutorial!", "score": 6, "id": "11b5ik0", "url": "https://www.reddit.com/r/Python/comments/11b5ik0/finally_done_with_my_python_for_beginners_tutorial/", "comms_num": 2, "created": 1677281363.0, "body": "I've been looking at different technologies to move custom ColdFusion web applications to at work. I've decided that Python / Django is a good fit due to the speed you can set up a new project, abundance of tutorials, being a hot technology, libraries and the simplicity of the syntax.  Along the way, I thought it would be a good idea to solidify my knowledge and make a video of what I'm learning.  It is finally done!  I hope someone (for beginners) finds this useful:  [Python for Beginners](https://youtu.be/hK-5_WHkOho)\n\nI decided to use VS code as the IDE so the installation and configuration to make this work with Python is also covered.  The tutorial starts off with a brief history of Python, the creator and origins of the name.  Then I take a deep dive into variables, conditional statements, loops, indentation blocks and type conversion.\n\nPrior to deciding on Python / Django as the tech stack to move to, I researched .NET Core, Java - Spring MVC and Node.js.  I'm excited to about the new endeavor and look forward to learning from the community.\n\nI wanted to keep the first video under 30 minutes, so the Django setup is not covered.  That I plan to cover in a follow up video.\n\nUnfortunately, I ended up looking like a giant Smurf due to an over-used blue LED light!  I'll have that corrected in future videos... still learning.\n\n&#x200B;"}, {"title": "stop using Beautifull soup and requests", "score": 0, "id": "11b54as", "url": "https://www.reddit.com/r/Python/comments/11b54as/stop_using_beautifull_soup_and_requests/", "comms_num": 10, "created": 1677280352.0, "body": " In this video, we compare two Python scripts for web scraping. The first script uses Requests and BeautifulSoup, while the second script optimizes the scraping process using threading and HTTPX. We show the limitations of the first script and how the second script is able to scrape data much faster due to its use of threads and Selectolax. We also provide guidance on which script is best suited for different scraping tasks based on their complexity and performance requirements. \n\n&#x200B;\n\n[https://youtu.be/D5K-d9AdjTU](https://youtu.be/D5K-d9AdjTU)"}, {"title": "Structural Pattern Matching in Python I", "score": 1, "id": "11b44y6", "url": "https://www.coditation.com/blog/structural-pattern-matching-in-python-i", "comms_num": 0, "created": 1677277866.0, "body": ""}, {"title": "Resuming work on a stale project", "score": 3, "id": "11b12pc", "url": "https://mostlypython.substack.com/p/resuming-work-on-a-stale-project", "comms_num": 0, "created": 1677270254.0, "body": ""}, {"title": "Unix bash scripting versus Python - any resources out there for comparisons?", "score": 62, "id": "11az60u", "url": "https://www.reddit.com/r/Python/comments/11az60u/unix_bash_scripting_versus_python_any_resources/", "comms_num": 36, "created": 1677265451.0, "body": "Hi\nI\u2019m a seasoned UNIX bash script writer and I want to learn python. Any good resources out there that can help me compare what I can do with bash and easily transition that into python?"}, {"title": "What's the best async alternative to Celery?", "score": 6, "id": "11az1wc", "url": "https://www.reddit.com/r/Python/comments/11az1wc/whats_the_best_async_alternative_to_celery/", "comms_num": 14, "created": 1677265179.0, "body": "I have an async app which has some async functions I'd like to run as a task. I found out that Celery doesn't support async tasks, so now I'm a little stuck. Aioschedule and aioscheduler seem to be forgotten and broken.   \nAny suggestions? Thanks"}, {"title": "Creating A Circle Spirograph In Block Scripting and Python", "score": 0, "id": "11ayou5", "url": "https://youtu.be/i474yLNQwQ8", "comms_num": 0, "created": 1677264276.0, "body": ""}, {"title": "How to strangle old code using Python decorators", "score": 63, "id": "11awbc8", "url": "https://www.kosli.com/blog/how-to-strangle-old-code-using-python-decorators/", "comms_num": 7, "created": 1677258324.0, "body": ""}, {"title": "TikTok-Uploader, a premade Selenium automation for uploading TikToks!", "score": 0, "id": "11atnhb", "url": "https://www.reddit.com/r/Python/comments/11atnhb/tiktokuploader_a_premade_selenium_automation_for/", "comms_num": 5, "created": 1677251493.0, "body": "Now available on PyPI\n\nPip install TikTok-uploader\n\n[Medium article](https://link.medium.com/C9En31vmGxb)\n[GitHub Repo](https://github.com/wkaisertexas/tiktok-uploader)"}, {"title": "Uniswap Universal Router Codec in Python", "score": 15, "id": "11atci9", "url": "https://www.reddit.com/r/Python/comments/11atci9/uniswap_universal_router_codec_in_python/", "comms_num": 1, "created": 1677250702.0, "body": "Hello! :)\n\nI'm working on an alternative open source **Python coder and encoder** for the **Uniswap universal router** (0xEf1c6E67703c7BD7107eed8303Fbe6EC2554BF6B on Mainnet), based on web3.py.\n\nSource on [GitHub](https://github.com/Elnaril/uniswap-universal-router-decoder)\n\nThis project aims to provide an easy way to encode and decode transaction data sent to the universal router's functions. It is in an early development stage, so not all of them have been implemented yet, but already a few interesting ones like V2\\_SWAP\\_EXACT\\_IN and V3\\_SWAP\\_EXACT\\_IN, ...\n\nMore functions and the possibility to chain them in a single transaction will come soon!\n\nThe latest version (v0.5.0) has just been released and is available on [PyPI](https://pypi.org/project/uniswap-universal-router-decoder/)\n\nAny (constructive) feedback would be greatly appreciated! :)\n\nThank you!\n\n&#x200B;\n\nhttps://preview.redd.it/1xf09kvrh5ka1.jpg?width=512&format=pjpg&auto=webp&v=enabled&s=322cd1b6515d9d863853f422a1b3e266c835f637"}, {"title": "Natural Language Analysis of NFL Prospects (2014-2022)", "score": 4, "id": "11arxdn", "url": "https://www.reddit.com/r/Python/comments/11arxdn/natural_language_analysis_of_nfl_prospects/", "comms_num": 2, "created": 1677246852.0, "body": "I scraped the prospects section of [NFL.com](https://nfl.com/) to get prospect grades and bios. I split prospects into two categories: those classified as year one starters or better & those classified as backups or undrafted.\n\nYou can see the words/phrases associated with these players in the chart below.\n\nTop left is words/phrases associated with starters, bottom right is words/phrases associated with backups, top right is words/phrases associated with both.\n\n&#x200B;\n\nhttps://preview.redd.it/x1b9tsgf65ka1.png?width=1217&format=png&auto=webp&v=enabled&s=7d3dd13f6fda0f4d5b8f3393c95ee99af85c7a52\n\nGitHub repo: [https://github.com/tbryan2/nfl-prospects-nlp](https://github.com/tbryan2/nfl-prospects-nlp)\n\nYouTube video: [https://youtu.be/FRrvjwciAT0](https://youtu.be/FRrvjwciAT0)"}, {"title": "PyCon Namibia 2023", "score": 290, "id": "11ardl9", "url": "https://www.reddit.com/r/Python/comments/11ardl9/pycon_namibia_2023/", "comms_num": 5, "created": 1677245242.0, "body": "I am on my way back from #pycon Namibia. This year, machine learning and data science were 2 important topics of  the event. I summarised here some interesting sessions that I could attend: [https://medium.com/ubuntu-ai/data-science-and-machine-learning-at-pycon-namibia-2023-dbf0990cee1d](https://medium.com/ubuntu-ai/data-science-and-machine-learning-at-pycon-namibia-2023-dbf0990cee1d)"}, {"title": "Serverless Private Network - 'My Intern Assignment - Call a Dark Webhook from AWS Lambda'", "score": 4, "id": "11arc9i", "url": "https://www.reddit.com/r/Python/comments/11arc9i/serverless_private_network_my_intern_assignment/", "comms_num": 3, "created": 1677245126.0, "body": "Our intern had a cool opportunity to learn Python, AWS Lambda, and OpenZiti to submit a webhook payload from an AWS lambda to a 'dark server'. \n\nEffectively we embedded a private overlay network into a serverless function using OpenZiti's Python SDK so that it could externally communicate to another server in another cloud without needing static IP, AWS Private Endpoint, VPN, public DNS or inbound ports.\n\n[https://openziti.io/my-intern-assignment-call-a-dark-webhook-from-aws-lambda](https://openziti.io/my-intern-assignment-call-a-dark-webhook-from-aws-lambda)\n\nCheck it out and give us any thoughts on how you would like us to experiment with the SDK by embedding it into other apps and functions!"}, {"title": "Master Pattern Matching In Python 3.10", "score": 4, "id": "11aqxm7", "url": "https://www.python-engineer.com/posts/pattern-matching-python/", "comms_num": 2, "created": 1677243883.0, "body": ""}, {"title": "Understanding Community Detection Algorithms With Python NetworkX", "score": 2, "id": "11aq8bt", "url": "https://memgraph.com/blog/community-detection-algorithms-with-python-networkx", "comms_num": 0, "created": 1677241657.0, "body": ""}, {"title": "For Python freelancers here, do you generate api keys for your clients or you ask your client to generate them and just instruct them to put where they need to be? I'm thinking if I create the api key it will be tied up to my developer account and so I have to make sure it does not get deleted.", "score": 22, "id": "11ampqm", "url": "https://www.reddit.com/r/Python/comments/11ampqm/for_python_freelancers_here_do_you_generate_api/", "comms_num": 13, "created": 1677228360.0, "body": ""}, {"title": "Fundamental code organisation?", "score": 0, "id": "11am6ig", "url": "https://www.reddit.com/r/Python/comments/11am6ig/fundamental_code_organisation/", "comms_num": 5, "created": 1677226262.0, "body": "Hey all, im a beginner python learner id say. Been using  it in an incredibly limited way for about a year in jupyter, mainly to organise and filter excel spreadsheets for work using pandas. \n\nAnyway ive recently decided to dive into the language to enable me to code properly and write actual  programs and scripts. \n\nThis may be a dumb question, but how do you, or what is the \"correct\" way of setting out your code within a program? For readability, easy modification and ease of running? \n\nCurrently i try to do the following:\n\nVariables (either empty to fill later, or set\nLists (either empty to fill later or set)\n\nThen\n\nFunctions which include data from those variables and lists\n\nThen the main code itself\n\nFollowed by a call to an \"ending\" function, which is usually just an option to restart the program or exit. \n\n\nIs this correct, or is there a standard way? \n\n\nIm currently working on a simple project for myself which moxes python and sql, and the code is starting to grow exponentially. :) \n\nThanks"}, {"title": "GitHub - RelationRx/pyrelational: pyrelational is a python active learning library for rapidly implementing active learning pipelines from data management, model development (and Bayesian approximation), to creating novel active learning strategies.", "score": 10, "id": "11am3ys", "url": "https://github.com/RelationRx/pyrelational", "comms_num": 0, "created": 1677225984.0, "body": ""}, {"title": "Core principles of readable code", "score": 13, "id": "11alop5", "url": "https://www.reddit.com/r/Python/comments/11alop5/core_principles_of_readable_code/", "comms_num": 4, "created": 1677224365.0, "body": "I'm trying to build special framework(just a set of principles) based on my experience working with code and figured out that some principles can be described through such terms:\n\nC - Cognitive Load  \nS - Shared Association  \nC - Chunking   \nS - Systematization  \n\n\nI'm still not sure how to explain what it exactly means, but ChatGTP helped me with this:  \n\n\n>Me:   \nDescribe readable code principles using neurophysiology and psychology  terms such as: 1. Cognitive load and The Magical Number Seven(reducing amount of code, keeping it simple) 2. Shared associations(flake8, good names, standards) 3. Chunking technique(splitting into files, modules, chunks) 4. Systematization(building logical system)  \n  \n>  \n>ChatGPT:  \n1. Cognitive load and The Magical Number Seven:  \n>  \n>The human brain has a limited capacity for processing information, known as cognitive load. When reading and understanding code, excessive complexity can overwhelm the brain and reduce comprehension. The Magical Number Seven refers to the approximate limit of information the brain can hold in working memory at one time. To reduce cognitive load, readable code should be designed to keep the amount of information presented to the user within this limit. This can be achieved by reducing the amount of code to its essential components and simplifying it to its most basic form. By doing so, the code can be easily understood and implemented by others.  \n>  \n>2. Shared associations:  \n>  \n>Readable code follows consistent naming conventions and coding standards to help users build shared associations between different parts of the code. This helps to reduce cognitive load by reducing the amount of mental effort required to understand the code. Consistent naming conventions also help to reduce the likelihood of errors and improve the maintainability of the code.  \n>  \n>3. Chunking technique:  \n>  \n>The human brain is capable of processing information more effectively when it is presented in smaller chunks. Readable code uses the chunking technique to break down large sections of code into smaller, more manageable parts. This can be achieved by splitting code into separate files, modules, or chunks. By doing so, the code becomes easier to understand and debug, and the cognitive load on the user is reduced.  \n>  \n>4. Systematization:  \n>  \n>The human brain is wired to understand and process information in a logical and structured way. Readable code uses systematization to organize code into a logical system that is easy to understand and navigate. This can be achieved by grouping related functions and variables together and organizing code into logical sections. By doing so, the code becomes more readable and easier to maintain over time.  \n\n\nI've created this image based on these ideas :  \n\n\nhttps://preview.redd.it/50lrwmtra3ka1.png?width=1920&format=png&auto=webp&v=enabled&s=85590feedd34752e2bb79237de05a52bf8f41c44\n\nHow can you describe readable code personally? What core principles you can distill?"}, {"title": "Web App Generation Feature Added to Pyxel, a Retro Game Engine for Python", "score": 13, "id": "11ajwv3", "url": "https://www.reddit.com/r/Python/comments/11ajwv3/web_app_generation_feature_added_to_pyxel_a_retro/", "comms_num": 3, "created": 1677217835.0, "body": "A function to automatically generate an application launch URL has been added to Pyxel, a retro game engine for Python ([https://github.com/kitao/pyxel](https://github.com/kitao/pyxel)  please add your star to this repository!).\n\nThis feature allows you to run Pyxel apps on GitHub right in your web browser.\n\nWhen you specify the URL of a .py file or .pyxapp file (Pyxel Application File) on GitHub that you want to launch on Pyxel Web Launcher page ([https://kitao.github.io/pyxel/wasm/launcher/](https://kitao.github.io/pyxel/wasm/launcher/)), the web version application launch URL is automatically created.\n\nHere are some examples of Pyxel apps for the web:\n\nPaseud 3D version of Fantasy Zone  \n[https://cobinee.github.io/sfz-pyxel/packages/](https://cobinee.github.io/sfz-pyxel/packages/)\n\nPyxel clone version of Baba Is You  \n[https://kitao.github.io/pyxel/wasm/launcher/?play=Fraser-Greenlee.baba-is-you.baba-is-you-game&gamepad=enabled](https://kitao.github.io/pyxel/wasm/launcher/?play=Fraser-Greenlee.baba-is-you.baba-is-you-game&gamepad=enabled)\n\nPyxel clone version of Dragon Warrior (sorry, its lang is Japanese)  \n[https://pyxel-dq1.web.app/?gamepad=enabled](https://pyxel-dq1.web.app/?gamepad=enabled)\n\nAnd hare are other example list:  \n[https://github.com/kitao/pyxel/wiki/Pyxel-User-Examples](https://github.com/kitao/pyxel/wiki/Pyxel-User-Examples)\n\nEnjoy!"}, {"title": "GitHub - neuml/txtchat: \ud83d\udcad Conversational search and workflows for all", "score": 11, "id": "11ahe5c", "url": "https://github.com/neuml/txtchat", "comms_num": 0, "created": 1677209621.0, "body": ""}, {"title": "I made a projectile motion simulator with Tkinter", "score": 239, "id": "11agy8n", "url": "https://www.reddit.com/r/Python/comments/11agy8n/i_made_a_projectile_motion_simulator_with_tkinter/", "comms_num": 49, "created": 1677208290.0, "body": "The project uses basic kinematic equations and provides a graphical representation of the projectile as it travels.\n\nI hope to expand it into a game where the objective is to hit a target on the ground with a random x-coordinate.\n\nThe window will automatically expand to accommodate the projectile if it moves out of the screen in the x-direction. However, for some reason I could not figure out how to make the canvas expand upwards to accommodate the projectile. So it just enters through the bottom of the screen once it leaves the upper boundary.\n\nThis was my first experience with Tkinter, and hopefully my last once I'm finished with the project.\n\nGitHub: [https://github.com/Himtome1/Fall-Time](https://github.com/Himtome1/Fall-Time)\n\nEdit: Added scaling so projectile always stays on screen:\n\nScaling:\n\n&#x200B;\n\nhttps://reddit.com/link/11agy8n/video/4yrk64nal1la1/player\n\nNo scaling:\n\nhttps://reddit.com/link/11agy8n/video/tcuv0sstg2ka1/player\n\n&#x200B;"}, {"title": "Xorbits 0.2.0 is now available \ud83d\ude80", "score": 5, "id": "11agesy", "url": "https://www.reddit.com/r/Python/comments/11agesy/xorbits_020_is_now_available/", "comms_num": 0, "created": 1677206678.0, "body": "Xorbits is a scalable Python data science framework that aims to scale the whole Python data science world.\n\nThe new version includes major user experience improvements for interactive execution and k8s deployment. \n\nCheck out the [release notes](https://xorbits.io/blogs/release-0.2.0) and try out the new version today:\n\n    pip install --upgrade xorbits"}, {"title": "Do you use any kind of mind-mapping software to diagram the inputs and outputs of your programs?", "score": 4, "id": "11af7za", "url": "https://www.reddit.com/r/Python/comments/11af7za/do_you_use_any_kind_of_mindmapping_software_to/", "comms_num": 12, "created": 1677203180.0, "body": "It seems like this would be a common practice, as a lot of programs and dashboards have structures that are a lot more complex than a single layer of inputs ---> function --> outputs. What do you use to visualize the overall structure of your program? I drew mine using shapes and arrows in Excel, which is cumbersome."}, {"title": "520 Malware Packages Published to PyPI in Ongoing Attack", "score": 0, "id": "11aempp", "url": "https://blog.phylum.io/phylum-discovers-another-attack-on-pypi", "comms_num": 8, "created": 1677201511.0, "body": ""}, {"title": "Creating A Boat In Block Scripting and Python", "score": 0, "id": "11adued", "url": "https://youtu.be/C1M_9djEKCc", "comms_num": 0, "created": 1677199300.0, "body": ""}, {"title": "SQL LOGIN INJECTION PYTHON", "score": 0, "id": "11abm5b", "url": "https://github.com/socialjack010/sql_injection_bruteforce_login", "comms_num": 1, "created": 1677193423.0, "body": ""}, {"title": "\ud83d\udc0d 5 Awesome Tools For Python Engineers EP 2", "score": 0, "id": "11ab4vz", "url": "https://link.medium.com/jbBnlMWdFxb", "comms_num": 0, "created": 1677192245.0, "body": ""}, {"title": "My new mini-library: methodic_cache", "score": 1, "id": "11a8fyt", "url": "https://www.reddit.com/r/Python/comments/11a8fyt/my_new_minilibrary_methodic_cache/", "comms_num": 2, "created": 1677185635.0, "body": "Hi everyone, I would like to share my new mini project called `methodic_cache`: https://github.com/youtux/methodic_cache\n\nIn a nutshell, `methodic_cache` is \"`functools.cache()` for methods, done correctly\".\n\nFrom the readme:\n\n>`methodic_cache.cached_method` is a decorator that caches the return value of a method, based on the arguments passed to it.  \n>  \n>The peculiarity of this library is that it does not store anything on objects themselves, but rather on a separate WeakKeyDictionary where the lifetime of the cache matches the lifetime of the object.  \n>  \n>An advantage of this approach over storing the cache on the object itself when needed is that objects will keep their memory footprint smaller thanks to shared key dictionaries. See [PEP 412](https://peps.python.org/pep-0412/) and [The Dictionary Even Mightier - Brandon Rhodes at PyCon 2017, 00:21:02](https://www.youtube.com/watch?v=66P5FMkWoVU&t=1262s) for more details.\n\nHere's an example usage:\n\n    from methodic_cache import cached_method\n    \n    \n    class MyClass:\n        @cached_method\n        def my_method(self, arg1, arg2):\n            return arg1 + arg2\n    \n    \n    my_obj = MyClass()\n    my_obj.my_method(1, 2)  # returns 3\n    my_obj.my_method(1, 2)  # returns 3 from the cache\n\nI appreciate any feedback!"}, {"title": "Create Access Control in Your Flask Application using Flask-login & Permify", "score": 2, "id": "11a8fx2", "url": "https://www.permify.co/post/create-robust-access-control-in-your-flask-application-using-flask-login-permify", "comms_num": 0, "created": 1677185632.0, "body": ""}, {"title": "A quick guide to using mamba-forge for python virtual environment management", "score": 71, "id": "11a7nur", "url": "https://github.com/Paradoxdruid/mamba-how-to", "comms_num": 16, "created": 1677183709.0, "body": ""}, {"title": "Has there ever been an instance in the past where a rejected PEP was eventually accepted?", "score": 14, "id": "11a74tl", "url": "https://www.reddit.com/r/Python/comments/11a74tl/has_there_ever_been_an_instance_in_the_past_where/", "comms_num": 7, "created": 1677182445.0, "body": "I'm thinking if it's possible to re-propose a PEP, because maybe the community's opinions have changed and that PEP makes sense now.\n\n&#x200B;\n\nSpecifically,  I really liked [PEP-677 - Callable Type Syntax](https://peps.python.org/pep-0677/), and rejection comments 1 and 3 ([here](https://mail.python.org/archives/list/python-dev@python.org/message/NHCLHCU2XCWTBGF732WESMN42YYVKOXB/)) talk about the challanges of adding new syntax. I can imagine a future where python syntax evolves and in that environment maybe it makes more sense to include a new callable type syntax.\n\n&#x200B;\n\nIs there in python history a precedent of this? where a PEP was first rejected, then the council (or maybe guido?) reconsidered and evetually the PEP got accepted?"}, {"title": "Best websites to give me tasks?", "score": 32, "id": "11a6hto", "url": "https://www.reddit.com/r/Python/comments/11a6hto/best_websites_to_give_me_tasks/", "comms_num": 29, "created": 1677180870.0, "body": "I\u2019m a gcse student and was wondering if there were websites which give you made up \u201ctask\u201d or \u201cprojects\u201d to create in python to try and level up my skills? Thanks!"}, {"title": "Structured and Opinionated FastAPI Boilerplate", "score": 5, "id": "11a68p8", "url": "https://www.reddit.com/r/Python/comments/11a68p8/structured_and_opinionated_fastapi_boilerplate/", "comms_num": 1, "created": 1677180249.0, "body": "Hey guys! I tried to implement a well structured boilerplate for FastAPI following the MVC pattern. I added basic things like Migrations, Async, Row level security and infrastructure for testing. Any comments or Feedback is appreciated. \n\n[https://github.com/OysterHQ/FastAPI-Production-Boilerplate](https://github.com/OysterHQ/FastAPI-Production-Boilerplate)"}, {"title": "Build dbt Python models in Snowflake, Datatricks, and BigQuery", "score": 5, "id": "11a44gw", "url": "https://www.datafold.com/blog/dbt-python", "comms_num": 0, "created": 1677175153.0, "body": ""}, {"title": "Natural Python is an LLM REPL which is an intermediary between you (who speaks in natural language) and the computer (who speaks Python).", "score": 0, "id": "11a2piq", "url": "https://gitlab.com/da_doomer/natural-python", "comms_num": 0, "created": 1677171748.0, "body": ""}, {"title": "Appending to an empty list vs creating a new Pandas column", "score": 1, "id": "11a0owx", "url": "https://www.reddit.com/r/Python/comments/11a0owx/appending_to_an_empty_list_vs_creating_a_new/", "comms_num": 3, "created": 1677166878.0, "body": "Why would someone choose to run a loop on a dataframe and assign values to a separate list vs creating a new column in the existing dataframe to capture the same data?\n\nI'm relatively new to Python and am taking several online courses to help build my knowledge. In one example project, I was given a dataframe that contained movie title, duration, and genre. I was then tasked with writing a loop that uses itterrows() to assign a color to each movie based on genre. The color is then appended to a  list and not to a new column.\n\nIs there any practical reason for using a list? Or is just an example of a course asking the student to do it in a specific way just to practice/build skills?"}, {"title": "If you are interested in APIs, this article is for you. I demystify the legend of creating an API using Django Rest Framework.", "score": 0, "id": "119ym8p", "url": "https://medium.com/@jawad751/how-to-create-a-restful-api-part-1-dce44a06f63b", "comms_num": 1, "created": 1677161387.0, "body": ""}, {"title": "Intermediate Python Devs to Workshop Textbook", "score": 4, "id": "119xx2w", "url": "https://www.reddit.com/r/Python/comments/119xx2w/intermediate_python_devs_to_workshop_textbook/", "comms_num": 0, "created": 1677159482.0, "body": "Hi Pythonistas,\n\nI'm looking to connect with a few intermediate-level developers, Ideally in the US Pacific timezone, who would be willing to help me workshop some of the more technical portions of a [Python Textbook](https://leanpub.com/zero-to-py/) that I'm self-publishing. Just hoping to get different perspectives on how it reads, see what works and what doesn't.\n\nIf interested, feel free to DM! \n\np.s. doing a giveaway on [twitter](https://twitter.com/1mikegrn/status/1627694542706319363) if anyone wants to try and get a free copy!"}, {"title": "Elixir for Humans Who Know Python", "score": 23, "id": "119xok7", "url": "https://hibox.live/elixir-for-humans-who-know-python", "comms_num": 17, "created": 1677158831.0, "body": ""}, {"title": "Bash vs. Python: For Modern Shell Scripting", "score": 0, "id": "119x3dx", "url": "https://levelup.gitconnected.com/bash-vs-python-for-modern-shell-scripting-c1d3d79c3622?sk=0a8ea9b2ebc5e413072d26a94f40fbc6", "comms_num": 1, "created": 1677157128.0, "body": ""}, {"title": "The Terminal: First Steps and Useful Commands", "score": 0, "id": "119vmnu", "url": "https://realpython.com/terminal-commands/", "comms_num": 1, "created": 1677152334.0, "body": ""}, {"title": "Divide and Conquer: Fibonacci Search | Programming Algorithm", "score": 3, "id": "119u5w4", "url": "https://medium.com/@tudorache.a.bogdan/divide-and-conquer-fibonacci-search-2887884410d0", "comms_num": 0, "created": 1677146843.0, "body": ""}, {"title": "Why are Unit Test important?", "score": 4, "id": "119txri", "url": "https://www.reddit.com/r/Python/comments/119txri/why_are_unit_test_important/", "comms_num": 24, "created": 1677145981.0, "body": "Hey, I'm one of those who thinks Unit Tests are useless; however, I say this from the highest point of Dunning-Kruger and the utter lack of experience with the concept, having never used them before. Please share your favorite applications of it and any tips you have for getting started with it right away."}, {"title": "Superpower Your Classes Using Super() In Python", "score": 0, "id": "119t35i", "url": "https://www.reddit.com/r/Python/comments/119t35i/superpower_your_classes_using_super_in_python/", "comms_num": 12, "created": 1677142672.0, "body": "&#x200B;\n\nhttps://preview.redd.it/ck9v5eps9yja1.png?width=1600&format=png&auto=webp&v=enabled&s=e8c0a1eef4d46436f854b0863b6ac8144656a446\n\nPython has an excellent function called `super()` that allows the parent class's attributes and methods to be fully accessible within a subclass.\n\nThe `super()` function extends the functionality of the superclass within the subclass or derived class. Assume we created a class and wanted to extend the functionality of a previously created class within that specific class; in that case, we'll use the `super()`function.\n\n**Here's a guide to implementing the** `super()` **function within the classes in Python\ud83d\udc47\ud83d\udc47**\n\n[Superpower Your Classes Using Super() In Python](https://geekpython.in/super-in-python)"}, {"title": "Guitar chord generator using Python", "score": 257, "id": "119sybf", "url": "https://www.reddit.com/r/Python/comments/119sybf/guitar_chord_generator_using_python/", "comms_num": 26, "created": 1677142150.0, "body": "For the last few days I've been working on a hobby project to create a guitar chord generator so that I can easily find and visualise all the different variants of how a chord can be played.\n\nThe way it works is that you can simply input a string of a chord name, for example \"Am\" and it will produce a number of plots showing various ways it can be played.\n\nIt is now in the initial functional state. There are still some improvements I'd like to make in the coming days:\n\n* Still need to figure out how to generate barre chords\n* Need to add correct naming to chord variations\n\nIf interested, I wrote a post about it on Medium:\n\n[https://medium.com/@pavelcherepansky/guitar-chord-generator-using-python-bb123294b550](https://medium.com/@pavelcherepansky/guitar-chord-generator-using-python-bb123294b550)\n\nAnd if you want to play with it or use for your own projects, the code is available on GitHub:\n\n[https://github.com/pavelcherepan/chord\\_visualisation](https://github.com/pavelcherepan/chord_visualisation)"}, {"title": "Doggy64, Encode arbitrary data into dog sounds, instead of boring Base64", "score": 137, "id": "119r10f", "url": "https://www.reddit.com/r/Python/comments/119r10f/doggy64_encode_arbitrary_data_into_dog_sounds/", "comms_num": 26, "created": 1677134949.0, "body": "Doggy64 can encode arbitrary text or data into a series of doggy sounds\n\nFor example, \"Hello world!\" becomes:\n\n>howl arrrrf blat moan rrrr arrrrf yarf grrr rrrrr chew yarr sniffle rrrr arrrrf yaff grr  \n \n\nThis works by mapping the base64 character set to a number of dog noises.  \n\n\nA huge advancement in dog-based encoding technology, this is much more space efficient, and even a little bit faster than doggy morse code I just made a day or two ago, with the added benefit of being able to encode more than just text strings.  \n\n\n[https://github.com/Trainraider/doggy64](https://github.com/Trainraider/doggy64)"}, {"title": "Projects you've done", "score": 72, "id": "119qhib", "url": "https://www.reddit.com/r/Python/comments/119qhib/projects_youve_done/", "comms_num": 18, "created": 1677133091.0, "body": "Hi \ud83e\udd19,\n\nNormally, when I'm out of ideas of things to code, I come to Reddit and look into different subreddits until an idea pops up and then start working on it. Just so other people can do the same if they'd like to, and so I can do it too without having to look for a long time, I invite you all to list some of the projects you've done(doesn't matter if they're quite advanced, that way I could learn more while doing that project)\n\nHere's my list:\n\n* A program that shows the Astronomy Picture of the Day for a given date using Pillow and one of [NASA APIs](https://api.nasa.gov/)\n* A web scraper that gets the price, author and cover for a book given its name(it scrapes [https://www.bookdepository.com/es](https://www.bookdepository.com/es/) and uses BeautifulSoup)\n* A program that makes a heatmap(like the one below) showing some data(danceability, energy, liveness, etc) for a given group of songs(in this case its the top 10 songs of El Cuarteto de Nos, a Uruguayan band), it could be the songs of a playlist or the songs you've heard the most on Spotify(this was sone using [Spotipy](https://spotipy.readthedocs.io/en/2.22.1/), Pandas and Seaborn, but you could use the Spotify API instead of Spotipy)\n\nhttps://preview.redd.it/xveslqi3qvja1.png?width=1398&format=png&auto=webp&v=enabled&s=5e6b61dcc6ed6f028f9dd6b7aa79490efa345a86\n\nI haven't done anything complex, but I expect to make more advanced things in the future"}, {"title": "How can I get out of the tutorial loop?", "score": 46, "id": "119q1km", "url": "https://www.reddit.com/r/Python/comments/119q1km/how_can_i_get_out_of_the_tutorial_loop/", "comms_num": 45, "created": 1677131658.0, "body": "I have the feeling that I know nothing, and I'm going from tutorial to tutorial. Please help"}, {"title": "SimplePyBLE v0.6.0 - Cross-platform Bluetooth library for Python", "score": 6, "id": "119phnv", "url": "https://www.reddit.com/r/Python/comments/119phnv/simplepyble_v060_crossplatform_bluetooth_library/", "comms_num": 0, "created": 1677129858.0, "body": "Hey everybody!\n\nIt's been 5 months since the last SimplePyBLE release, so I'm here to share what's new on [SimplePyBLE](https://pypi.org/project/simplepyble/)!\n\nFor those who don't know about the project, SimplePyBLE contains the Python bindings for [SimpleBLE](https://github.com/OpenBluetoothToolbox/SimpleBLE), a cross-platform Bluetooth library specifically designed for use in desktop environments with a very simple API, allowing developers to easily integrate it into their projects without much effort.\n\n**TL;DR I'd like more people to use the library, any publicity or GitHub stars are welcome. I'm also looking for devs who'd be interested in helping to extend the library into other languages or platforms as well as improving documentation and examples. I'd be more than happy to mentor junior devs.**\n\nNotable additions include support for advertised services and transmit power information, exposing properties of GATT characteristics, and the ability to retrieve the MTU value of an established connection. Lots of bugs have been fixed, including race conditions, missing function definitions, and other issues on MacOS, Windows, and Linux platforms. You can find more information in the [SimpleBLE v0.6.0 Changelog](https://github.com/OpenBluetoothToolbox/SimpleBLE/releases/tag/v0.6.0).\n\nI'm currently looking to reach out to more people and companies working on Bluetooth who would be interested in using SimplePyBLE as well as volunteers who'd want to write tutorials, improve documentation (which is still very minimal, sorry) or contribute new features.\n\nFinally, in case anybody wants to reach out, you can find me on [Twitter](https://twitter.com/kevindewald), [LinkedIn](https://www.linkedin.com/in/kevindewald/) or on the projects [Discord](https://discord.com/invite/N9HqNEcvP3) server.\n\nThanks for the attention!"}, {"title": "Roadmpa to become a Python backend developer", "score": 0, "id": "119nnnk", "url": "https://www.reddit.com/r/Python/comments/119nnnk/roadmpa_to_become_a_python_backend_developer/", "comms_num": 18, "created": 1677124336.0, "body": ""}, {"title": "How different is type-casting to type conversion by functions?", "score": 4, "id": "119med4", "url": "https://www.reddit.com/r/Python/comments/119med4/how_different_is_typecasting_to_type_conversion/", "comms_num": 4, "created": 1677120852.0, "body": "What are the technical differences between converting types using the type casting operator found in many C-Like languages, and type conversion using functions such as str() and int() in python?"}, {"title": "Thursday Daily Thread: Python Careers, Courses, and Furthering Education!", "score": 2, "id": "119ichh", "url": "https://www.reddit.com/r/Python/comments/119ichh/thursday_daily_thread_python_careers_courses_and/", "comms_num": 0, "created": 1677110409.0, "body": "Discussion of using Python in a professional environment, getting jobs in Python as well as ask questions about courses to further your python education!\n\n**This thread is not for recruitment, please see** r/PythonJobs **or the thread in the sidebar for that.**"}, {"title": "Dis This: Disassemble Python code online", "score": 15, "id": "119i4dm", "url": "https://blog.pamelafox.org/2023/02/dis-this-disassemble-python-code-online.html", "comms_num": 0, "created": 1677109779.0, "body": ""}, {"title": "Managing Python dependency versions for web projects", "score": 1, "id": "119i3ok", "url": "https://blog.pamelafox.org/2023/02/managing-python-dependency-versions-for.html", "comms_num": 0, "created": 1677109731.0, "body": ""}, {"title": "I made a subreddit where a bot posts chess openings every 8 hours", "score": 6, "id": "119ht5z", "url": "https://www.reddit.com/r/Python/comments/119ht5z/i_made_a_subreddit_where_a_bot_posts_chess/", "comms_num": 0, "created": 1677109026.0, "body": "Subreddit: /r/chessopeningtheory/\n\nGithub: https://github.com/sgriffin53/reddit_openingtheory\n\nI've made a bot that posts to that subreddit once every eight hours. It'll post a thread with an random opening line, the name of the opening, and a description of the opening from the wiki, as well as links to the lichess analysis board, the wiki page, and historical games featuring that opening.\n\nIt also chooses a new main opening line every week, and posts a line from that opening throughout the week along with the random posts.\n\nI figured it might be a useful way to learn openings by learning a few a day.\n\nThe bot's has been running for a few days now and posts new openings once every eight hours.\n\nLet me know what you think and if you think it might be useful."}, {"title": "Spacesay - Inspired by cowsay but with space and the ISS", "score": 4, "id": "119b2sf", "url": "https://www.reddit.com/r/Python/comments/119b2sf/spacesay_inspired_by_cowsay_but_with_space_and/", "comms_num": 2, "created": 1677097085.0, "body": "A small CLI tool inspired by cowsay, you can either have it tell you where the ISS is located or repeat what you say. \n\nI built it using Typer and a couple of APIs. \n\nSource: https://github.com/AlgorithmEnigma/spacesay"}, {"title": "static-sox: Easily deploy Sox (audio manipulation) binaries for Mac/Win/Ubuntu", "score": 1, "id": "119b1an", "url": "https://www.reddit.com/r/Python/comments/119b1an/staticsox_easily_deploy_sox_audio_manipulation/", "comms_num": 0, "created": 1677097019.0, "body": "This library will be of interest for people wanting to use audio manipulation in their python projects, and have it available in a cross platform way. `Sox` is a useful library for audio manipulation functions like noise removal, audio compression, limiting, normalization and EQ rebalancing.\n\nHowever, creating tools based on Sox requires that the user perform the extra step of installing Sox themselves, making tools based on this programming more challenging to install.\n\n`static-sox` solves this issue by downloading binaries from a git repo  (and adding the proper paths for libs on linux) so the tool becomes available for cross platform python apps.\n\nThe motivation for this tool was so that I could improve my audio/video apps with noise removal, such as `ytclip` and `transcribe-anything`\n\nYou can install it with `pip install static-sox` and then access `sox` by using `static_sox` in the command line, or using `static_sox.add_paths()` in your python code.\n\n[https://github.com/zackees/static-sox/](https://github.com/zackees/static-sox/)\n\n[https://pypi.org/project/static-sox/](https://pypi.org/project/static-sox/)"}, {"title": "[WIP] drag\u2019n drop GUI builder in VS Code", "score": 8, "id": "1199yxn", "url": "https://youtu.be/orSKkQzV3TQ", "comms_num": 6, "created": 1677095542.0, "body": ""}, {"title": "Book or web book recommendation request: a data visualization cookbook using Python for scientists.", "score": 21, "id": "1197mc4", "url": "https://www.reddit.com/r/Python/comments/1197mc4/book_or_web_book_recommendation_request_a_data/", "comms_num": 10, "created": 1677091524.0, "body": "My partner is  scientist who occasionally uses R to make data visualizations for scientific papers and publications. (She does all her actual data analysis in other programs, such as Stata). The big draw of R is that there are a lot of decent-quality code samples out there showing how to make various visualizations with ggplot and other popular and high-qualty R libraries.\n\nHowever, with any software package comes a learning curve and troubleshooting process, which can be pretty painful with R. I am a software developer who's pretty proficient with Python, so while I am usually able to help, it would save us both a lot of time if we were getting these code samples in the form of pandas & matplotlib scripts instead of R & ggplot.\n\nDo you have a python data visualization cookbook in your bookmarks? Googling this topic surfaces a few things, but I'm especially curious if you have a good resource that works well for scientific results."}, {"title": "I wrote a script to improve my typing speed by recommending shortcuts from my AutoHotKey script, it also creates and add new shortcuts if a word is used frequently enough.", "score": 32, "id": "1195shk", "url": "https://www.reddit.com/r/Python/comments/1195shk/i_wrote_a_script_to_improve_my_typing_speed_by/", "comms_num": 8, "created": 1677087306.0, "body": "For my job, I do audio transcription, typing recorded interviews into text documents. So, the faster I can type, the more I can keep up with the recording and the more money I'll be making per hour.\n\nI've been using an AutoHotKey script to autocomplete words for faster typing, so I can type \"cs\" instead of \"because\" or \"sth\" instead of \"something\" to save time.\n\nI managed to memorise a lot of it just by trial and error, but I knew I wasn't getting the most out of the script because there were a lot of entries I didn't know the abbreviations for.\n\nI wrote this script that tracks what I'm typing, and if I type a word that's in the dictionary in full, it'll suggest the shortcut to me. So if I type \"something\", it'll suggest I use the shortcut \"sth\". This has helped me learn a lot more shortcuts.\n\nI've just added a feature where it tracks the last 500 words I've typed, and if any of the top 5 words aren't in the dictionary, it creates a new shortcut and adds it to the dictionary for me. For example, it noticed I used the word \"think\" a lot but it wasn't in the dictionary, so it created the shortcut \"tn\" for think and added it to the dictionary.\n\nI'm hoping this will create a lot more abbreviations for me to use and increase my typing speed.\n\nScreenshot:https://i.imgur.com/f6sFBTa.png\n\nGithub: https://github.com/sgriffin53/shortcut_suggest\n\nAs you can see in the screenshot, it added new entries for \"never\", \"think\", and \"around\".\n\nI'm not sure if anyone here will find this useful but I wanted to show it off as I found it quite a useful project.\n\nEdit: I just used it while transcribing for an hour and 20 minutes, and it added 50 new entries in that time. It added \"pn\" for pandemic which was really useful since a lot of the interviews talk a lot about COVID.\n\nEdit: I had the great idea of making it add shortcuts for every English word over a certain word frequency. The result is the dictionary has gone from 727 entries to over 7500 entries. I typed up a few minutes of an interview and made it track how many character's I'd save if I used every shortcut, and I'd save 18% of the typed characters (892/4927) if I was using every shortcut available."}, {"title": "QualityScaler & RealScaler 11.0 | image/video AI upscaler apps", "score": 0, "id": "1194qsk", "url": "https://www.reddit.com/r/Python/comments/1194qsk/qualityscaler_realscaler_110_imagevideo_ai/", "comms_num": 0, "created": 1677084833.0, "body": "&#x200B;\n\nhttps://preview.redd.it/j85ahlsmsrja1.png?width=1539&format=png&auto=webp&v=enabled&s=5cfd65fcf186a4b257537f75d8227b0848a101da\n\nhttps://preview.redd.it/6gzmsagnsrja1.png?width=1585&format=png&auto=webp&v=enabled&s=0303f4eb90047e8d1e9dfe674100cb12ec62af08\n\n# QualityScaler.\n\n* [https://jangystudio.itch.io/qualityscaler](https://jangystudio.itch.io/qualityscaler)\n* [https://github.com/Djdefrag/QualityScaler](https://github.com/Djdefrag/QualityScaler)\n\n# RealESRScaler.\n\n* [https://jangystudio.itch.io/realesrscaler](https://jangystudio.itch.io/realesrscaler)\n* [https://github.com/Djdefrag/RealESRScaler](https://github.com/Djdefrag/RealESRScaler)\n\n# Changelog 11.0 \n\n# NEW\n\n* Added a description for each widget, accessible via special button next to each widget\n* When selecting 100% as Input Resolution, resizing phase will be skipped (for videos)\n* Input Resolution widget will now accept values > 100%\n   * images and video frames can be upscaled before passing through AI\n   * this may improve the upscale quality\n   * for example, an image 100x100px\n   * with Input Resolution 200% and any AI model \\*x4\n   * 100x100 > 200x200 > 800x800\n\n### BUGFIX / IMPROVEMENTS\n\n* Fix reading and writing images with nonascii characters in filepath. Thanks [@jaycalixto](https://github.com/jaycalixto) \u2764\n* Fixed a bug that did not allow resources to be released upon upscale failure\n* Updated external packages:\n   * Python 3.10.9 > 3.10.10\n   * pytorch 1.13 > 1.13.1\n   * torchdirectml 1.13 > 1.13.1\n   * and others...\n* Code cleaning and improvements\n\n### GUI\n\n* Removed \"Options\" button\n* Some little changes"}, {"title": "Users of pre-commit, do you install it globally or per project?", "score": 2, "id": "1194pea", "url": "https://www.reddit.com/r/Python/comments/1194pea/users_of_precommit_do_you_install_it_globally_or/", "comms_num": 9, "created": 1677084740.0, "body": "I know that Python dependency and environment management is a messy topic, so not trying to start any flame wars or anything, just looking for practical advice.\n\nMy usual tooling is \n- `asdf` to install different versions of Python\n- `poetry` for project management\n- `pipx` for CLI tools written in Python that are useful in general and aren\u2019t a dependency on a project\n\n[This article](https://mitelman.engineering/posts/python-best-practice/automating-python-best-practices-for-a-new-project/) seems to have very solid advice overall, but I am unsure if installing `pre-commit` per project is the best way. \n\nIn other words, is poetry or pipx ideal for pre-commit?\n\nI realize that everyone will have different needs and preferences, so curious what the community thinks.\n\nEdit: to the downvoters, can you kindly drop a comment why you think this is a stupid question?"}, {"title": "[Update] Super Protocol Python Competition. Build an ML Solution", "score": 6, "id": "118z6zg", "url": "https://www.reddit.com/r/Python/comments/118z6zg/update_super_protocol_python_competition_build_an/", "comms_num": 1, "created": 1677073310.0, "body": "[Our Python competition](https://github.com/Super-Protocol/py_competition/blob/main/README.md) is getting an extension! We want to make sure that each objective has at least 5 teams to complete, so we're giving everyone one more month to gather their teams. Since there are already a couple of results from participants, it is critically important to give PythonCompetition a bit more time. This means that:\n\nRegistration is open until March, 1st, 2023\n\nNew Results Submission Deadline: April 15th\n\nNew Competition End date: May 1st\n\nDon't miss out on this chance to show off your Python skills!  \n\nAll the changes have been applied to [the Guide](https://github.com/Super-Protocol/py_competition), where you can find the registration link as well"}, {"title": "Spent Months Writing A Web Dev Course For A Platform, But It Got Canceled Midway. Publishing It Free For The Community.", "score": 1505, "id": "118ynyy", "url": "https://leanpub.com/c/flask-masterclass", "comms_num": 93, "created": 1677072374.0, "body": ""}, {"title": "Short and neat Python interfaces and APIs", "score": 6, "id": "118upit", "url": "https://www.reddit.com/r/Python/comments/118upit/short_and_neat_python_interfaces_and_apis/", "comms_num": 0, "created": 1677061386.0, "body": "Hi guys, I've got a short post on interfaces (as in API) design in Python.\n\nBasically, after seeing many interfaces in my career, I feel that simply minimizing interface size in terms of the number of methods is a **good proxy** for getting a well-designed API. Why are short interfaces better?\n\n* They decouple parts of your codebase (while the large ones have a high chance of coupling unrelated parts). This in turn decouples company workflows (e.g. teams don't break each other's stuff too much)\n* You don't have to write many implementations when instantiating a short interface. This ripples through your design because now you more easily avoid base classes and class hierarchies. Which in turn promotes composition over inheritance (there are many resources on why it's a good idea, e.g. see [here](https://stackoverflow.com/questions/49002/prefer-composition-over-inheritance))\n* You would be able to reuse small interfaces in more places than large ones. This in turn makes the total surface area of APIs in your codebase smaller, easier to learn with simpler onboarding\n\nObviously, a short interface is not sufficient for a good design. But having this goal in mind, I collected several common and simple things to watch out for in order to decrease interface surface area [in this post.](https://betterprogramming.pub/neat-python-interface-e1371de63406)\n\nWhat do you think?"}, {"title": "Robyn Framework", "score": 0, "id": "118tsl3", "url": "https://www.reddit.com/r/Python/comments/118tsl3/robyn_framework/", "comms_num": 7, "created": 1677057955.0, "body": "Hey guys, I hope you all are good. I wanted to know about new Python Framework Robyn by sanskar. Can somebody tell me its pros and cons. I kinda not able to find much about Robyn.  So I am asking here."}, {"title": "Comparing the performances of different codes", "score": 4, "id": "118tfks", "url": "https://www.reddit.com/r/Python/comments/118tfks/comparing_the_performances_of_different_codes/", "comms_num": 3, "created": 1677056538.0, "body": "Basically, I\u2019ve got 8 different python code files, all the exact same, except each of them have different parameters for certain functionalities. I have to measure the performance of each of these files and compare how the different parameters impact it. I\u2019ve already measured the execution time, CPU usage and RAM usage. Any other ways I can compare the performance of each of these files.\n\nFor context if anyone\u2019s interested. I\u2019m working with a Ring-Learning with errors python algorithm and each file uses different values for the key length and key modulus. I have to measure how, even though higher parameter values will give better security, it will impact the performance of the algorithm, I.e., increased execution time and memory usage. I\u2019ve already measured both of these, just wondering if there\u2019s any other areas I can measure."}, {"title": "PythonRP - Creating custom rich presences with Python & Pypresence.", "score": 2, "id": "118qtzi", "url": "https://www.reddit.com/r/Python/comments/118qtzi/pythonrp_creating_custom_rich_presences_with/", "comms_num": 0, "created": 1677046746.0, "body": "I know a ton of these probably already exists but I didn't  really find one for python so I made it anyways just for fun and released it because why not. Feedback would be nice I guess. I apologize if my code isn't exactly as you expected.. I tried my best though.\n\n[https://github.com/ItzBlueBerries/PythonRP](https://github.com/ItzBlueBerries/PythonRP)"}, {"title": "The Power of Research in Software Engineering: Why Every Developer Should Make It a Priority", "score": 0, "id": "118oxd3", "url": "https://www.reddit.com/r/Python/comments/118oxd3/the_power_of_research_in_software_engineering_why/", "comms_num": 3, "created": 1677040338.0, "body": "Attention all developers! \ud83d\udce3 Check out my latest blog post on the power of research in software engineering and why it should be a top priority for all devs. \ud83d\udd0d\ud83d\udcbb Discover the benefits, challenges, and practical tips for integrating research into your workflow. \ud83e\udd13 **#softwareengineering** **#research** **#developers**"}, {"title": "Seeking advice on how to incorporate python into cybersecurity?", "score": 0, "id": "118omwj", "url": "https://www.reddit.com/r/Python/comments/118omwj/seeking_advice_on_how_to_incorporate_python_into/", "comms_num": 7, "created": 1677039430.0, "body": "I know it's been done but kind of looking for a road map or path. I hope to transition from SOC Analyst to a engineer in about 6 months to a year but I feel lost on how to approach this. Thanks in advance."}, {"title": "quickindex, a simple way to index python lists", "score": 1, "id": "118jlrl", "url": "https://www.reddit.com/r/Python/comments/118jlrl/quickindex_a_simple_way_to_index_python_lists/", "comms_num": 0, "created": 1677024849.0, "body": "I used to manipulate a lot of video annotation data, which is essentially just lists of bounding boxes with various attributes. The classes, TreeIndex and FlatIndex published in this package helped me quickly re-index the bounding boxes for fast look-ups. I hope someone finds them useful.\n\n[https://pypi.org/project/quickindex/1.1.0/](https://pypi.org/project/quickindex/1.1.0/)"}, {"title": "Wednesday Daily Thread: Beginner questions", "score": 1, "id": "118ja2e", "url": "https://www.reddit.com/r/Python/comments/118ja2e/wednesday_daily_thread_beginner_questions/", "comms_num": 0, "created": 1677024010.0, "body": "New to Python and have questions? Use this thread to ask anything about Python, there are no bad questions!\n\nThis thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response."}, {"title": "Finished Automate the Boring Stuff with Python", "score": 297, "id": "118gw2q", "url": "https://www.reddit.com/r/Python/comments/118gw2q/finished_automate_the_boring_stuff_with_python/", "comms_num": 82, "created": 1677018008.0, "body": "What should I do next? Looking for some recommendations."}, {"title": "Crypt Keeper - New Tool I wrote. Feedback welcome.", "score": 0, "id": "118es48", "url": "https://www.reddit.com/r/Python/comments/118es48/crypt_keeper_new_tool_i_wrote_feedback_welcome/", "comms_num": 1, "created": 1677012889.0, "body": "I needed a method of providing a secret to my application servers, and absolutely do not want to leave the password on the filesystem for a server that is reachable over the internet.  I wrote this small api to provide that secret in a secure manner.  The way it works, you provider it a one time pass code that is tied to your user account.  If successful, the api will allow passwords to be pulled to a select list of servers for a period of 5 minutes.  After 3 failed attempts, the api will lock itself for an hour.  \n\n\nWould love to get some feedback.  Did I leave any important security gaps?  Do you find this useful?  Do you have other suggestions?\n\n  \nRepo available [here](https://github.com/TheMorphium/crypt_keeper)."}, {"title": "I made a dog morse code language", "score": 28, "id": "118df1f", "url": "https://www.reddit.com/r/Python/comments/118df1f/i_made_a_dog_morse_code_language/", "comms_num": 10, "created": 1677009188.0, "body": "https://github.com/Trainraider/doggymorse\n\nThis program can encode ordinary text into a variant of morse code expressed with barking.\n\nFor example, \"Hello world!\" becomes:\n\nbork bork bork bork ruff bork ruff bork baaark bork bork  ruff bork baaark bork bork ruff baaark baaark baaark ruff ruff bork  baaark baaark ruff baaark baaark baaark ruff bork baaark bork ruff bork  baaark bork bork ruff baaark bork bork ruff baaark bork baaark bork  baaark baaark ruff"}, {"title": "How do you make code make sense?", "score": 11, "id": "118de2j", "url": "https://www.reddit.com/r/Python/comments/118de2j/how_do_you_make_code_make_sense/", "comms_num": 46, "created": 1677009083.0, "body": "I am a graduate researcher and I'm interested in understanding how people interact with code. I am interested in developing methods to make code base interpretation more intuitive with a host of home-brew Python packages but want some initial hypothesis testing when deciding for the correct method to approach this problem. Let me know if you have ideas on how I can approach this issue. Thanks y'all!"}, {"title": "Cool Browser-Based Python Data Computing Tool", "score": 2, "id": "118cl45", "url": "https://www.reddit.com/r/Python/comments/118cl45/cool_browserbased_python_data_computing_tool/", "comms_num": 1, "created": 1677004664.0, "body": "Hi,  \n   I've opened up my new Python tooling/platform for free use. Code Python right in your browser, create data transformation flows, invoke various APIs, etc.\n\nLet me know what you think!\n\n[https://elasticcode.ai](https://elasticcode.ai)\n\nEnjoy!"}, {"title": "[D] Python-Based virtual assistant capable of calling APIs", "score": 1, "id": "118bf6g", "url": "https://www.reddit.com/r/Python/comments/118bf6g/d_pythonbased_virtual_assistant_capable_of/", "comms_num": 0, "created": 1677001842.0, "body": "Hey, Pythoneers\n\nI hope you don't have a little bit of promotion. I've created a Chrome extension bot that replicates the recent toolformer idea from Meta AI:  \n\n\nHere's the link on Reddit that describes the idea well  \n[https://www.reddit.com/r/MachineLearning/comments/110s8ui/r\\_n\\_toolformer\\_language\\_models\\_can\\_teach/](https://www.reddit.com/r/MachineLearning/comments/110s8ui/r_n_toolformer_language_models_can_teach/)\n\n&#x200B;\n\nAnd here's the link to my bot:\n\n[https://chrome.google.com/webstore/detail/regis/lmmpjdfangjdaligcohaohlbpfaookpc](https://chrome.google.com/webstore/detail/regis/lmmpjdfangjdaligcohaohlbpfaookpc)  \n\n\n1. It's free;\n2. I'm not going to track any of your data except emails (Google would notify you about that)\n3. I'm looking to understand what people would ask from this bot and what they would use it for;\n\nThe last one is the most important"}, {"title": "WebApp that creates an ASCII ART of an image.", "score": 2, "id": "118bdhf", "url": "https://www.reddit.com/r/Python/comments/118bdhf/webapp_that_creates_an_ascii_art_of_an_image/", "comms_num": 0, "created": 1677001727.0, "body": "&#x200B;\n\n[Sample Image](https://preview.redd.it/udpom68h1lja1.png?width=1233&format=png&auto=webp&v=enabled&s=4daccde47ab0a8406e69693ca66b145aa7ce3815)\n\nSite - [aho.pythonanywhere.com](https://aho.pythonanywhere.com)\n\nI just started learning Flask and wanted to build something. It uses PIL module to create the image."}, {"title": "In what ways if you know just python can earn you money and what other skill can you learn to complement python and open more doors for you?", "score": 0, "id": "118a7wt", "url": "https://www.reddit.com/r/Python/comments/118a7wt/in_what_ways_if_you_know_just_python_can_earn_you/", "comms_num": 2, "created": 1676999240.0, "body": ""}, {"title": "This video has n views - youtube api tutorial", "score": 0, "id": "1189bkb", "url": "https://youtu.be/RkvM2Znydro", "comms_num": 0, "created": 1676997917.0, "body": ""}, {"title": "Python turned 32 years old yesterday!", "score": 10, "id": "1185i69", "url": "https://www.reddit.com/r/Python/comments/1185i69/python_turned_32_years_old_yesterday/", "comms_num": 2, "created": 1676991872.0, "body": "Python was first released by Guido Van Rossum on Februrary 20th, 1991, and yesterday marked its 32nd anniversary!"}, {"title": "\ud83d\udc49 New Awesome Polars release! \ud83d\ude80 What's new in #Polars? Let's find out!", "score": 19, "id": "11855fp", "url": "https://github.com/ddotta/awesome-polars/releases/tag/2023-02-21", "comms_num": 12, "created": 1676990947.0, "body": ""}, {"title": "I made a derivative calculator using Python!", "score": 65, "id": "1184ijg", "url": "https://www.reddit.com/r/Python/comments/1184ijg/i_made_a_derivative_calculator_using_python/", "comms_num": 8, "created": 1676989188.0, "body": "I wanted to learn about how to write a parser and an interpreter. I also wanted to give the parser a practical use, so I thought of parsing mathematical expressions and then write a symbolic differentiation tool that would traverse the parsed object, applying the chain rule recursively to come up with its derivative. \n\nI think this is a pretty cool and insightful project for anyone that wants to learn about parsing. Anyway, my sources were: \n\n1.  [Let's Build A Simple Interpreter](https://ruslanspivak.com/lsbasi-part1/) for learning about  parsers and interpreters. Very good tutorial and written in Python. The code for the parser and interpreter in my project is almost entirely taken from parts 1 - 8 in this tutorial.\n2. [Structure And Interpretation of Computer Programs](https://web.mit.edu/6.001/6.037/sicp.pdf), Subsection 2.3.2, for learning about symbolic differentiation and how to structure the code for the symbolic differentiation tool.\n\nThe repository is [https://github.com/scfenton6/derivative-calculator](https://github.com/scfenton6/derivative-calculator)."}, {"title": "Develop Data Visualization Interfaces in Python With Dash \u2013 Real Python", "score": 8, "id": "11849gz", "url": "https://realpython.com/python-dash/", "comms_num": 2, "created": 1676988496.0, "body": ""}, {"title": "Semantic search for Wikipedia", "score": 6, "id": "1183d3r", "url": "https://neuml.hashnode.dev/embeddings-in-the-cloud?new=1", "comms_num": 5, "created": 1676985908.0, "body": ""}, {"title": "Tips & Tricks for dealing with json", "score": 0, "id": "1182ebd", "url": "https://youtu.be/vlenVDbJKsA", "comms_num": 2, "created": 1676982864.0, "body": ""}, {"title": "Useful libraries for integration/api testing", "score": 2, "id": "11829q9", "url": "https://www.reddit.com/r/Python/comments/11829q9/useful_libraries_for_integrationapi_testing/", "comms_num": 12, "created": 1676982441.0, "body": "I'd like to enhance my integration/api testing, looking for useful libraries that do all sort of stuff like asserting on HTTP responses, mocking network requests, verifying OpenAPI or anything similar that can improve my DX. Appreciate your ideas"}, {"title": "I learned how to use spritesheets and play animations properly.", "score": 6, "id": "1180zsa", "url": "https://www.reddit.com/r/Python/comments/1180zsa/i_learned_how_to_use_spritesheets_and_play/", "comms_num": 1, "created": 1676977889.0, "body": "[https://github.com/ProarchwasTaken/test\\_spritesheet](https://github.com/ProarchwasTaken/test_spritesheet)\n\n This program tests handling spritesheets, and playing proper animation. I just felt like learning how to do this kind of thing is very important to making any kind of game with graphics beyond simple, single colored shapes. I learned a bit about how surfaces work and how many more uses they have. I think they can act as layers and you can chose area of an image you want to draw when using \"surface.blit\", you can use this feature to get a specific image from a spritesheet. I wonder what else I could do with Surfaces?\n\nYou are free to use this program as a reference for future projects.\n\nI had to follow a tutorial to figure out how to use spritesheets but I figured out the animation system on my own! The previous animation prototype I wrote was kinda messy, and inefficient. Is there anything I could've done better?\n\n&#x200B;\n\nhttps://preview.redd.it/sd3e55opyija1.png?width=781&format=png&auto=webp&v=enabled&s=4b006c7dd816a2e91d86f93bbfd75d313362cad7"}, {"title": "My project creates synthetic data to analyze transactions", "score": 1, "id": "117yiru", "url": "https://www.reddit.com/r/Python/comments/117yiru/my_project_creates_synthetic_data_to_analyze/", "comms_num": 1, "created": 1676968293.0, "body": "I\u2019ve created Python code to create X number of users and Y number of transactions for the X users in a given period of time. I have included seasonality in the data.\n\nNow that I have it created I want to use it for an analysis that helps me showcase my analysis skills. Do you have any ideas?\n\ud83d\ude4f"}, {"title": "(GUIDE) How to get GPU support for tensorflow on ubuntu 22.04", "score": 11, "id": "117xf0z", "url": "https://www.reddit.com/r/Python/comments/117xf0z/guide_how_to_get_gpu_support_for_tensorflow_on/", "comms_num": 10, "created": 1676964067.0, "body": "After   2.5 weeks of trying, I've finally succeeded in getting GPU support for    Tensorflow. This guide is for all of you out there, that are still  struggling.\n\nIn this guide, we will   go through the steps from a **CLEAN**  installation of Ubuntu 22.04 to having GPU support for Tensorflow. Make  sure your GPU is CUDA supported. Code is marked with fat writing. If  you do not have a clean installation,  and your computer is already  stuffed with drivers etc.  Make sure you  delete all nvidia, CUDA, CUDA  Toolkit, and CUDNN drivers,  before doing  this tutorial.\n\nATTENTION:  At some point going along, you'll be asked by the terminal to install  CUDA-Toolkit. Even though this already should be installed, you simply  do it again. This install will not interfere with the progress you've  already made.\n\n*Restrict and install correct nvidia driver:*\n\n1. We need to blacklist nouveau, because this can cause problems.\n\nTo  do this we edit the file /etc/modprobe.d/blacklist.conf as root. To   edit  the file, we first need to get to the folder, we use nautilus to   do  this.Open a terminal and write **sudo nautilus**.    This will open a fresh folder with root access. In the folder press  Ctrl+l. Then type in the directory without blacklist.conf. Open the  file, and go to the bottom and add:\n\n**blacklist nouveau**\n\n**options nouveau modeset=0**\n\nsave and close the file. Open a terminal and write: **sudo update-initramfs -u**Reboot the system with: **sudo reboot**\n\n2.\n\nWe need to install the Nvidia drivers. To do this, we first need to find the recommended driver. Open the terminal and write: **sudo apt-get update.then install ubuntu-driverssudo apt-get install ubuntu-drivers**then write:**ubuntu-drivers devices**You will get a list of drivers, one will be marked \u201crecommended\u201d. This is the driver you want!You can try: **sudo ubuntu-drivers autoinstall**If that fails: Go to software and updates > additional drivers > find the driver > apply changes\n\n*Install Cuda-toolkit, Cuda, Cudnn*\n\nThis    part is the pain. If anything goes wrong here (like downloading the    wrong version, or installing the wrong dependencies) reinstall the OS,    or delete all drivers and start over. Trying to fix what is broken  here   only causes more problems.\n\nCUDA\n\ngo to: [https://developer.nvidia.com/cuda-downloads](https://developer.nvidia.com/cuda-downloads) Linux > x86\\_64 > Ubuntu > 22.04 > deb (local)run the codes there separately:\n\n**wget** [**https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86\\_64/cuda-ubuntu2204.pin**](https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-ubuntu2204.pin)\n\n**sudo mv cuda-ubuntu2204.pin /etc/apt/preferences.d/cuda-repository-pin-600**\n\n**wget** [**https://developer.download.nvidia.com/compute/cuda/12.0.1/local\\_installers/cuda-repo-ubuntu2204-12-0-local\\_12.0.1-525.85.12-1\\_amd64.deb**](https://developer.download.nvidia.com/compute/cuda/12.0.1/local_installers/cuda-repo-ubuntu2204-12-0-local_12.0.1-525.85.12-1_amd64.deb)\n\n**sudo dpkg -i cuda-repo-ubuntu2204-12-0-local\\_12.0.1-525.85.12-1\\_amd64.deb**\n\n**sudo cp /var/cuda-repo-ubuntu2204-12-0-local/cuda-\\*-keyring.gpg /usr/share/keyrings/**\n\n**sudo apt-get update**\n\n**sudo apt-get -y install cuda**\n\nIf   you get an installation error at any point. Make sure you actually  installed the .deb from Downloads, that you downloaded when you did the  second wget. If this fails, try the same install again. Do not proceed  from this step till you\u2019ve found a fix, for whatever problem you might    be facing.\n\n2.\n\nIn the terminal do cd /Downloads/\n\n**sudo dpkg -i <package\\_name>.deb**\n\nOpen the \\~/.bashrc file in ubuntu by **nano \\~/.bashrc**\n\ngo to the bottom of the document and add\n\n**export PATH=/usr/local/cuda-<version>/bin${PATH:+:${PATH}}**\n\n**export LD\\_LIBRARY\\_PATH=/usr/local/cuda-<version>/lib64${LD\\_LIBRARY\\_PATH:+:${LD\\_LIBRARY\\_PATH}}**\n\nVersion := the version of CUDA you\u2019ve downloaded.\n\nsave the document by ctrl + o, then ctrl + x to exit.\n\nthen do: **source \\~/.bashrc** to apply the changes.\n\nCudnn\n\ngo to [https://developer.nvidia.com/rdp/cudnn-download](https://developer.nvidia.com/rdp/cudnn-download)\n\nand find the Deb version that fits your cuda installation.\n\nDownload the .deb file\n\nin the terminal. Make sure you are in the Downloads folder, write:**sudo dpkg -i libcudnn8\\_8.0.x.x-1+cuda12.0\\_amd64.deb**\n\nwhere x is the version of CUDNN\n\nVerify that cuda is installed correctly: **ls /usr/local/cuda-12.0/lib64/libcudnn\\***\n\nHere I faced an issue where the directory didn\u2019t exist: **victor@victor:\\~/Downloads$    ls /usr/local/cuda-12.0/lib64/libcudnn\\* ls: cannot access    '/usr/local/cuda-12.0/lib64/libcudnn\\*': No such file or directory**\n\nif this is the case, do:\n\n**dpkg-query -L cudnn-local-repo-ubuntu2204-8.8.0.121**\n\nto search for the installed package.then include that path to the \\~/.bashrc file: **export LD\\_LIBRARY\\_PATH=/path/to/cuda/lib64:$LD\\_LIBRARY\\_PATH**\n\nwhere the path/to/cuda is the actual path.\n\nremember to save, exit and update**Ctrl + oCtrl + xsource \\~/.bashrc**\n\nVerify that the CUDNN libs are now included in the LD\\_LIBRARY\\_PATH\n\n**ls /path/to/cuda/lib64/libcudnn\\***\n\nIn  my case, this threw a new error, because libcudnn8 was not installed  with the CUDNN library. This is a bug with the installer. To fix this go  to the folder /var/cudnn-local-repo-ubuntu2004-8.4.0.27. You do this by  using nautilus open folder Ctrl + L go to /var/ and simply go to the  folder from there. Here you find three .deb files that are not unpacked.  Unpack  them. This might throw an error if trying to use the software  installer. Instead do **sudo gdebi xxx.deb** where xxx is obviously the name of the .deb file.\n\ngdebi  is not installed by default. The terminal will instruct you how to  install gdebi. after this install. The files are not placed correctly,    do: **sudo find / -name libcudnn\\***\n\n**export LD\\_LIBRARY\\_PATH=/usr/lib/x86\\_64-linux-gnu:$LD\\_LIBRARY\\_PATH**\n\nadd the export line to .bashrc as well, so you won\u2019t have to do this every time you boot.\n\n**nano \\~/.bashrc**\n\n**export LD\\_LIBRARY\\_PATH=/usr/local/cuda-12.0/lib64${LD\\_LIBRARY\\_PATH:+:${LD\\_LIBRARY\\_PATH}}**\n\n**ctrl + o**\n\n**ctrl + x**\n\n**source \\~/.bashrc**\n\nNow check that the libcudnn is in the right place\n\n**ls /usr/local/cuda-12.0/lib64/libcudnn.so**\n\nif it\u2019s not: **sudo find / -name libcudnn.so**\n\nfor me, this was located at:/usr/lib/x86\\_64-linux-gnu/libcudnn.so\n\nwhich   was the right place. But ls was unable to locate the folder, because   it  didn\u2019t have root privilege. Check if it actually works, input this   whole  code into the terminal:\n\n**echo    -e '#include <iostream>\\\\n#include <cudnn.h>\\\\nint main() {    cudnnHandle\\_t handle; cudnnCreate(&handle); std::cout <<    \"cudnnGetVersion(): \" << cudnnGetVersion() << std::endl;    return 0; }' | nvcc -x cu -o /dev/null - -lcudnn**\n\nThis should return nothing. you can check that the script was a succes by adding **./a.out** to the script above and execute again. This should return 0.\n\n3.\n\nIn the terminal write: **nvidia-smi**\n\nthis gives you an error that it\u2019s not installed, but can be installed by using some utils.\n\nSelect the util that fits the Nvidia driver you selected from the \u201csoftware and updates\u201d menu.\n\n**nvidia-smi**\n\n*Command 'nvidia-smi' not found, but can be installed with:*\n\n*sudo apt install nvidia-utils-510-server  # version 510.47.03-0ubuntu3, or*\n\n*sudo apt install nvidia-utils-390* *# version 390.157-0ubuntu0.22.04.1*\n\n*sudo apt install nvidia-utils-450-server  # version 450.216.04-0ubuntu0.22.04.1*\n\n*sudo apt install nvidia-utils-470* *# version 470.161.03-0ubuntu0.22.04.1*\n\n*sudo apt install nvidia-utils-470-server  # version 470.161.03-0ubuntu0.22.04.1*\n\n*sudo apt install nvidia-utils-510* *# version 510.108.03-0ubuntu0.22.04.1*\n\n*sudo apt install nvidia-utils-515* *# version 515.86.01-0ubuntu0.22.04.1*\n\n*sudo apt install nvidia-utils-515-server  # version 515.86.01-0ubuntu0.22.04.1*\n\n*sudo apt install nvidia-utils-525* *# version 525.78.01-0ubuntu0.22.04.1*\n\n*sudo apt install nvidia-utils-525-server  # version 525.60.13-0ubuntu0.22.04.1*\n\n*sudo apt install nvidia-utils-418-server  # version 418.226.00-0ubuntu5\\~0.22.04.*\n\nAfter installation, when doing **nvidia-smi** you should get an \"image\", that displays your Cuda version in the top right, and your GPU name in the middle left side.\n\nHere, I can see the GPU (Qaudro T1000). So the GPU is now working with CUDA, and the CUDNN library is working.\n\nInstalling Tensorflow in a Conda environment.\n\nSimply follow the instructions from [https://www.tensorflow.org/install/pip](https://www.tensorflow.org/install/pip)\n\nThe  Cudatoolkit and cudnn versions are different in the conda environment.    But this is not a problem. Just make sure you are in the conda  environment when running that line (4.2)\n\nInstalling Pycharm and using the tf environment\n\nAfter    doing the Tensorflow guide. It\u2019s finally time to test if everything    works.Download pycharm community (or your preference) from the ubuntu  software tab. In the initial launch of Pycharm, Remember to select  Python3.9 NOT Python3.10 as it suggests (This is because you've just  setup the conda environment to be 3.9 if you followed the  tensorflow.org/install/pip ) . Add interpreter, press conda environment  > existing >   tf.make a new .py file and write: **import tensorflow as tfprint(tf.config.list\\_physical\\_devices('GPU'))**\n\nrun the code.\n\nYou should get a list containing the following:\n\n\\[PhysicalDevice(name='/physical\\_device:GPU:0',  device\\_type='GPU')\\]Do not worry about the libninfer\\_ errors, these are  bugs. Not actual problems.Do not worry about the TensorRT error, we have  not installed it.Do not worry about the successful NUMA node read from  SysFS had negative value error. As far as I can tell, it does nothing.\n\nYou've now installed TF with GPU support. Congratulations!"}, {"title": "After using Python for over 2 years I am still really confused about all of the installation stuff and virtual environments", "score": 693, "id": "117xcbj", "url": "https://www.reddit.com/r/Python/comments/117xcbj/after_using_python_for_over_2_years_i_am_still/", "comms_num": 316, "created": 1676963795.0, "body": "When I learned Python at first I was told to just download the Anaconda distribution, but when I had issues with that or it just became too cumbersome to open for quick tasks so I started making virtual environments with venv and installing stuff with pip. Whenever I need to do something with a venv or package upgrade, I end up reading like 7 different forum posts and just randomly trying things until something works, because it never goes right at first.\n\nIs there a course, depending on one's operating system, on best practices for working with virtual environments, multiple versions of Python, how to structure all of your folders, the differences between running commands within jupyter notebook vs powershell vs command prompt, when to use venv vs pyvenv, etc.? Basically *everything else* right prior to the actual Python code I am writing in visual studio or jupyter notebook? It is the most frustrating thing about programming to me as someone who does not come from a software dev background."}, {"title": "pdm vs poetry", "score": 24, "id": "117woh3", "url": "https://www.reddit.com/r/Python/comments/117woh3/pdm_vs_poetry/", "comms_num": 35, "created": 1676961308.0, "body": "Anyone switched from poetry to pdm? What are your thoughts? How does pdm compare to poetry?"}, {"title": "REaLTabFormer: Generating realistic synthetic data using GPT in Python", "score": 9, "id": "117vtkx", "url": "https://www.reddit.com/r/Python/comments/117vtkx/realtabformer_generating_realistic_synthetic_data/", "comms_num": 1, "created": 1676958377.0, "body": "Hello! Just wanted to share this here in case someone will find it useful.\n\nWe implemented a model based on GPT architecture that can be trained on any tabular or relational data to generate synthetic observations. We showed that the synthetic data the model produces is of high quality and can be good proxy data for training machine learning models when the original data cannot be used due to privacy or other issues.\n\nIt may be useful for generating \"fake\" or \"mock\" data, based on production data, that can be used during development, etc. Try it out!\n\n&#x200B;\n\nInstall with: \\`pip install realtabformer\\`\n\nGitHub: [https://github.com/avsolatorio/REaLTabFormer/](https://github.com/avsolatorio/REaLTabFormer/)\n\nPaper: [https://arxiv.org/abs/2302.02041](https://arxiv.org/abs/2302.02041)\n\n&#x200B;\n\nhttps://preview.redd.it/7qhiz1qfchja1.png?width=1998&format=png&auto=webp&v=enabled&s=67c8e7e315ecc6d4b40c85560a2f10494161bae1"}, {"title": "Tuesday Daily Thread: Advanced questions", "score": 2, "id": "117ospx", "url": "https://www.reddit.com/r/Python/comments/117ospx/tuesday_daily_thread_advanced_questions/", "comms_num": 12, "created": 1676937613.0, "body": "Have some burning questions on advanced Python topics? Use this thread to ask more advanced questions related to Python.\n\n**If your question is a beginner question we hold a beginner Daily Thread tomorrow (Wednesday) where you can ask any question! We may remove questions here and ask you to resubmit tomorrow.**\n\nThis thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response."}, {"title": "32 Open Source Libraries for Python's 32nd Birthday", "score": 42, "id": "117kuq6", "url": "https://medium.com/plain-simple-software/32-open-source-libraries-for-pythons-32nd-birthday-8bb3301ec43a", "comms_num": 8, "created": 1676927937.0, "body": ""}, {"title": "I made a cool CLI using Python !", "score": 10, "id": "117jadt", "url": "https://www.reddit.com/r/Python/comments/117jadt/i_made_a_cool_cli_using_python/", "comms_num": 4, "created": 1676924200.0, "body": "Well well, I don't know if something of this type already exists but I just wanted to build something anyway :D\n\nSo I made a CLI tool that helps creating projects structure (folder and files) like done in Django, Angular, React etc... and you can custom everything with templates !\n\n[https://github.com/MayasMess/structor](https://github.com/MayasMess/structor)\n\nPlease tell me what you think about it :)"}, {"title": "What is your workflow for managing virtual environments for personal projects?", "score": 53, "id": "117irnj", "url": "https://www.reddit.com/r/Python/comments/117irnj/what_is_your_workflow_for_managing_virtual/", "comms_num": 49, "created": 1676922985.0, "body": "I'm on MacOS, so looking for \\*nix solutions, not conda solutions. I used to use virtualenvwrapper for everything, but I'm not sure if that's in the current meta. Bonus points if you're using a jupyter notebook and setting up a custom kernel with your virtual environment.\n\nI've done all of these things umpteen different ways, but it's been a while and now my brain and my environment are a jumble of partial solutions that I need to sort out. Just wondering what everyone else is doing these days.\n\nEdit: My biggest takeaway from this conversation has been that I'm not crazy and it really is the case that everyone seems to have their own workflow. "}, {"title": "Elevate Your Language Skills with VocabularyCLI - The Ultimate CLI for Linguaphiles!", "score": 9, "id": "117gfeo", "url": "https://www.reddit.com/r/Python/comments/117gfeo/elevate_your_language_skills_with_vocabularycli/", "comms_num": 0, "created": 1676917532.0, "body": "Source: [https://github.com/VocabCLI/VocabCLI](https://github.com/VocabCLI/VocabCLI)  \n\n\n&#x200B;\n\nhttps://preview.redd.it/shzsscp7zdja1.png?width=1731&format=png&auto=webp&v=enabled&s=222262d963add92d1f288b09c01d2fbf72d28aaa\n\nVocabularyCLI is a lightweight Command Line Interface that allows users to look up word definitions, examples, synonyms and antonyms directly via the command line. Powered with several utility based commands our CLI offers rapid and robust Knowledge Base capabilities like Flashcards, Tagging, Word Management, Graph Reporting, Bulk import and export of word lists and is a definitive software for linguaphiles.\n\nThis application boasts a simple and intuitive interface that is easy to use and is a must have for anyone who wants to expand their vocabulary and improve their language skills. The app also offers advanced Text Classification and Processing via the use of Natural Language Processing and Machine Learning algorithms which will be discussed in detail in the \"Scope and Features\" section.\n\nThe CLI will be offered with eye-catching Panels, Tables, Animated Symbols, Emojis, Interactive Menus, Spinners, Colored fonts and other rich features that will make the user experience more enjoyable and interactive. The CLI will also be offered with a comprehensive User Manual and a detailed Documentation that will help users get started with the CLI and use it to its full potential.\n\n&#x200B;\n\n**Feature overview:-**\n\n&#x200B;\n\nhttps://preview.redd.it/g9tk5fukydja1.png?width=1727&format=png&auto=webp&v=enabled&s=aa1e77d1a96a06ae7c11cfef108b6ef13cedc427\n\n&#x200B;\n\nhttps://preview.redd.it/ik7uhn9mydja1.png?width=1680&format=png&auto=webp&v=enabled&s=e2ceb744378766c575d3e0426ab0fa636e958570\n\n&#x200B;\n\nhttps://preview.redd.it/02gxv2sqydja1.png?width=1738&format=png&auto=webp&v=enabled&s=b91845d42c0d1849dea98819e16a6df9f1edc6d8\n\n&#x200B;\n\nhttps://preview.redd.it/24m9849sydja1.png?width=1663&format=png&auto=webp&v=enabled&s=a2db433b57ced80592ee04b97cf07f5c61ec8e5b\n\n&#x200B;\n\nhttps://preview.redd.it/72hyry7tydja1.png?width=1645&format=png&auto=webp&v=enabled&s=ada01923aa74b4fe463870546db12720ff44e671\n\nWe also have a website which will be updated with demo videos soon: [https://vocabcli.github.io/](https://vocabcli.github.io/)"}, {"title": "Python software developers where did you learn python?", "score": 199, "id": "117fnzh", "url": "https://www.reddit.com/r/Python/comments/117fnzh/python_software_developers_where_did_you_learn/", "comms_num": 167, "created": 1676915809.0, "body": "Just like the title states where did you guys learn python? I'm wanting to learn python and become a future software engineer but I don't know where to learn python."}, {"title": "Announcing Python Support in CodeSandbox, start a Python VM with one click", "score": 48, "id": "117f6ej", "url": "https://codesandbox.io/blog/introducing-python-support-in-codesandbox", "comms_num": 3, "created": 1676914785.0, "body": ""}, {"title": "Opinionated article about virtual environments management", "score": 10, "id": "117ehp4", "url": "https://dev.to/bowmanjd/python-tools-for-managing-virtual-environments-3bko", "comms_num": 18, "created": 1676913510.0, "body": ""}, {"title": "I made a simple password generator", "score": 0, "id": "117e4ee", "url": "https://www.reddit.com/r/Python/comments/117e4ee/i_made_a_simple_password_generator/", "comms_num": 9, "created": 1676912906.0, "body": "It does exactly what is says on the tin, i made [this](https://github.com/Revanchist10/Python-Password-Generator) a year ago for a class project, recently picked it back up and fixed a lot of my issues that it had, any feedback would be appreciated."}, {"title": "The free weekly Python on Microcontrollers Newsletter", "score": 8, "id": "1178cez", "url": "https://www.reddit.com/r/Python/comments/1178cez/the_free_weekly_python_on_microcontrollers/", "comms_num": 0, "created": 1676904270.0, "body": "&#x200B;\n\nhttps://preview.redd.it/7vd7etkqvcja1.jpg?width=516&format=pjpg&auto=webp&v=enabled&s=d152ef1fef4b442bd8134d00a69e34cb1bfd324d\n\nWith the Python on Microcontrollers newsletter, you get all the latest information in one place!\n\nThe Python on Microcontrollers newsletter is the place for the latest news involving Python on hardware. It arrives Tuesday morning with all the week\u2019s happenings.\n\nOver 10,300 subscribers - the largest Python on hardware newsletter out there.\n\n**Catch all the\u00a0weekly news on** [**Python for Microcontrollers**](https://www.adafruitdaily.com/)\u00a0with\u00a0[adafruitdaily.com](https://www.adafruitdaily.com/).\n\n>This\u00a0*ad-free, spam-free*\u00a0weekly email is filled with\u00a0**CircuitPython**,\u00a0**MicroPython**, and\u00a0**Python**\u00a0information that you may have missed, all in one place!  \nYou get a summary of all the software, events, projects, and the latest hardware worldwide once a week, no ads!\n\nEnsure you catch the weekly Python on Hardware roundup\u2013 you can cancel anytime\u00a0**\u2013** [**try our spam-free newsletter today**](https://www.adafruitdaily.com/)**!**\n\n[**https://www.adafruitdaily.com/**](https://www.adafruitdaily.com/)"}, {"title": "I made a thing.... A PGP gui tool.", "score": 28, "id": "117795x", "url": "https://www.reddit.com/r/Python/comments/117795x/i_made_a_thing_a_pgp_gui_tool/", "comms_num": 7, "created": 1676901307.0, "body": "Was using an online PGP tool and realised I am constantly giving away my private key and passphrase to their server, just because it was convinient...\n\nSo I made this, a PGP encryption, decryption, signing and verification tool with GUI.\n\nCan also generate PGP keys etc\n\n[https://github.com/lewis-morris/pypgpeed](https://github.com/lewis-morris/pypgpeed)\n\ninstall with \\`pip install pypgpeed\\`\n\nrun with  \\`pypgpeed\\` in your console."}, {"title": "How to Make a Calculator With Python", "score": 0, "id": "1176qr6", "url": "https://phoenixnap.com/kb/python-calculator?utm_source=Reddit&utm_medium=Community+post", "comms_num": 0, "created": 1676899950.0, "body": ""}, {"title": "TIL python is named after BBC show \u201cMonty Python\u2019s Flying Circus\u201d", "score": 0, "id": "1174mzz", "url": "https://www.reddit.com/r/Python/comments/1174mzz/til_python_is_named_after_bbc_show_monty_pythons/", "comms_num": 20, "created": 1676893599.0, "body": "source: [https://docs.python.org/3.8/tutorial/appetite.html](https://docs.python.org/3.8/tutorial/appetite.html)"}, {"title": "I made a simple script to folder your files", "score": 38, "id": "1173nim", "url": "https://www.reddit.com/r/Python/comments/1173nim/i_made_a_simple_script_to_folder_your_files/", "comms_num": 14, "created": 1676889955.0, "body": "Ever found yourself with a lot of files and no will to put each of them in a separate folder? **~~I really hope you haven't~~**\n\nFear not, with [**FileFolder**](https://github.com/milkyicedtea/FileFolder) ~~(what a dumb name)~~ your problems will be no more! FileFolder takes no requirements to be run and can be run from everywhere in your pc! Just navigate to the desired folder after running the script and it'll take care of all your files!\n\n~~Sorry for this intro, I really wanted this to be special :)~~\n\nEdit 21/2/23: Thanks to everyone who pointed out I should be using the `pathlib` module. I managed to rewrite 90% the program and it's now free of _hard-to-read_ string concatenation! _Hopefully_ I used the module in a correct way :)"}, {"title": "Seeking Advice on Learning Back-End Development with Flask, Django, and Cassandra.", "score": 17, "id": "1173g8z", "url": "https://www.reddit.com/r/Python/comments/1173g8z/seeking_advice_on_learning_backend_development/", "comms_num": 10, "created": 1676889158.0, "body": "Hi everyone,\n\nI'm planning to expand my skillset by learning back-end development, and I'm excited to start with Flask, Django, and Cassandra.\n\nAs an intermediate-level Python programmer, I'm familiar with the basics of SQL and Tableau, but now I want to focus on building robust, scalable web applications. Flask and Django are both Python-based web frameworks that will allow me to develop back-end services and APIs.\n\nI've heard that Flask is a lightweight framework that's easy to learn and perfect for building small-to-medium-sized applications, while Django is a more comprehensive and complex framework with a steeper learning curve that's ideal for building large, enterprise-level applications. I'm planning to learn both frameworks so that I can gain a deeper understanding of back-end development and become a versatile developer.\n\nAfter mastering Flask and Django, my goal is to learn Cassandra. As a NoSQL database management system, Cassandra is known for its scalability and performance, making it a popular choice for handling large amounts of data across multiple servers. I believe that learning Cassandra will be a valuable addition to my back-end development skills and help me work with big data more effectively.\n\nIf you have experience with back end development , I'd love to hear your advice and tips on how to get started and gain proficiency. Additionally, I'm open to project ideas that will help me solidify my understanding of back-end development."}, {"title": "Collection of tools for monitoring running Jupyter Notebooks and interacting with them", "score": 18, "id": "1173dh5", "url": "https://www.reddit.com/r/Python/comments/1173dh5/collection_of_tools_for_monitoring_running/", "comms_num": 0, "created": 1676888872.0, "body": "Hi all:)\n\nA \\~year ago I wrote a tool to monitor all of my running Jupyter Notebooks and show their GPU/CPU usage: essentially a drop-in replacement for \\`gpustat\\` with better support for runned kernels.  A gif is worth a thousand words: \n\n[CLI demo](https://i.redd.it/cpnmohlyjbja1.gif)\n\nNow it is somewhat well tested and enriched by additional helpful functions:\n\n* auto-select available (with enough free memory) devices\n* run \\`pylint\\` on your notebook to enforce code standards and look for code smells\n* run notebook in an \\`eval\\`-like way\n* utilities to query info about notebooks\n\nUnder the hood I tried to use the least amount of dependencies, so I rely only on having one library for working with terminal, one for getting info about processes and one to connect with NVIDIA devices. Another goal of the project is to have functions that show how to work with JPN interface, so the next tools can be prototyped faster and much cleaner.\n\n[https://github.com/analysiscenter/nbtools](https://github.com/analysiscenter/nbtools)\n\nAny feedback is much appreciated!"}, {"title": "GitHub - miguelgrinberg/microdot: The impossibly small web framework for Python and MicroPython.", "score": 249, "id": "11730af", "url": "https://github.com/miguelgrinberg/microdot", "comms_num": 13, "created": 1676887475.0, "body": ""}, {"title": "Create Web Applications from Jupyter Notebook with Python only - a new open-source framework with UI widgets", "score": 32, "id": "1172c3k", "url": "https://www.reddit.com/r/Python/comments/1172c3k/create_web_applications_from_jupyter_notebook/", "comms_num": 4, "created": 1676884742.0, "body": "Sharing results from Jupyter Notebook might be a pain:\n\n- you can't share notebook to stakeholders because they don't speak Python, cant run notebook by their own,\n\n- you need to copy-paste charts into PowerPoint presentation,\n\n- you need to rewrite your results to some web framework to make your results interactive.\n\n\nJupyter project offers a Voila as a solution for running notebooks as web apps. I found Voila a difficult to use, especially ipywidgets.\n\n## Mercury \n\nI started to work on my own open-source framework for running notebooks as web apps. Mercury allows you to add interactive widgets in Python notebooks, so you can share notebooks as web applications. It offers a set of widgets with simple re-execution of cells.\n\nGitHub repository: [github.com/mljar/mercury](https://github.com/mljar/mercury)\n\nDocumentation: [RunMercury.com](https://RunMercury.com)\n\n## What you can build\n\nYou can use Mercury Widgets to create:\n\n- [web apps](https://runmercury.com/tutorials/web-app-python-jupyter-notebook/), reports, dashboards,\n\n- [presentations](https://runmercury.com/tutorials/presentation-python-jupyter-notebook/) - use widgets to interact with slides, slides are recomputed during the slideshow\n\n- [websites](https://runmercury.com/tutorials/website-python-jupyter-notebook/) - share notebook as static HTML (with code hidden), \n\n## Features\n\nUnique features that make Mercury different than Voila or Streamlit\n\n- simple re-execution of cells after widget update,\n\n- all input widgets are displayed in the sidebar, your app layout is ready,\n\n- authentication to control access to notebooks (coming soon),\n\n- easy file upload and download in notebook,\n\n- export result to PDF or HTML with button click.\n\n\n## Future plans\n\nI would like to provide a cloud service for notebook deployment. You will upload notebook and it will be available as web app/website.\n\n\n\nLooking for your feedback and comments! Thank you!"}, {"title": "I wrote a top-down shooter engine with Vector2. I don't know if I should consider myself a beginner anymore.", "score": 18, "id": "116vjre", "url": "https://www.reddit.com/r/Python/comments/116vjre/i_wrote_a_topdown_shooter_engine_with_vector2_i/", "comms_num": 8, "created": 1676860685.0, "body": "[https://github.com/ProarchwasTaken/topdown\\_shooter](https://github.com/ProarchwasTaken/topdown_shooter)\n\n This program was written as learning exercise, and so I could use this program for future reference.\n\nThis features: Direction strafe movement, object rotation, shooting projectiles with limited ammo, usage of Vector2 and adding an proper gum.\n\nYou are free to use this program as a reference for future projects, that basically what I'm gonna use this program for from now on\n\nThis exercise is quite a big learning experience for me. Sometime during my last project, I switched from VSCode to Pycharm because I thought the IDE looked cool and it made me feel like a real programmer. Especially since it has this unity-like project selection screen. Of course I had to turn off some features like the grammar check because it was so annoying\n\nI would like to acknowledge how far I came with understanding how to handle multiple python files. Previously, I used to think that managing multiple python files would be a absolute nightmare with issues like circular imports, and the problem of how I would get important data around. Sure I attempted to do so multiple times before as you can see by my other projects, but there would always to a flaw to them. However, as my understanding of python grew I sorta managed to figure out a effective way to do it. Sure, there may be a better way of doing this instead of typing a hundred import statements, so if there is, please let me know!\n\nI now see multi-file python projects in a different light. You know about libraries? Those things that are mostly comprised of files written in python that you can import into your project so you can do things a long more easily? (Although I think not all python libraries are written in python..) I realized that multi-file projects and libraries aren't really that different after all. By starting a new project, you're basically creating a new library. I even found out that there's a \"main\" file in each library was well! It's kind of hard for me to explain.\n\nI also experimented with the way I do things like the file structure, giving important system variables all caps names, adding if **name** == '**main**'. (As if that's gonna do anything)\\]\n\n&#x200B;\n\nhttps://preview.redd.it/w8ahb0dz99ja1.png?width=1186&format=png&auto=webp&v=enabled&s=a94edf963e0c7721f39bf304b4022f531d532726"}, {"title": "Monday Daily Thread: Project ideas!", "score": 4, "id": "116s5pb", "url": "https://www.reddit.com/r/Python/comments/116s5pb/monday_daily_thread_project_ideas/", "comms_num": 0, "created": 1676851211.0, "body": "Comment any project ideas beginner or advanced in this thread for others to give a try! If you complete one make sure to reply to the comment with how you found it and attach some source code! If you're looking for project ideas, you might be interested in checking out Al Sweigart's, [\"The Big Book of Small Python Projects\"](https://inventwithpython.com/bigbookpython/) which provides a list of projects and the code to make them work."}, {"title": "Flappy Bird Played By AI -- Trained Using Genetic Algorithm -- Only Numpy + Pygame", "score": 1, "id": "116qbcp", "url": "https://www.reddit.com/r/Python/comments/116qbcp/flappy_bird_played_by_ai_trained_using_genetic/", "comms_num": 0, "created": 1676846604.0, "body": "I made this AI that could play the flappy bird game: (you actually do not need pytorch) [https://github.com/bebebeee/Flappy\\_Bird\\_PyTorch\\_Genetc\\_Algorithm](https://github.com/bebebeee/Flappy_Bird_PyTorch_Genetc_Algorithm).\n\n As the time progresses, the bird would get better and better. If you want more information, look at the README file. \n\nHere is a video: \n\nhttps://reddit.com/link/116qbcp/video/j08jjkmb48ja1/player"}, {"title": "Switching between multiple data streams in a single thread", "score": 5, "id": "116ns11", "url": "https://www.reddit.com/r/Python/comments/116ns11/switching_between_multiple_data_streams_in_a/", "comms_num": 6, "created": 1676840317.0, "body": "I needed a way to poll two infinite data streams in an alternating manner from a single thread. Turns out Python generators allow you to do that in a clean fashion. Wrote a quick TIL about it here:\nhttps://rednafi.github.io/reflections/switching-between-multiple-data-streams-in-a-single-thread.html"}, {"title": "In what ways, having knowledge of python can make your life easier? (with examples)", "score": 5, "id": "116no2y", "url": "https://www.reddit.com/r/Python/comments/116no2y/in_what_ways_having_knowledge_of_python_can_make/", "comms_num": 18, "created": 1676840047.0, "body": ""}, {"title": "\ud83d\udce2For those interested in Polars, have a look to this new awesome list about Polars !", "score": 32, "id": "116ndrt", "url": "https://github.com/ddotta/awesome-polars", "comms_num": 1, "created": 1676839301.0, "body": ""}, {"title": "\ud83d\udc0d \ud83c\udf82 Happy Birthday Python! You 32yo Bada**!", "score": 486, "id": "116n2km", "url": "https://tomaszs2.medium.com/happy-birthday-python-you-31yo-bada-b94aaa59e15f", "comms_num": 15, "created": 1676838528.0, "body": ""}, {"title": "What are your preferred method(s) for installing multiple python versions on macOS?", "score": 70, "id": "116mpig", "url": "https://www.reddit.com/r/Python/comments/116mpig/what_are_your_preferred_methods_for_installing/", "comms_num": 108, "created": 1676837634.0, "body": "I've ended up with multiple python 3 versions installed by various methods over the years so I'm removing everything and reinstalling which led me to wondering how people manage their python installs on macOS.\n\nFor example, to install python, do you use brew? or install directly from [python.org](https://python.org)? or use conda? or another method?\n\nSecondly, how do people manage multiple python versions? pyenv?\n\nLastly, do you all use any extra tools to manage virtual envs other than the standard venv?\n\nSo which methods do you all use?\n\n\\---\n\n*\\[ I've posted this here as opposed to* r/LearnPython *as I'm interested in the methods developers at all levels use. I'm not asking for help on how to do something (rule 1), rather what types of methods people use. \\]*"}, {"title": "Which one do you think is elegant, and which do you think is efficient?", "score": 8, "id": "116ie6m", "url": "https://www.reddit.com/r/Python/comments/116ie6m/which_one_do_you_think_is_elegant_and_which_do/", "comms_num": 47, "created": 1676827142.0, "body": "I have started doing some problems from project Euler and after completing my first problem which was correct, I decided to use Chat GPT to see if I can make the code more elegant. The first is the one produce from chatGPT and one can see it is very elegant but I would argue it is not efficient. The second one is mine I would argue my is more efficient.\n\n\nHere is problem from project Euler\n\nIf we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.\n\nFind the sum of all the multiples of 3 or 5 below 1000.\n\n\nNote I could solve it by just using for loop for the number of 3 and 5 but I wanted to be able to use it for any number to find any multiples.\n\n\n```\ndef get_sum_of_multiples(min, max, list_of_numbers=[3, 5]):\n    \"\"\"\n    min: minimum number\n    max: maximum number\n    list_of_numbers: Takes a list of numbers and check for any multiples of a number\n    \"\"\"\n    return sum(num for num in range(min, max) if any(num % n == 0 for n in list_of_numbers))\n```\n\n\n```\n\ndef get_sum_of_multiples(min, max, list_of_numbers=[3, 5]):\n    \"\"\"\n    min: minimum number\n    max: maximum number\n    list_of_numbers: Takes a list of numbers and check for any multiples of a number\n\n    >>> get_sum_of_multiples(3, 5, [3, 5])\n    \"\"\"\n\n    total = 0\n    \n    for i in range(min, max):\n        is_multiple = False\n        for multiple in list_of_numbers:\n            if i%multiple == 0:\n              is_multiple = True\n              break\n        if is_multiple:\n            total += i\n    return total\n\n```\n\n\nget_sum_of_multiples(min=3, max=1000)"}, {"title": "Coding python on android", "score": 0, "id": "116ichq", "url": "https://www.reddit.com/r/Python/comments/116ichq/coding_python_on_android/", "comms_num": 4, "created": 1676827035.0, "body": "Hi all - ok I have a question, please bear with me on this one - I write small python scripts for work, and also write scripts in Google apps script - the catch is that I use a Samsung tab s8 ultra to do all of this - my question is does anyone know any good apps to do these 2 things with (I can't change to another os or computer to do this, must be android) - I currently use acode / termux , have tried pyscript3 and like both but just looking for other options - thanks in advance"}, {"title": "PyEncry - My fast file encryption and decryption application", "score": 3, "id": "116gedd", "url": "https://www.reddit.com/r/Python/comments/116gedd/pyencry_my_fast_file_encryption_and_decryption/", "comms_num": 3, "created": 1676823071.0, "body": "Hello to everyone. I wanted to develop an application to simply encrypt and decrypt my existing files. It's not safe, but it's pretty ideal for general home use. Aes file borrows some bytes so that the encrypted Xml file and related files do not work without decrypting the Xml.\n\nNote: Please make a backup of your files before trying them, there may be errors due to character - location.\n\n[https://github.com/OnlyAudience/PyEncry](https://github.com/OnlyAudience/PyEncry)\n\n&#x200B;\n\nhttps://i.redd.it/rd4z7b2c66ja1.gif"}, {"title": "Create Unique Lofi Versions of Your Favorite Songs with Slowed+Reverb+Surround", "score": 14, "id": "116a6nb", "url": "https://www.reddit.com/r/Python/comments/116a6nb/create_unique_lofi_versions_of_your_favorite/", "comms_num": 4, "created": 1676812976.0, "body": " [https://github.com/samarthshrivas/Slowed-Reverbed-Surround](https://github.com/samarthshrivas/Slowed-Reverbed-Surround)\n\nAre you a fan of lofi music and want to create your own unique versions of your favorite songs? Check out Slowed+Reverb+Surround, a new open-source project on GitHub that allows you to easily convert any WAV song to a lofi version with just a few clicks.\n\nUsing a combination of different audio effects like reverb and surround sound, Slowed+Reverb+Surround can give your music a distinct, dreamy, and nostalgic quality that's perfect for relaxing or studying.\n\nTo use the tool, simply download the project from the GitHub repository and follow the instructions in the README file. You can then experiment with the different audio effects until you achieve the perfect lofi sound for your song.\n\nExamples of songs that have been converted using Slowed+Reverb+Surround are available on the GitHub repository, so you can get a sense of the possibilities for your own music.\n\nIf you find Slowed+Reverb+Surround useful, please consider giving it a star on GitHub to support the project and show your appreciation for the hard work. With your help, we can continue to improve the tool and make it even better. \n\n\\-ChatGPT"}, {"title": "Seeking Career path in Python-Based Fields", "score": 10, "id": "1165ggz", "url": "https://www.reddit.com/r/Python/comments/1165ggz/seeking_career_path_in_pythonbased_fields/", "comms_num": 23, "created": 1676795517.0, "body": "I have recently completed my Diploma in Engineering on Computer technology and have experience working with Django through a 3-month internship. While I have some beginner-level frontend skills, I am not particularly interested in pursuing a career in web development.\n\n&#x200B;\n\nCurrently, when I apply for jobs, many employers require strong frontend skills, which I lack at a medium level. However, I believe that investing my time in improving my frontend skills may not be the most efficient use of my time since AI models such as ChatGPT can handle most frontend work.\n\n&#x200B;\n\nTherefore, I am now looking to pivot my focus towards a field that is based on Python, in which I can excel in the future. Fields that have caught my interest include Machine Learning, Artificial Intelligence, Data Engineering, and Cyber Security.\n\n&#x200B;\n\nAs I plan for my future career, I would appreciate any advice on which of these fields is likely to have a better future and would be the best one for me to focus on."}, {"title": "Python is a valuable language for kids to learn, and tools like MicroPython and physical computing tools like the ESP32 can make learning programming more engaging and interesting.", "score": 197, "id": "11647tl", "url": "https://www.reddit.com/r/Python/comments/11647tl/python_is_a_valuable_language_for_kids_to_learn/", "comms_num": 14, "created": 1676790674.0, "body": "Python is a valuable language for kids to learn, and tools like MicroPython and physical computing tools like the ESP32 can make learning programming more engaging and interesting. By using tools like the ESP32, students can create projects that interact with the physical world, and see the immediate results of their programming skills. These projects can help students develop a range of skills, including programming, electronics, and problem-solving. By using tools like the Magicbit to learn programming and physical computing, kids can gain a valuable skillset that will serve them well in a wide range of industries and fields.[Read full article](https://magicbit.cc/unlocking-the-magic-of-python-for-kids/)\n\nhttps://preview.redd.it/t9pvq03qh3ja1.jpg?width=1920&format=pjpg&auto=webp&v=enabled&s=d155baad7fa154ca6a7bfd16f610a22c0b385332"}, {"title": "Fast Data Masking using a Python-based package", "score": 4, "id": "11601gh", "url": "https://www.reddit.com/r/Python/comments/11601gh/fast_data_masking_using_a_pythonbased_package/", "comms_num": 0, "created": 1676776297.0, "body": "Today, I\u2019ll discuss one widespread use case of handling unique & critical data using a new python-based FastDataMask package. But before going through the details, why don\u2019t we view the demo & then go through it?  \n\n\n[https://satyakide.com/2023/02/18/handling-unique-data-using-the-python-based-fastdatamask-package-package/](https://satyakide.com/2023/02/18/handling-unique-data-using-the-python-based-fastdatamask-package-package/)  \n\n\n[\\#Python](https://www.linkedin.com/feed/hashtag/?keywords=python&highlightedUpdateUrns=urn%3Ali%3Aactivity%3A7032900617593331712) [\\#datamask](https://www.linkedin.com/feed/hashtag/?keywords=datamask&highlightedUpdateUrns=urn%3Ali%3Aactivity%3A7032900617593331712) [\\#fastdatamask](https://www.linkedin.com/feed/hashtag/?keywords=fastdatamask&highlightedUpdateUrns=urn%3Ali%3Aactivity%3A7032900617593331712) [\\#cloud](https://www.linkedin.com/feed/hashtag/?keywords=cloud&highlightedUpdateUrns=urn%3Ali%3Aactivity%3A7032900617593331712) [\\#security](https://www.linkedin.com/feed/hashtag/?keywords=security&highlightedUpdateUrns=urn%3Ali%3Aactivity%3A7032900617593331712)"}, {"title": "Sunday Daily Thread: What's everyone working on this week?", "score": 7, "id": "115w23y", "url": "https://www.reddit.com/r/Python/comments/115w23y/sunday_daily_thread_whats_everyone_working_on/", "comms_num": 26, "created": 1676764811.0, "body": "Tell /r/python what you're working on this week! You can be bragging, grousing, sharing your passion, or explaining your pain. Talk about your current project or your pet project; whatever you want to share."}, {"title": "2D photos from 3D model in .obj or .fbx format", "score": 2, "id": "115unie", "url": "https://www.reddit.com/r/Python/comments/115unie/2d_photos_from_3d_model_in_obj_or_fbx_format/", "comms_num": 6, "created": 1676761002.0, "body": "Hi \n\nI need to know if it s possible to scan 3D model in python and as output i need 360 pictures from different angles\n\nIt s for my project and i m struggling with it I ll  be happy for any ideas links and codes \n\nThanks"}, {"title": "Pong Game Played By AI", "score": 5, "id": "115ueyv", "url": "https://www.reddit.com/r/Python/comments/115ueyv/pong_game_played_by_ai/", "comms_num": 0, "created": 1676760388.0, "body": "This AI is trained using a genetic algorithm to play this game. I only used python with Numpy.\n\nThe code to this is on github: [https://github.com/bebebeee/Pong\\_Game\\_Genetic\\_Algorithm\\_Numpy](https://github.com/bebebeee/Pong_Game_Genetic_Algorithm_Numpy)\n\n&#x200B;\n\nhttps://reddit.com/link/115ueyv/video/eif7cbrwz0ja1/player"}, {"title": "\ud83e\uddd8\u200d\u2640\ufe0f Hyx - Resiliency Toolkit for Python-based microservice systems", "score": 11, "id": "115toaj", "url": "https://www.reddit.com/r/Python/comments/115toaj/hyx_resiliency_toolkit_for_pythonbased/", "comms_num": 5, "created": 1676758479.0, "body": "Hey people \ud83d\udc4b\n\nI have been working on a microservice-based system heavily implemented in Python and at some point after a few incidents I realised that it might be useful to have a go-to set of popular resiliency patterns implemented in a useful production-ready recommended way and packed a single slim toolkit package. Think about it like Hystrix, resilience4j or Polly, but for our beloved Python community.\n\nAt this point, I have inited the project, written basic docs and implemented the following patterns in a most basic way (call it an MVP \ud83d\ude0c):\n\n* retries (with several backoff and jitter strategies)\n* consecutive circuit breaker \n* timeouts\n* bulkhead (concurrency limiter)\n* Token Bucket-based Rate limiter\n* fallback\n\nOn the way to make it production ready, I plan to add support for metrics dispatching (via OpenTelemetry and StatsD), implement more variants of circuit breakers, rate limiters, etc, make existing components more ready-to-use and tailored to the common use cases, provide examples and integrations with popular frameworks (like FastAPI/Starlette, Flask, etc)\n\nAt this point, I would like to measure our interest as community in such a project and get some early feedback on what I can do/which things to prioritise to make this effort useful for your projects and usecases.\n\nSo feel free to raise your hand if the project seems to be useful and give your feedback!\n\nLinks:\n\n* Github: [https://github.com/roma-glushko/hyx](https://github.com/roma-glushko/hyx)\n* Docs: [https://hyx.readthedocs.io/en/latest/](https://hyx.readthedocs.io/en/latest/) \n* (Rough) Roadmap: [https://hyx.readthedocs.io/en/latest/roadmap/](https://hyx.readthedocs.io/en/latest/roadmap/)"}, {"title": "My First Python Project, Tkinter-Python Math Flash Cards", "score": 20, "id": "115sphs", "url": "https://www.reddit.com/r/Python/comments/115sphs/my_first_python_project_tkinterpython_math_flash/", "comms_num": 1, "created": 1676756478.0, "body": "I would appreciate all the feedback I can get, code design, features, bugs, etc... feel free to let me know if I should change anything!\n\n[Screen shot of the program](https://preview.redd.it/cfn0pid6o0ja1.png?width=751&format=png&auto=webp&v=enabled&s=62eec189707c742f4a24368f847b227e5a52ba1c)\n\n[https://github.com/ezratweaver/python-tkinter-mathflashcards](https://github.com/ezratweaver/python-tkinter-mathflashcards)"}, {"title": "PapersCited - making a list of all sources cited in a document", "score": 10, "id": "115rut5", "url": "https://www.reddit.com/r/Python/comments/115rut5/paperscited_making_a_list_of_all_sources_cited_in/", "comms_num": 5, "created": 1676755092.0, "body": "I've made this program to help me with some tasks, and it ended up in a form I feel could be beneficial for other academics. Basically, it reads a document and notes every time something is cited (e. g. Smith, 2020), then makes an Excel file containing all found citations in alphabetical order. The idea is that you can use this list to create or check your paper's reference list to make sure you didn't leave anything out.  \n\nI'd appreciate comments on the code itself and on the functionality! And if it helps someone, that'd make my day :)  \n\nThe source is on the link below, the Releases tab also include a .exe file made using auto-py-to-exe.\n\n[https://github.com/Mkranj/PapersCited](https://github.com/Mkranj/PapersCited)"}, {"title": "Brain Tumor Detection Web Application using Transfer Learning: An End-To-End Project", "score": 2, "id": "115mm9o", "url": "https://medium.com/p/e10ccb732680", "comms_num": 0, "created": 1676747201.0, "body": ""}, {"title": "Rust implementation of Python dependency parser for PEP 508", "score": 23, "id": "115liyi", "url": "https://www.reddit.com/r/Python/comments/115liyi/rust_implementation_of_python_dependency_parser/", "comms_num": 5, "created": 1676744234.0, "body": "I wrote [PEP 508](https://peps.python.org/pep-0508) parser in rust\n\nGitHub: https://github.com/figsoda/pep-508\nDocs.rs: https://docs.rs/pep-508\n\n```rust\nlet dep = \"requests[security, socks] <= 2.28.1, == 2.28.*; python_version > '3.7' and extra == 'http'\";\nlet parsed = parse(dep).unwrap();\nlet expected = Dependency {\n    name: \"requests\".to_owned(),\n    extras: vec![\"security\".to_owned(), \"socks\".to_owned()],\n    spec: Some(Spec::Version(vec![\n        VersionSpec {\n            comparator: Comparator::Le,\n            version: \"2.28.1\".to_owned(),\n        },\n        VersionSpec {\n            comparator: Comparator::Eq,\n            version: \"2.28.*\".to_owned(),\n        },\n    ])),\n    marker: Some(Marker::And(\n        Box::new(Marker::Operator(\n            Variable::PythonVersion,\n            Operator::Comparator(Comparator::Gt),\n            Variable::String(\"3.7\".to_owned()),\n        )),\n        Box::new(Marker::Operator(\n            Variable::Extra,\n            Operator::Comparator(Comparator::Eq),\n            Variable::String(\"http\".to_owned()),\n        )),\n    )),\n};\nassert_eq!(parsed, expected);\n```"}, {"title": "Data Scientist in the Aerospace industry - I'm going to start posting daily practical videos instead of the abundant theoretical knowledge I see everywhere, check me out and let me know how I can improve the format", "score": 642, "id": "115l10k", "url": "https://twitter.com/Ant1oine/status/1626999386751352832", "comms_num": 40, "created": 1676742918.0, "body": ""}, {"title": "I wrote about \"Formatter for Jupyter notebooks\"", "score": 1, "id": "1159fbr", "url": "https://dev.to/siddhesh_agarwal/formatting-jupyter-notebooks-from-the-terminal-18d6", "comms_num": 0, "created": 1676704109.0, "body": ""}, {"title": "Translate All The Things! An Introduction to LibreTranslate - FOSDEM 2023", "score": 0, "id": "115jkuo", "url": "https://www.youtube.com/watch?v=_dXAEmJ0p2o", "comms_num": 0, "created": 1676739038.0, "body": ""}, {"title": "Using Match Case For Pattern Matching In Python", "score": 0, "id": "115i3w1", "url": "https://www.reddit.com/r/Python/comments/115i3w1/using_match_case_for_pattern_matching_in_python/", "comms_num": 3, "created": 1676734960.0, "body": " \n\nhttps://preview.redd.it/db30lmbawyia1.png?width=1600&format=png&auto=webp&v=enabled&s=78d9034ee9b7a63ba10c6b4fb6d321c968e6f821\n\nIn Python version **3.10**, the \"**match case**\" statement was proposed in the [**PEP 634**](https://peps.python.org/pep-0634/)(specification) & [**636**](https://peps.python.org/pep-0636/)(tutorial) for structural pattern matching.\n\nThe newly added match case statement functions similarly to the if-else statement and if you have worked with other programming languages like **C**, **JavaScript** and more, then it'll give you the feel like the switch statement.\n\nThe match statement takes an expression and compares its value with the **case blocks** which have some specified conditions.\n\n**Read more on how to use the match case statement in Python\ud83d\udc47\ud83d\udc47**\n\n[Using Match Case For Pattern Matching In Python](https://geekpython.in/match-case-in-python)"}, {"title": "End-to-End Tutorial on Combining AWS Lambda, Docker, and Python", "score": 297, "id": "115fzif", "url": "https://www.youtube.com/watch?v=gvfoZq258gA&list=PLbn3jWIXv_ibGQml3zlXi1TfmdcIl6Afy&index=1", "comms_num": 16, "created": 1676728909.0, "body": ""}, {"title": "Chapter 1: Pygame Zero and Mu Editor | Learn to Code with Python and Pygame Zero for Everybody", "score": 1, "id": "115dpac", "url": "https://youtu.be/TNNSoWqJdqM", "comms_num": 0, "created": 1676721278.0, "body": ""}, {"title": "Hikaru 0.16.0b released", "score": 10, "id": "115d5f0", "url": "https://www.reddit.com/r/Python/comments/115d5f0/hikaru_0160b_released/", "comms_num": 1, "created": 1676719046.0, "body": "Hikaru 0.16.0b adds support for Kubernetes 24.x, 25.x, and 26.x, along with their associated Python clients.\n\nHikaru provides a variety of tooling to work with Kubernetes configs in Python, YAML, or JSON, allowing you to move smoothly between each of these representations, and can also use the Python representation to directly interact with Kubernetes. Hikaru helps you migrate from YAML, easily create watches, detect changes in configuration, and more. You can find out more Hikaru here at the PyPI page:\n\n[https://pypi.org/project/hikaru/](https://pypi.org/project/hikaru/)\n\n...at the Github repo:\n\n[https://github.com/haxsaw/hikaru](https://github.com/haxsaw/hikaru)\n\n...or read the full doc at ReadTheDocs:\n\n[https://hikaru.readthedocs.io/en/latest/index.html](https://hikaru.readthedocs.io/en/latest/index.html)"}, {"title": "A Django app that tracks your queries to help optimize them", "score": 17, "id": "115d4wr", "url": "https://www.reddit.com/r/Python/comments/115d4wr/a_django_app_that_tracks_your_queries_to_help/", "comms_num": 0, "created": 1676718985.0, "body": "Not so long ago, I submitted a [Pull Request in wagtail to improve the admin performance](https://github.com/wagtail/wagtail/pull/9594), especially for non-superusers. Basically, it caches all the user's permissions on first access. However, I was pretty sure that this would load a lot of model fields that we never need but there isn't a tool that gives us that type of report. Therefore, I started building an app that keeps track of all fields accessed so you can easily know which ones haven't been used and apply the [`only`/`defer` optimisation](https://docs.djangoproject.com/en/4.1/topics/db/optimization/#use-queryset-defer-and-only) for Django querysets.\n\nI then became interested in having more insights into my queries to apply the performance optimisations listed in this [Django page](https://docs.djangoproject.com/en/4.1/topics/db/optimization/).\n\nThat was the little story for [dj-tracker](https://github.com/Tijani-Dia/dj-tracker) and here is what it can do in summary:\n- Keep track of all fields accessed (allowing to use `only` or `defer` when some fields aren't used)\n- Keep track of all attributes accessed (it can then give you a hint to use `.values` or `.values_list`)\n- Show how effective a queryset's cache is (and provide hints on using the `.iterator` optimisation)\n- Show all related queries in the same section and where they come from (making it super easy to detect N+1 queries)\n- Detailed traceback, SQL and template information for each query\n- Everything is persisted in a database so you can see how your application performs over time\n\nAnd many more features and insights that aren't listed above.\n\nIf you'd like to see how it works and/or looks, check out the [tutorial](https://tijani-dia.github.io/dj-tracker/tutorial/setup/) - you can just read it and look at the information we can see in the dashboard without having to install anything in your machine.\n\nIf you want to give it a try, check out the [installation steps](https://tijani-dia.github.io/dj-tracker/installation/).\n\nI'll highly appreciate any feedback."}, {"title": "OK, what's definitive list of things you would put in a senior development roadmap for a python developer", "score": 110, "id": "115cxkk", "url": "https://www.reddit.com/r/Python/comments/115cxkk/ok_whats_definitive_list_of_things_you_would_put/", "comms_num": 55, "created": 1676718167.0, "body": "That other guy is getting eaten alive. I thought his roadmap was pretty good but I guess not. But I'm only seeing abstract concepts being thrown around after disagreement. Curious as to what a senior dev roadmap looks like in concise words and as few steps as necessary."}, {"title": "An opinionated Python boilerplate", "score": 34, "id": "115clhf", "url": "https://duarteocarmo.com/blog/opinionated-python-boilerplate", "comms_num": 45, "created": 1676716835.0, "body": ""}, {"title": "Python for Beginners Part 1", "score": 0, "id": "115cla5", "url": "https://youtu.be/Gl2F8OeQK6w", "comms_num": 0, "created": 1676716813.0, "body": ""}, {"title": "SplootCode - A Python structured editor for beginners", "score": 22, "id": "1156xei", "url": "https://www.reddit.com/r/Python/comments/1156xei/splootcode_a_python_structured_editor_for/", "comms_num": 5, "created": 1676694989.0, "body": "Hi everyone!\n\nI want to share with you what I've been working on and hopefully get some feedback!\n\nHaving taught Python to many beginner coders I've seen over and over how much of a struggle it is to learn to code. I find that things like the syntax, typos and remembering names of functions always gets in the way of learning the more important (and interesting!) programming skills, like breaking down the problem into steps or how variables and data types work.\n\nTo that end, I've been working on SplootCode -  [https://splootcode.io/](https://splootcode.io/) a Python editor/IDE (with WebAssembly runtime) that gives you the building blocks of Python and lets you write genuine Python programs without having to memorise the syntax or deal with matching brackets, indenting, quotes etc. \n\nCurrently it's pretty much just a Python editor, but the ability to install libraries and build and deploy small apps with it is coming soon! \n\nIf you want to see how it works, source code is here: [https://github.com/katharosada/splootcode](https://github.com/katharosada/splootcode)"}, {"title": "Conch - An open source Windows Terminal Enhancer", "score": 7, "id": "11564ar", "url": "https://www.reddit.com/r/Python/comments/11564ar/conch_an_open_source_windows_terminal_enhancer/", "comms_num": 6, "created": 1676692302.0, "body": "\nThis terminal helper/enhancer brings many many new commands and brings over some revitalised unix commands and also runs all of this faster then a traditional terminal. Speeding up your preformance, if you code in windows u should use \ndis\nhttps://github.com/cmspeedrunner/conch"}, {"title": "I've created a Senior Python Developer roadmap", "score": 422, "id": "1153jb6", "url": "https://github.com/pro1code1hack/Senior-Dev-Roadmap", "comms_num": 124, "created": 1676684089.0, "body": ""}, {"title": "Saturday Daily Thread: Resource Request and Sharing! Daily Thread", "score": 6, "id": "1151ky1", "url": "https://www.reddit.com/r/Python/comments/1151ky1/saturday_daily_thread_resource_request_and/", "comms_num": 2, "created": 1676678426.0, "body": "Found a neat resource related to Python over the past week? Looking for a resource to explain a certain topic?\n\nUse this thread to chat about and share Python resources!"}, {"title": "Python\u2019s multiprocessing performance problem", "score": 24, "id": "114w6fw", "url": "https://pythonspeed.com/articles/faster-multiprocessing-pickle/", "comms_num": 10, "created": 1676664334.0, "body": ""}, {"title": "Use Pip's Constraints Files to Manage Your Python Environment", "score": 12, "id": "114vwiv", "url": "https://www.reddit.com/r/Python/comments/114vwiv/use_pips_constraints_files_to_manage_your_python/", "comms_num": 4, "created": 1676663664.0, "body": "If you use Pip to manage your Python environment, constraints files can be a powerful tool to manage dependencies and protect yourself from transitive dependency changes. I've never seen much written about them so here's a quick explanation and some examples:\n\n## What are Transitive Dependencies?\nA transitive dependency is a dependency of a dependency. Even if you pin all your direct dependencies in your requirements file, a transitive dependency like numpy might still update between installs, causing unexpected behavior.\n\n## What are Constraints Files?\nConstraints files let you specify version restrictions on packages. If you specify a constraint of `numpy==1.24.2`, numpy won't be installed unless it's a direct requirement or dependency. If numpy is a requirement or dependency, the constraint only accepts `numpy==1.24.2`. No other version of numpy can be installed, and any requirements or dependencies must be compatible with this constraint.\n\n## When Would You Use This?\nConstraints files solve a few problems for me:\n\n### Keeping different environments in sync\nUse constraints files to ensure development, testing, and production environments are not using conflicting transitive dependencies. To do this:\n\n- Create and activate a virtual environment\n- Install **all** of your requirements, e.g. `pip install my_package -r requirements-dev.txt`\n- Create a constraints file by freezing the environment, `pip freeze > constraints.txt`\n\nNow you can install your package and guarantee the environment is in sync with your dev environment, e.g. `pip install my_package -c constraints.txt`\n\n### Installing into an existing environment without affecting existing packages\nUse constraints files to install a new package without changing any of the existing packages in your environment. To do this:\n\n- Freeze your current environment with `pip freeze > constraints.txt`\n- Install a new package with `pip install <new package> -c constraints.txt`\n\nYou can also replace all the \"==\" in the constraints.txt with \">=\" to make sure nothing gets downgraded, or \"<=\" to make sure nothing gets upgraded.\n\n### Providing your library as an application\nIf you provide a python library as an application, use constraints to say \"this is the exact set of dependencies and transitive dependencies I used to test the application against\". This saves users a lot of pain if new releases of transitive dependencies break your application.\n\n## Why Not Pin All Your Dependencies and Transitive Dependencies in Your Requirements?\nPinning all your dependencies and transitive dependencies in your requirements can make them more complex and difficult to manage. Instead, separating out the difference between \"packages I use directly to get my thing working\" and \"this is the universe of things in my environment\" can make your requirements more minimal and flexible, which tends to make them easier to manage."}, {"title": "How does the steering committee remain sensitive to the various communities that use Python? Are all relevant communities surveyed to determine the impact of new PEPs on these communities (scientific, academic, corporate, etc). And what if the BDFL disagrees?", "score": 3, "id": "114vsmv", "url": "https://www.reddit.com/r/Python/comments/114vsmv/how_does_the_steering_committee_remain_sensitive/", "comms_num": 1, "created": 1676663394.0, "body": "Let's take a heavily contested PEP - structural pattern matching. I can say that the final PEP wasnt bad and I'm pleased none of the earlier proposal were accepted. \n\nHow exactly do all the bodies that use Python vote for/against these changes to the language?\n\nFrom my perspective, we dont want to rock the academic/teaching boat. But at the same time, growing corporate use pulls Python in another way. And then we have scientific research groups that have their interests as well."}, {"title": "Emulated Quantum Computation", "score": 11, "id": "114t5zz", "url": "https://www.reddit.com/r/Python/comments/114t5zz/emulated_quantum_computation/", "comms_num": 5, "created": 1676656762.0, "body": "\\## I just created \"Emulated Quantum Computation\" that works.\n\nMaybe if I were smarter i could have gotten it to complete a 4 x 4 matrix but I'll settle for a single column matrix. I didn't think it was going to work. And here it is. Crazy, right?\n\nPOC: \\\\\\[quantemu\\\\\\]([https://github.com/webmaster-exit-1/emulated-quantum-computing](https://github.com/webmaster-exit-1/emulated-quantum-computing))\n\n    import numpy as np\n    \n    def apply_gate(gate, target_qubit, state):\n    \"\"\"Applies a given quantum gate to a specific qubit or pair of qubits in a given state.\n    \n    Args:\n    gate (array): The quantum gate to be applied.\n    target_qubit (int or tuple): The index of the target qubit or pair of qubits to which the gate is applied.\n    state (array): The state vector to which the gate is applied.\n    \n    Returns:\n    array: The updated state vector after applying the gate.\n    \"\"\"\n    state = np.array([1, 0, 0, 0])\n    num_qubits = int(np.log2(len(state))) # Number of qubits in the state vector\n    \n    if isinstance(target_qubit, int):\n    target_qubit = (target_qubit,)  # Convert target_qubit to a tuple with a single element\n    # Single-qubit gate\n    gate_tensor = np.eye(2)\n    for i in range(1, num_qubits):\n    if i == target_qubit:\n    gate_tensor = np.kron(gate_tensor, gate)\n    else:\n    gate_tensor = np.kron(gate_tensor, np.eye(2))\n    \n    #assert np.shape(gate) == (2, 2), \"Gate must be a 2x2 matrix.\" # Check that the gate is a 2x2 matrix\n    state_matrix = state.reshape((2 ** target_qubit[1], 2 ** (num_qubits - target_qubit[1])))\n    assert 0 <= target_qubit[0] < num_qubits, f\"Target qubit index must be between 0 and {num_qubits - 1}.\" # Check that the target qubit index is valid\n    \n    # Compute the tensor product of the gate with the identity matrix on all qubits except the target qubit\n    gate_tensor = np.eye(2 ** (num_qubits - target_qubit[0] - 1))\n    gate_tensor = np.kron(np.kron(np.eye(2 ** target_qubit[0]), gate), gate_tensor) # Tensor product of the gate with the identity matrix\n    \n    \n    print(\"state shape before:\", state.shape)\n    state_matrix = state.reshape((2 ** target_qubit[1], 2 ** (num_qubits - target_qubit[1]))).T;\n    print(\"state matrix shape:\", state_matrix.shape)\n    updated_state_matrix = gate_tensor.dot(state_matrix) # Compute the matrix product of the gate with the state matrix\n    print(\"updated state matrix shape:\", updated_state_matrix.shape)\n    print(\"state shape after:\", updated_state_matrix.flatten().shape)\n    return updated_state_matrix.flatten() # Return the updated state vector\n    \n    # Apply the gate to the target qubit by computing the matrix product with the state vector\n    state_matrix = state.reshape((2 ** target_qubit, 2 ** (num_qubits - target_qubit))) # Reshape the state vector into a matrix\n    updated_state_matrix = gate_tensor.dot(state_matrix) # Compute the matrix product of the gate with the state matrix\n    return updated_state_matrix.flatten() # Return the updated state vector\n    isinstance(target_qubit, tuple) and len(target_qubit) == 2, \"Target qubit must be an integer or a tuple of two integers.\"\n    \n    # Two-qubit gate\n    assert gate.shape == (4, 4), \"Gate must be a 4x4 matrix.\" # Check that the gate is a 4x4 matrix\n    assert 0 <= target_qubit[0] < num_qubits and 0 <= target_qubit[1] < num_qubits and target_qubit[0] != target_qubit[1], \"Target qubit indices must be between 0 and {num_qubits - 1} and different from each other.\" # Check that the target qubits are valid and different\n    \n    # Compute the tensor product of the gate with the identity matrix on all qubits except the target qubits\n    gate_tensor = np.eye(2 ** (num_qubits - target_qubit - 1))\n    gate_tensor = np.kron(np.kron(np.eye(2 ** (target_qubit[1] - target_qubit[0] - 1)), gate), gate_tensor) # Tensor product of the gate with the identity matrix\n    gate_tensor = np.kron(np.kron(np.eye(2 ** target_qubit[0]), gate_tensor), np.eye(2 ** (num_qubits - target_qubit[1] - 1))) # Tensor product of the identity matrices with the gate_tensor\n    \n    # Apply the gate to the target qubit by computing the matrix product with the state vector\n    gate_tensor = np.kron(gate, np.eye(2 ** (target_qubit[1] - target_qubit[0] - 1))) # Tensor product of the gate with the identity matrix\n    gate_tensor = np.kron(np.eye(2 ** target_qubit[0]), gate_tensor) # Tensor product of the identity matrices and the gate\n    gate_tensor = np.kron(gate_tensor, np.eye(2 ** (num_qubits - target_qubit[1] - 1))) # Tensor product of the gate with the identity matrix\n    state_matrix = state.reshape((2 ** target_qubit[1], 2 ** (num_qubits - target_qubit[1]))) # Reshape the state vector\n    state_tensor = np.kron(state_matrix, np.eye(2 ** target_qubit[0])) # Tensor product of the state matrix with the identity matrix\n    updated_state_tensor = np.dot(gate_tensor, state_tensor.flatten()) # Compute the matrix product of the gate with the state tensor\n    updated_state_matrix = updated_state_tensor.reshape((2 ** target_qubit[1], 2 ** target_qubit[0])) # Reshape the updated state tensor into a matrix\n    # updated_state_matrix = gate_tensor.dot(state_matrix.flatten()) # Compute the matrix product of the gate with the state matrix\n    #return updated_state_matrix.flatten() # Return the updated state vector\n    return updated_state_matrix.reshape((2 ** target_qubit[1], 2 ** (num_qubits - target_qubit[1]))) # Return the updated state vector\n\ntest:\n\n    from quantemu import apply_gate\n    import numpy as np\n    \n    # Apply the Hadamard gate to the first qubit\n    state = np.array([1, 0, 0, 0]) # Initialize the state vector\n    H = np.array([[1, 1], [1, -1]]) / np.sqrt(2) # Hadamard gate\n    state = apply_gate(H, state, 0) # Apply the Hadamard gate to the first qubit\n    \n    # Print the updated state vector\n    print(state)\n\noutput:\n\n&#x200B;\n\n    state shape before: (4,)\n    state matrix shape: (4, 1)\n    updated state matrix shape: (4, 1)\n    state shape after: (4,)\n    [0.70710678 0.70710678 0.         0.        ]"}, {"title": "Automating your Mastodon profile with Python and Pipedream.com", "score": 0, "id": "114rit6", "url": "https://stefanbohacek.com/blog/automating-your-mastodon-profile-with-pipedream-com/", "comms_num": 1, "created": 1676652662.0, "body": ""}, {"title": "android-strings-converter: A Python package that converts Android strings.xml file to any file type supported by the package.", "score": 6, "id": "114qatr", "url": "https://www.reddit.com/r/Python/comments/114qatr/androidstringsconverter_a_python_package_that/", "comms_num": 3, "created": 1676650280.0, "body": "This is my first published Python package, so I'm very happy to present you guys a tool that I've been missing for some time during my Android developer career. \n\nI tried to do the whole process of converting a **strings.xml** file into a spreadsheet in Google Sheets by hand and, even though you can do it with the option **Data > Split text to columns**, it involves wasting your time generating the spreadsheet manually instead of the more time-efficient solution of running a Python script to achieve that with any file format supported by the package, which are the following:\n\n- Google Sheets integration\n- XLSX  \n- ODS  \n- HTML  \n- CSV  \n- YAML  \n- JSON\n\nTo install the package, you just have to run `pip install android-strings-converter`. To use it in your project, you can import the function you want with `from android_strings_converter import to_<FILE TYPE>`. For instance, if we were to convert the XML to XLSX, we would use the function `to_xlsx`.\n\nMoreover, you can run it as a standalone program. You can find more details about it in the [GitHub repository](https://github.com/HenestrosaConH/android-strings-converter).\n\nI'm planning to make an iOS version as well as making a web version.\n\nIf you find some issues, please contact me through this thread or create an issue [here](https://github.com/HenestrosaConH/android-strings-converter/issues/new/choose).\n\nThank you for the attention! Hope you find this useful :)"}, {"title": "Neptyne Tutorial A programmable spreadsheet that runs Python", "score": 255, "id": "114nhrx", "url": "https://neptyne.com/neptyne/tutorial", "comms_num": 25, "created": 1676646332.0, "body": ""}, {"title": "How do you begin to tackle a programming problem without getting overwhelmed?", "score": 58, "id": "114k3mj", "url": "https://www.reddit.com/r/Python/comments/114k3mj/how_do_you_begin_to_tackle_a_programming_problem/", "comms_num": 110, "created": 1676639868.0, "body": "I just don't know where to start. I usually start with setting up my variables but then everything after that just seems random and all over the place. Any advice?\n\n&#x200B;\n\nEdit: thank you to everyone here who has given me suggestions, advice, and encouraging words. It's been so heartwarming reading all the comments and learning from you. "}, {"title": "Python module for observing performance of ML models (like ChatGPT3) in production", "score": 1, "id": "114jr5q", "url": "https://www.reddit.com/r/Python/comments/114jr5q/python_module_for_observing_performance_of_ml/", "comms_num": 0, "created": 1676638812.0, "body": "Hello all \ud83d\udc4b\r\n\r\nI have been working on an open source project (my very first actually \ud83d\ude42) that helps observe ML models in production.\r\n\r\nAfter spending 7+ years in the ML space, I\u2019m sure about 2 things: (1) ML models are widely used to make critical business decisions (2) ML models are never 100% accurate and typically degrade over time. Additionally, due to the black box nature of these models, it\u2019s very challenging to identify and fix their issues.\r\n\r\nTo address this issue, I developed UpTrain that helps data scientists to understand how their ML models are performing in production and continuously improve them over time by monitoring their performance, checking for (data) distribution shifts and collecting edge cases to retrain them upon\r\n\r\nSome features to highlight \ud83d\ude80\r\n\r\n\u2705 Complete visibility into your model\u2019s online health via real-time dashboards\r\n\u2705 Automatically collects outliers and edge cases\r\n\u2705  Identifies data distribution shifts\r\n\u2705  Monitors quality of object embeddings\r\n\u2705 Model explainability\r\n\u2705 Continuously retrains and improves your model\r\n\r\nGITHUB: https://github.com/uptrain-ai/uptrain\r\n\r\nWould appreciate any feedback (the harsher the better) \ud83d\ude03 To show your appreciation and to follow our progress please star us \ud83c\udf1f"}, {"title": "Build a job search API the microservice way with Python and CloudAMQP/RabbitMQ", "score": 1, "id": "114j4c5", "url": "https://www.cloudamqp.com/blog/microservices-and-message-queues-part-4-introducing-the-demo-project.html", "comms_num": 0, "created": 1676636699.0, "body": ""}, {"title": "I made a simple sandbox Chemistry game that simulates basic reactions with \"Mol-ecules\" (a mol of molecules).", "score": 8, "id": "114diaf", "url": "https://www.reddit.com/r/Python/comments/114diaf/i_made_a_simple_sandbox_chemistry_game_that/", "comms_num": 0, "created": 1676618545.0, "body": "https://preview.redd.it/4az6oyyw8pia1.png?width=1920&format=png&auto=webp&v=enabled&s=73eac6f7b4bbc746b492fbee51bc0a49e4cc3af6\n\nThe \"MolEcule Chemistry Simulator\" is a Python Pygame Chemistry Simulator that allows you to simulate the reactions between different elements and molecules. You can spawn in a mol (or more) of any basic element from the periodic table and see how it reacts with other elements.\n\n&#x200B;\n\nThis is my very first python project (that actually works). It's not finished yet, but I'm at the point where feedback is starting to become necessary. I have no idea if the info i'm finding online for these reactions or chemicals is accurate. I also don't know if me code is really all that nice to look at or if I should look into certain best practices.\n\n&#x200B;\n\nI appreciate anyone who downloads and tries it out. \n\nSource Code: [https://github.com/adamivar/MolEcule-Chemistry-Simulator](https://github.com/adamivar/MolEcule-Chemistry-Simulator)\n\nDownload:  [https://drive.google.com/file/d/1zk\\_iCjAuCVrXg2edj\\_4g1DQ3IH-HSuxB/view?usp=sharing](https://drive.google.com/file/d/1zk_iCjAuCVrXg2edj_4g1DQ3IH-HSuxB/view?usp=sharing) "}, {"title": "Single-page web app in Python, but with all logic done in the browser.", "score": 5, "id": "114axwn", "url": "https://www.reddit.com/r/Python/comments/114axwn/singlepage_web_app_in_python_but_with_all_logic/", "comms_num": 40, "created": 1676609324.0, "body": "I'm interested in creating a single-page web app in Python, where all business logic will be done in the browser, without any data getting sent to a backend server. So it can be hosted as a static website like GitHub pages or AWS S3.\n\nAn example would be QR code generator, where everything is done in the browser using Javascript, but without writing Javascript code and using only Python. I'm ok with using Javascript libraries, assuming I can call them from my Python code :)\n\nAre any of the modern frameworks like Streamlit, Dash, Anvil, JustPy, Pynecone, or NiceGUI capable of creating this kind of app?"}, {"title": "Company project : Django/React, Streamlit or non-web based GUI?", "score": 13, "id": "1149swv", "url": "https://www.reddit.com/r/Python/comments/1149swv/company_project_djangoreact_streamlit_or_nonweb/", "comms_num": 26, "created": 1676605554.0, "body": "Hello all, \n\nSo we have a project at work to gather and standardize all our scripts under one umbrella, with one app that includes all the scripts (obviously with the choice to use one or another depending on what you want to do). Those scripts need to make some machines run, analyze data, produce reports, etc.\n\nSo in summary, we want to have a toolbox accessible everywhere by everyone with an internet connection. \n\nThey've been quite far behind the curve since there's not even a proper Gitlab yet. \n\nWhat I'm wondering is what would be the best in the mid-long term for standardizing the work. \n\nI'm quite familiar with Streamlit since I've already built some independant tool on it, but not so much with Django/React. I think the learning curve with Django is a bit longer but that in the long term it's probably cleaner and gives you more control over your exact needs. However, it will necessitate to learn some HTML/CSS as well, right? \n\nTo be clear, I'm far from being a developper, but i'll be managing that project and I don't want to give stupid requirements (only one being that it'll be in python) to the future team we'll create. I just want a proper way to do things since we're establishing the base of the future development environment in the company. \n\nI don't know if my message is clear but we're only in the initial phase of that project and I'm not extremely familiar with proper dev practices. \n\n&#x200B;\n\nCheers."}, {"title": "Theine 0.1.3 release, sync/async decorator added", "score": 7, "id": "1148b76", "url": "https://www.reddit.com/r/Python/comments/1148b76/theine_013_release_syncasync_decorator_added/", "comms_num": 5, "created": 1676600999.0, "body": "Theine: High performance in-memory cache inspired by [Caffeine](https://github.com/ben-manes/caffeine).\n\n[https://github.com/Yiling-J/theine](https://github.com/Yiling-J/theine)\n\nReadme contains benchmarks and more design details now, take a look if you are interested."}, {"title": "Cursive handwriting OCR: 98% accuracy achieved with the app ScriptReader!", "score": 205, "id": "1147mfp", "url": "https://www.reddit.com/r/Python/comments/1147mfp/cursive_handwriting_ocr_98_accuracy_achieved_with/", "comms_num": 19, "created": 1676598942.0, "body": "Hi there,\n\nHere is my latest project ScriptReader, which allows you to perform optical character recognition (OCR) on some handwritten notes that you wrote on special notebook pages generated with PrintANotebook.\n\nWith my preliminary dataset trained on my cursive handwriting, I was able to achieve over 98% accuracy! While there is room for improvement, this is a good result for cursive handwriting!\n\nCheck out my github repo at the following link: [https://github.com/LPBeaulieu/Handwriting-OCR-ScriptReader/blob/main/README.md](https://github.com/LPBeaulieu/Handwriting-OCR-ScriptReader/blob/main/README.md)\n\nhttps://preview.redd.it/57v6egjznnia1.png?width=1920&format=png&auto=webp&v=enabled&s=70e45dcf55855757513d91b9f3375160b4d82dcc"}, {"title": "Protect yourself from accidentally leaking sensitive information", "score": 12, "id": "1145nhv", "url": "https://www.reddit.com/r/Python/comments/1145nhv/protect_yourself_from_accidentally_leaking/", "comms_num": 0, "created": 1676593205.0, "body": "# \n\n[Protect yourself from accidentally leaking sensitive information](https://preview.redd.it/wrliv87s2nia1.jpg?width=512&format=pjpg&auto=webp&v=enabled&s=b49a105ce40c1fd83e40d2356f1d63c6799eb55b)\n\nThis article will introduce you to a tool called [detect-secrets](https://github.com/Yelp/detect-secrets) that can help protect you from accidentally leaking sensitive information in your code repositories.\n\n# Why\n\nIt is crucial to ensure that confidential data such as passwords and private keys are protected when working on software development projects. Nevertheless, there is a risk of unintentionally exposing this information by including it in code repositories, which can be accessed by anyone who has access to the repository. Hence, it is vital to implement precautions to prevent such data breaches.\n\n# What is [detect-secrets](https://github.com/Yelp/detect-secrets)\n\n[detect-secrets](https://github.com/Yelp/detect-secrets) is an open-source tool that can scan files within a repository for potentially sensitive information, such as private keys, API keys, passwords, or other sensitive data. It works by analyzing code for patterns that match certain types of secrets and alerts developers if any are found.\n\n# Prerequisites\n\nTo use [detect-secrets](https://github.com/Yelp/detect-secrets), you'll need to have [pipx](https://pypa.github.io/pipx/) and [pre-commit](https://pre-commit.com/) installed.\n\n[pipx](https://pypa.github.io/pipx/) is a tool for managing Python applications that are installed globally, but isolated from the system Python environment. This helps ensure that different applications don't interfere with each other. Install it as follows:\n\n    python3 -m pip install --user pipx\n\n[pre-commit](https://pre-commit.com/) is a tool for setting up and managing pre-commit hooks in your code repository. Pre-commit hooks are scripts that run before committing code, allowing you to catch issues before they're committed to the repository. Install it as follows:\n\n    pipx install pre-commit\n\n# Installation\n\nInstall [detect-secrets](https://github.com/Yelp/detect-secrets) as follows:\n\n    pipx install detect-secrets\n\n# Configure (per repository)\n\n**Step 1: Run the detect-secrets and create baseline file**\n\nRun the following command to scan your code repository for sensitive information and create a baseline file. This file will contain a list of known secrets for your repository:\n\n    detect-secrets scan > .secrets.baseline\n\nCheck the generated `.secrets.baseline` file thoroughly. If you have important secrets detected there, remove them from the code. Otherwise, mark each detected secret as verified by setting `is_verified: true`.\n\n*Example \\`.secrets.baseline\\` file:*\n\n    {\n      \"results\": {\n        \"README.rst\": [\n          {\n            \"type\": \"Secret Keyword\",\n            \"filename\": \"README.rst\",\n            \"hashed_secret\": \"077d5a0e0f8bb517307a6e92a73b0a9aa959233c\",\n            \"is_verified\": true,\n            \"line_number\": 311\n          }\n        ],\n        \"project/settings.py\": [\n          {\n            \"type\": \"Secret Keyword\",\n            \"filename\": \"project/settings.py\",\n            \"hashed_secret\": \"2e56b31925af569c194d2cc738d1f1bc22b63df0\",\n            \"is_verified\": true,\n            \"line_number\": 68\n          }\n        ]\n      },\n      \"generated_at\": \"2023-01-06T00:15:43Z\"\n    }\n\n**Step 2: Modify .pre-commit-config.yaml file**\n\nAdd the following line in your `.pre-commit-config.yaml` to include the [detect-secrets](https://github.com/Yelp/detect-secrets) hook. This will automatically run [detect-secrets](https://github.com/Yelp/detect-secrets) on your code before each commit, so you can catch any new secrets that have been accidentally added:\n\n    - repo: https://github.com/Yelp/detect-secrets\n      rev: v1.4.0\n      hooks:\n        - id: detect-secrets\n          name: Detect secrets\n          language: python\n          entry: detect-secrets-hook\n          args: ['--baseline', '.secrets.baseline']\n\n*Example \\`.pre-commit-config.yaml\\` file:*\n\n    exclude: \"^/migrations/\"\n    default_stages: [ commit, push ]\n    default_language_version:\n      python: python3\n    \n    repos:\n    \n      - repo: https://github.com/Yelp/detect-secrets\n        rev: v1.4.0\n        hooks:\n          - id: detect-secrets\n            name: Detect secrets\n            language: python\n            entry: detect-secrets-hook\n            args: ['--baseline', '.secrets.baseline']\n\n**Step 3: Install the pre-commit in your repository**\n\nNow that you've created a baseline file, you need to integrate [detect-secrets](https://github.com/Yelp/detect-secrets) into your workflow. To activate [pre-commit](https://pre-commit.com/) in your repository, run the following command:\n\n    pre-commit install\n\nOnce you've done that, you're ready to use [detect-secrets](https://github.com/Yelp/detect-secrets) to scan your code and prevent accidental leaks of sensitive information!\n\n# Epilogue\n\nYou're now ready to use [detect-secrets](https://github.com/Yelp/detect-secrets) to protect your code repository from accidental leaks of sensitive information. But remember, this tool is only one part of a comprehensive security strategy. Be sure to follow best practices for code security, such as:\n\n* Using secure passwords and private keys.\n* Limiting access to sensitive information only to those who need it.\n* Encrypting sensitive information in transit and at rest.\n* Regularly reviewing and updating security policies and procedures."}, {"title": "Decoupling Python Code: Implementing the Unit of Work and Repository Pattern", "score": 21, "id": "1145a25", "url": "https://shanenullain.medium.com/decoupling-python-code-implementing-the-unit-of-work-and-repository-pattern-6b3257e8b167", "comms_num": 0, "created": 1676592189.0, "body": ""}, {"title": "PyScript Examples: Python for JavaScript Developers", "score": 29, "id": "114431u", "url": "https://medium.com/sopmac-labs/pyscript-examples-python-for-javascript-developers-51aa51bb0dc1", "comms_num": 11, "created": 1676589035.0, "body": ""}, {"title": "I've written a pygame program that simulates spreading territory.", "score": 49, "id": "1141y4u", "url": "https://www.reddit.com/r/Python/comments/1141y4u/ive_written_a_pygame_program_that_simulates/", "comms_num": 10, "created": 1676583685.0, "body": "[Github Link](https://github.com/ProarchwasTaken/tld_territory)\n\nNot gonna lie, this has to be the most complicated python program I've ever written yet. So complicated it's kinda hard for me to explain what I have here but I'll try my best. In this program, if you place a red/blue tile using the Q/E key, it will automatically spread to other tiles. It can not spread to wall tiles which you can place by clicking on an empty tile. It's a pretty cool think to watch. You can increase the grid size by changing a couple variables but be warned, anything higher then the values I preset will cause the program to slow to a crawl during intensive times.\n\nTo play this, just run main.py or run the .exe. The exe is standalone, so it does not need any other files to work.\n\nOverall, is there anything I could've done better? Thank you for using this program!\n\n&#x200B;\n\nhttps://preview.redd.it/udzcmonjemia1.png?width=1323&format=png&auto=webp&v=enabled&s=8457cd85fa75e2156ae5a09751b35814d0050d8c"}, {"title": "I used Python and ChatGPT to control Hue lights", "score": 390, "id": "1141i77", "url": "https://www.reddit.com/r/Python/comments/1141i77/i_used_python_and_chatgpt_to_control_hue_lights/", "comms_num": 77, "created": 1676582593.0, "body": "I wrote a project which allows you to control Hue smart lights with text commands. It sends the command to GPT-3 to translate it into a JSON which can be parsed to control the lights. You can type things like 'make one light blue and the other yellow'.\n\nI wrote a Medium article about it [here](https://medium.com/@richardhayes777/using-chatgpt-to-control-hue-lights-37729959d94f) and it's on GitHub [here](https://github.com/rhayes777/hue_chat)."}, {"title": "With KYRSWY you can schedule, rec and upload to your cloud service your favorites radio shows! All with Python, docker, Rclone and Linux. (KYRSWY doesn't provide any radio streaming link)", "score": 1, "id": "1140u0h", "url": "https://www.reddit.com/r/Python/comments/1140u0h/with_kyrswy_you_can_schedule_rec_and_upload_to/", "comms_num": 0, "created": 1676580911.0, "body": "Hi guys.\nKYRSWY (Keep Your Radio Shows With You) is here to help you to rec all the radio stations you want.\n\nhttps://github.com/esturniolo/kyrswy\n\nAs the title says, KYRSWY itself doesn't provide any radio station link. You need to add them to the config file and then run the script.\nYou can have all the config file you want. One for radio show.\n\nI hope you like this and don't be shy to comment here or the Github Issue page.\n\nThanks!\nEnjoy!"}, {"title": "UK Train Departure board GUI", "score": 84, "id": "114091x", "url": "https://www.reddit.com/r/Python/comments/114091x/uk_train_departure_board_gui/", "comms_num": 15, "created": 1676579418.0, "body": "&#x200B;\n\n[Initial Screen](https://preview.redd.it/d776zemk0mia1.png?width=1912&format=png&auto=webp&v=enabled&s=c17b17155156f26e36349631f1dc28c7605a45e0)\n\n[Inputting a CRS Code](https://preview.redd.it/54twmimk0mia1.png?width=1918&format=png&auto=webp&v=enabled&s=ffcabc6e8826d4ea45683331018871654f542274)\n\n[Output ](https://preview.redd.it/ys91lhmk0mia1.png?width=1915&format=png&auto=webp&v=enabled&s=c48cfed87cba6d616bce7b988bebe602a9ed37cb)\n\nI made a train departure board using Python ([https://pastebin.com/8cQhW4hd](https://pastebin.com/8cQhW4hd)) (The link contains the code). It uses the national railway api to obtain the live train times plus tkinter for the GUI. If anyone has any other ideas of what to add or improve upon, let me know!"}, {"title": "Open source transactional notifications tool for developers built with Python and Node JS", "score": 1, "id": "113z8tl", "url": "https://www.reddit.com/r/Python/comments/113z8tl/open_source_transactional_notifications_tool_for/", "comms_num": 0, "created": 1676576794.0, "body": "Flasho is an open source, self hosted transactional notifications tool built with React, Python and NodeJS. You can set up transactional emails/smses in minutes using PostgreSQL triggers. This is the link to our Github repo: [https://github.com/flashohq/flasho](https://github.com/flashohq/flasho). Check it out and let me know what you think."}, {"title": "== vs is. Differences between keywords 'is' and '=='. Comparisons in Python. One of my first Python tutorials. I am really curious if I did a decent job.", "score": 0, "id": "113wbvq", "url": "https://www.devcuriosity.com/blog/details/equals-vs-is-differences-in-python-comparisons/", "comms_num": 3, "created": 1676569315.0, "body": ""}, {"title": "Tableu or Python library?", "score": 5, "id": "113wb5h", "url": "https://www.reddit.com/r/Python/comments/113wb5h/tableu_or_python_library/", "comms_num": 10, "created": 1676569262.0, "body": "I recently came across Tableu and up to now had only used Python libraries for data visualization, granted, pretty basic since it was for learning purposes and I'm still fairly new to Python in general. \n\nThe question is: Do you use Tableu (or any other similar software) or Plotly (or any other visualization library) and why?"}, {"title": "How to take user input in python || Python Programming Tutorials For Beginners", "score": 0, "id": "113u5mg", "url": "https://www.reddit.com/r/Python/comments/113u5mg/how_to_take_user_input_in_python_python/", "comms_num": 2, "created": 1676563766.0, "body": "[https://youtu.be/ddkSR1mGXqE](https://youtu.be/ddkSR1mGXqE)\n\n In this video, you will learn how to use Python for various tasks such as data analysis, web development, artificial intelligence, and more. By the end of this tutorial, you will have the knowledge and skills to start your own projects in Python. If you are a beginner who wants to learn Python programming, this is the video for you!"}, {"title": "Pydantic just announced funding and they are building a new cloud service!", "score": 4, "id": "113u28u", "url": "https://techcrunch.com/2023/02/16/sequoia-backs-open-source-data-validation-framework-pydantic-to-commercialize-with-cloud-services/", "comms_num": 2, "created": 1676563525.0, "body": ""}, {"title": "Sippycup: an in-browser Flask sandbox (i.e. Flask with training wheels)", "score": 69, "id": "113t4nd", "url": "https://www.reddit.com/r/Python/comments/113t4nd/sippycup_an_inbrowser_flask_sandbox_ie_flask_with/", "comms_num": 12, "created": 1676561102.0, "body": "I've put together a proof-of-concept app for learning Flask in the browser: [sippycup.app](https://sippycup.app) ([github](https://github.com/travisdoesmath/sippycup)). \n\nSippycup uses Pyodide, so it can be built to be a completely static web page. Users can start learning Flask even if they don't have python installed yet. It even works on your phone!\n\nSince Pyodide (currently) doesn't have sockets for http.server, the app mocks up routing between the iframe and the web worker running Pyodide. \n\nTo simulate making requests from the served page, `fetch` is monkey patched with a shim function that handles messages between the iframe and main app. \n\nCode sketches can be shared by clicking the \"save\" icon in the top left, which will create a unique URL (for example: https://sippycup.app/marvelous-groovy-restaurant)\n\nIf you run into any weird behavior, please feel free to log an issue on github. \n\nThanks!"}, {"title": "How to Flush the Output of the Python Print Function \u2013 Real Python", "score": 0, "id": "113sd6u", "url": "https://realpython.com/python-flush-print-output/", "comms_num": 0, "created": 1676559049.0, "body": ""}, {"title": "Domain model with SQLAlchemy", "score": 3, "id": "113rqnl", "url": "https://www.reddit.com/r/Python/comments/113rqnl/domain_model_with_sqlalchemy/", "comms_num": 0, "created": 1676557321.0, "body": "Next article on my blog. This time I did a deeper look at the domain model and its persistence using SQLAlchemy.\n\nIf you are wondering how to approach the persistence of business entities with their unawareness of the existence of the database, I invite you to read it :)\n\n&#x200B;\n\n[https://blog.szymonmiks.pl/p/domain-model-with-sqlalchemy/](https://blog.szymonmiks.pl/p/domain-model-with-sqlalchemy/)"}, {"title": "Easiest to use Python package for drawing / animating vector-based images?", "score": 2, "id": "113qv87", "url": "https://www.reddit.com/r/Python/comments/113qv87/easiest_to_use_python_package_for_drawing/", "comms_num": 5, "created": 1676554820.0, "body": "I'm looking for people's opinions on this. What are your experiences with the various packages you've used? I've been trying to find something that'll let me draw simple shapes with labels, connect up those shapes with edges, and have those shapes move around on my screen. Hopefully there'd also be some functionality to dump out an image (e.g. PNG or SVG or whatever). It doesn't need to be able to support a trillion objects or complex fill patterns or anything like that.\n\nMy hope was that there was some pre-made library that'll just let me pump in some arbitrary Python objects, where I can just update some x/y/z/label/whatever properties to animate it. Haven't found anything like this yet. I was thinking about trying to create something on top of Pycairo.\n\nThoughts?"}, {"title": "Sample code for time lapse visualisations", "score": 3, "id": "113ng2y", "url": "https://www.reddit.com/r/Python/comments/113ng2y/sample_code_for_time_lapse_visualisations/", "comms_num": 2, "created": 1676543026.0, "body": "I've seen some really cool time lapse visualisations on r/dataisbeautiful using Python and I was wondering if anyone had any, or knew if there was any sample code out there that I could look at and use as a base to try replicate it with other data sets?"}, {"title": "How to debug Python applications", "score": 18, "id": "113n1dd", "url": "https://www.reddit.com/r/Python/comments/113n1dd/how_to_debug_python_applications/", "comms_num": 1, "created": 1676541373.0, "body": "# \n\n[How to debug Python applications](https://preview.redd.it/s5qps8ns2jia1.jpg?width=512&format=pjpg&auto=webp&v=enabled&s=c8bfff4fbe2c52e9611f2169fa4cb9de91829322)\n\n## Introduction\n\nIn software development, testing is an essential part of ensuring that code works as intended. One critical aspect of testing is debugging, which involves finding and fixing errors or bugs in a program. In this article, we'll explore how to debug Python applications and highlight some of the most commonly used methods for debugging Python code.\n\n## Debugging options\n\nWhen it comes to debugging Python, there are multiple options available, and you should consider which one suits your needs best. Two popular options are IDE debugging tools and package debugging tools.\n\n## IDE Debugging Tools\n\nIDEs like PyCharm and VSCode offer debugging tools that allow you to set breakpoints in your code and run it in debug mode. This allows you to step through your code line by line, inspect variables, and evaluate expressions. Here are some resources for learning how to use the debugging tools in PyCharm and VSCode:\n\n* [Debugging Python in PyCharm](https://www.jetbrains.com/help/pycharm/debugging-your-first-python-application.html)\n* [Debugging Python in VSCode](https://code.visualstudio.com/docs/python/debugging)\n\n## Package Debugging Tools\n\nLinks:\n\n* [pdb](https://docs.python.org/3/library/pdb.html)\n* [ipdb](https://pypi.org/project/ipdb/)\n* [IPython](https://ipython.readthedocs.io/en/stable/interactive/tutorial.html)\n\nPython also offers built-in debugging tools, such as the `pdb` module, which allow you to set breakpoints and step through your code in a console-based debugger. Additionally, there are alternative packages like `ipdb`, which is based on the `IPython` tool and provides a more powerful debugger. Here is an example of how to use the `pdb` module in your code:\n\n**my\\_module.py**\n\n    def something(val: str) -> int:\n        val += \" world\"\n        import pdb; pdb.set_trace()  # set a breakpoint\n        # If you want a more powerful debugger, use `ipdb`.\n        # Note, that this requires installation of `ipdb`\n        #     $ pip install ipdb\n        # Then, comment out the `mport pdb; ...` and \n        # uncomment the following line:\n        # import ipdb; ipdb.set_trace()\n    \n    my_str = \"Hello\"\n    \n    print(something(my_str))\n\nIn the example code above, we set a breakpoint in the `something()` function using the `pdb.set_trace()` function. When the code reaches this point, it will pause execution and drop into the debugger, allowing you to inspect variables and step through the code.\n\n**Run it**\n\n    python my_module.py\n\n**What would you see**\n\n    $ python my_module.py \n    --Return--\n    > /home/artur.local/repos/tryouts/debug/my_module.py(3)something()->None\n    -> import pdb; pdb.set_trace()  # set a breakpoint\n    (Pdb) locals()\n    {'val': 'Hello world', 'pdb': <module 'pdb' from '/usr/lib64/python3.11/pdb.py'>, '__return__': None}\n    (Pdb) val\n    'Hello world'\n    (Pdb)\n\nStudy `pdb` documentation for more.\n\n**Good to know**\n\nIt works similarly with your web views (like, FastAPI/Flask/Django).\n\n    def your_view(request):\n       # ...\n       import pdb; pdb.set_trace()\n\n## Best Practices for Debugging Python\n\nWhile debugging is an essential part of the development process, there are some best practices to keep in mind to ensure that your code remains clean and maintainable.\n\n## Don't commit your debug code!\n\nLinks:\n\n* [precommit](https://pre-commit.com/)\n* [ruff](https://github.com/charliermarsh/ruff)\n\nOne critical practice is to avoid committing your debug code to your code repository. Debug code can clutter your codebase and make it more challenging to maintain. To avoid committing debug code, use a tool like `pre-commit` and linters like `ruff` to catch and prevent it from being committed.\n\n## Debugging in Docker\n\nIf you use Docker for development, you need to configure your `docker-compose.yml` to allow debugging. You can do this by setting the `stdin_open` and `tty` options for your service:\n\n    version: '3'\n    \n    services:\n      api:\n        # Other configuration\n        stdin_open: true\n        tty: true\n\nAfter configuring your Docker environment, assuming that you have it running already, you can find the container ID (`CONTAINER ID`) for your service (in the example above - `api` service) using `docker ps` and attach to it with the `docker attach` (`docker attach {CONTAINER ID}`) command to start debugging. Note, that you will need to run the `docker attach` command in a separate shell/terminal tab and that's where the debug prompt will appear.\n\n## Conclusion\n\nDebugging Python is an essential skill for any developer, and it's crucial to understand the available options and best practices. In this article, we explored two popular options for debugging Python: IDE debugging tools and package debugging tools. We also highlighted some best practices for debugging in Python, including avoiding committing debug code and configuring Docker for debugging. With this knowledge, you'll be better equipped to debug Python applications and write clean, maintainable code."}, {"title": "Use \"distributed pandas\" to scale your data science workflow!", "score": 2, "id": "113mzof", "url": "https://www.reddit.com/r/Python/comments/113mzof/use_distributed_pandas_to_scale_your_data_science/", "comms_num": 4, "created": 1676541180.0, "body": "If you are looking for a way to scale your data science workflow, try [Xorbits](https://xorbits.io)!\n\nCheck out the [example](https://xorbits.io/blogs/nyc-taxi-analysis) for how to do it by changing a single line, and for how [Xorbits](https://xorbits.io) can be integrated with other Python libraries easily.\n\nTry the example on Google Colab: [https://colab.research.google.com/github/xprobe-inc/examples/blob/main/nyc-taxi/nyc-taxi.ipynb](https://colab.research.google.com/github/xprobe-inc/examples/blob/main/nyc-taxi/nyc-taxi.ipynb)\n\nOr you can run the example on Kaggle: [https://www.kaggle.com/code/cornmonster/notebooka9814fb1ba](https://www.kaggle.com/code/cornmonster/notebooka9814fb1ba)\n\n&#x200B;\n\nIf you are interested in learning more about Xorbits, please visit our project's Github for more information: [https://github.com/xprobe-inc/xorbits](https://github.com/xprobe-inc/xorbits)\n\nAny advice is welcome :D"}, {"title": "My Horrible Debugging Experience in Python", "score": 0, "id": "113mojo", "url": "https://www.reddit.com/r/Python/comments/113mojo/my_horrible_debugging_experience_in_python/", "comms_num": 3, "created": 1676539921.0, "body": " Find out how I turned a frustrating error into a hilarious coding adventure in my latest blog post. \n\nGrab some popcorn and get ready for a wild ride! \ud83c\udf7f\ud83d\udc0d\ud83d\udcbb **#Python** **#debugging** \n\n[https://adicode.ml/debugging-experience](https://adicode.ml/debugging-experience)"}, {"title": "Divide and Conquer: Merge Sort | Programming Algorithm", "score": 0, "id": "113m5g6", "url": "https://medium.com/p/59b6e5ebe1db", "comms_num": 0, "created": 1676537687.0, "body": ""}, {"title": "What\u2019s a good looking GUI package?", "score": 59, "id": "113jabc", "url": "https://www.reddit.com/r/Python/comments/113jabc/whats_a_good_looking_gui_package/", "comms_num": 42, "created": 1676526463.0, "body": "So I work from home and I made a Python script with PySimpleGUI to automate some of the tedious parts of the job. Well I (accidentally) showed it to my boss and he loved it. Now he wants me to make another script that can help automate the tedious parts of his job.\nHe also mentioned that he\u2019d like it if these programs can be given out to everyone in the company to automate everybody\u2019s work (or a big part of it). Functionality definitely comes first, but I\u2019d also like it if this looked up-to-date and professional. \n\nI\u2019ve played around with tkinter, but I\u2019m having trouble with how bland and bare and square it all looks. I tried custom tkinter as well, but it lacks some functionality I\u2019d need, such as Treeview and right-click menus.\n\nDoes anyone have any suggestions for anything Python libraries that might suit my needs? Bonus points if you have any suggestions for how I might do this outside of Python altogether, because I\u2019ve been thinking about learning another language."}, {"title": "Is there any interest in a typed configuration language?", "score": 1, "id": "113gfr9", "url": "https://www.reddit.com/r/Python/comments/113gfr9/is_there_any_interest_in_a_typed_configuration/", "comms_num": 17, "created": 1676516949.0, "body": "Hello, I am just trying to gauge whether this project I am working on would be helpful to anyone.\n\nI call it [thsl](https://github.com/Ayehavgunne/thsl/tree/develop) for Typed Human-readable Serialization Language. The main idea is to be a configuration language similar to yaml but with advanced type support. This is to avoid the problem of a config file getting deserialized into inconsistent data types. See [The Norway Problem](https://hitchdev.com/strictyaml/why/implicit-typing-removed/).\n\nAt first I just got the basic types like `int`s and `str`s working but then I thought about the other types of values usually contained in configs. Stuff like URLs or IP Addresses, dates, timestamps. These could all be deserialized into more useful objects automatically as well! Saving time in the code by no longer having to convert the read in values to more useful types.\n\nIs this something anyone would actually use?\n\nI am aware of several other ways to go about this. For instance, maintaining a config dataclass and then using a library like dacite to deserialize some json into your nicely typed object. I have done this many times myself. Another is the [Dhall](https://dhall-lang.org) configuration language which is a full blown programming language in itself! Seems a bit overkill but that is just me. There are so many ways to do configs, I wonder if I am doing anyone a favor by trying to invent another. This time though it will be different!"}, {"title": "My first python package - Scopul!", "score": 23, "id": "113ep3z", "url": "https://www.reddit.com/r/Python/comments/113ep3z/my_first_python_package_scopul/", "comms_num": 7, "created": 1676511668.0, "body": "Scopul is a python package to extract info from MIDI files. It also has additional functionality such as generating PDFs and MusicXML. It is made from the Music21 library, Scopul is meant to be a simplified Music21 specifically for MIDIs. \n\nI made this as a means to learn about PyPi, packaging, pytest, docstring conventions and OOP. I am very new and any help will be appriciated.\n\nAlso I do not have a lot of knowledge about music and midis, so if I am missing something or got something wrong, please let me know!\n\n&#x200B;\n\nGitHub - [https://github.com/SwayamSahoo11742/Scopul](https://github.com/SwayamSahoo11742/Scopul)\n\nDoc and PyPi links in the GitHub\n\n&#x200B;\n\nThank you everyone! Any feedback is much appreciated!"}, {"title": "Thursday Daily Thread: Python Careers, Courses, and Furthering Education!", "score": 4, "id": "113ck82", "url": "https://www.reddit.com/r/Python/comments/113ck82/thursday_daily_thread_python_careers_courses_and/", "comms_num": 1, "created": 1676505608.0, "body": "Discussion of using Python in a professional environment, getting jobs in Python as well as ask questions about courses to further your python education!\n\n**This thread is not for recruitment, please see** r/PythonJobs **or the thread in the sidebar for that.**"}, {"title": "Intel Publishes Blazing Fast AVX-512 Sorting Library, Numpy Switching To It For 10~17x Faster Sorts", "score": 1029, "id": "113cb77", "url": "https://www.phoronix.com/news/Intel-AVX-512-Quicksort-Numpy", "comms_num": 83, "created": 1676504931.0, "body": ""}, {"title": "Hugging Face Teaches Transformers for Enterprise Use Cases", "score": 0, "id": "1139ynk", "url": "https://www.reddit.com/r/Python/comments/1139ynk/hugging_face_teaches_transformers_for_enterprise/", "comms_num": 0, "created": 1676498832.0, "body": "Hey folks - I wanted to put this live course from Hugging Face\u2019s top experts ([Rajiv Shah](https://www.linkedin.com/in/rajistics/), [Nicholas Broad](https://www.linkedin.com/in/nicholas-m-broad/), [Eno Reyes](https://www.linkedin.com/in/enoreyes/), [Derek Thomas](https://www.linkedin.com/in/dthomas/) and [Florent Gbelidji](https://www.linkedin.com/in/florentgbelidji/)) on your radar!\n\nThe course looks at how to utilize transformers to build reliable and scalable services. The course draws on the instructors and Hugging Face\u2019s expertise in implementing transformers in industry along with case studies, applied exercises and frameworks that you can share with your team and apply at work!\n\nIt kicks off on March 20 and you can use your learning stipend to cover - more info here:\n\n[https://www.getsphere.com/cohorts/transformers-for-enterprise-use-cases?source=Sphere-Com-r-py](https://www.getsphere.com/cohorts/transformers-for-enterprise-use-cases?source=Sphere-Comm-)"}, {"title": "REST, gRPC, Thrift, Oh My! One consistent, open-source test application to RULE THEM ALL", "score": 6, "id": "1139n1f", "url": "https://www.reddit.com/r/Python/comments/1139n1f/rest_grpc_thrift_oh_my_one_consistent_opensource/", "comms_num": 0, "created": 1676498022.0, "body": "Hey Reddit, it\u2019s Skylar (sorry, not Sauron). I\u2019m the sassy, scarf-wearing spokesperson for a shiny six-month-old startup. We\u2019re passionate about building tools to eliminate some of the most obnoxious pain points in cloud-native testing, and letting the world know that sporting a scarf isn\u2019t just for winter anymore. But enough about me and my silly obsessions.\n\nVery early on we were hungry for well-maintained, microservice-based applications that we could test against. When we looked at what was out there, we found Weavesocks for REST, and Online Boutique for gRPC. Thrift, unfortunately, was MIA. Besides the lack of Thrift, there were other challenges. Using two different applications made it hard to have consistent test cases across REST and gRPC.\n\nWe needed something better. We wanted an open-source sample microservices application that could be used for cloud-native development and testing across different APIs\u2013REST, gRPC, Thrift. Something extensible (e.g. adding GraphQL, eventually). While Weavesocks doesn\u2019t look like it was being maintained, Google seems to be keeping up support for Online Boutique. So we forked Online Boutique and added REST and Thrift support in addition to gPRC.\n\nWe figured the community could benefit from [this project](https://github.com/letsramp/sample-microservices). So I\u2019m here to share it with you, and to get your invaluable feedback. We hope to keep maintaining this project with your help and insights. Please let me know what you think. All feedback will be super appreciated!\n\nSkylar (really, not Sauron)"}, {"title": "Thoughts on Python packaging and upper bounds - conda-forge vs pypi", "score": 1, "id": "1136ujx", "url": "https://prefix.dev/blog/the_python_packaging_debate", "comms_num": 0, "created": 1676490772.0, "body": ""}, {"title": "Adding Text & Transparency to Images for Featured Image Creation", "score": 4, "id": "1135c3x", "url": "https://www.reddit.com/r/Python/comments/1135c3x/adding_text_transparency_to_images_for_featured/", "comms_num": 0, "created": 1676486801.0, "body": "Hey everyone, after [posting yesterday](https://www.reddit.com/r/learnpython/comments/112klr6/comment/j8ko15b/?context=3) on r/LearnPython and getting some guidance on a module that could help me automate the creation of featured images that are basically a semi-transparent image + some text, I wanted to leave the final solution for anyone that could benefit from it.\n\nBefore moving on to the code, this is an example of the final output:\n\n&#x200B;\n\nhttps://preview.redd.it/qu043e8mbeia1.png?width=2048&format=png&auto=webp&v=enabled&s=0afb99596f64a4bdaa997b573fae9f3dd83f73ed\n\n&#x200B;\n\nEDIT: This does not work for multiline text. Only single line. If your text is too long or font size too big it'll go outside the image. \n\n    from PIL import Image, ImageDraw, ImageFont\n    \n     #This first part opens your image and adds transparency\n    img=Image.open('/content/image1.jpg').convert(\"RGBA\")\n    data=img.getdata()  #you'll get a list of tuples\n    newData=[]\n    for a in data:\n        a=a[:3] #you'll get your tuple shorten to RGB\n        a=a+(75,) #change the 100 to any transparency number you like between (0,255)\n        newData.append(a)\n    img.putdata(newData) #you'll get your new img ready\n    \n    #once done with edits to the main image we move on to the text\n    W, H = img.size\n    msg = \"Art Therapy\"\n    myFont = ImageFont.truetype(\"OpenSans-ExtraBold.ttf\", 200)\n    \n    im = Image.new(\"RGBA\",(W,H),(255, 255, 255, 0)) #Create a new, transparent image to add text to\n    draw = ImageDraw.Draw(im) #create drawing context\n    \n    w,h = myFont.getsize(msg) #Gets the size of the text\n    #Text placement is calculated based on the size of the final text & image. \n    #As it is, text will be centered vertically & horizontally. \n    \n    draw.text(((W-w)/2,(H-h)/2), msg, font=myFont, fill=(3, 73, 252, 190)) \n    #Fill takes 4 arguments, the first 3 are RGB values (use google color picker)\n    # 4th argument is transparency. Pick between 0 and 255. \n    \n    out = Image.alpha_composite(img, im) #Merge base image with text. \n    out.save(f\"{msg}.png\", \"PNG\") #save. I use the text as a variable to make images #easy to keep track of. \n\nThis code is mostly not my own, but a merge of some code examples from the PIL documentation, [a way to add transparency](https://stackoverflow.com/questions/24731035/python-pil-0-5-opacity-transparency-alpha#:~:text=in%20the%20tuple.-,my%20frame%20code%3A,-from%20PIL%20import), and a [way to center text](https://stackoverflow.com/questions/1970807/center-middle-align-text-with-pil#:~:text=39-,One%20shall,-note%20that%20the) I found on StackOverflow. I simply put them together. I tried to comment everything to make it easy to understand but if you have any questions I'll try my best to answer them."}, {"title": "What's new in Matplotlib 3.7.0 (Feb 13, 2023)", "score": 3, "id": "1133hk1", "url": "https://matplotlib.org/stable/users/prev_whats_new/whats_new_3.7.0.html", "comms_num": 2, "created": 1676482212.0, "body": ""}, {"title": "10 Tips for adding SQLAlchemy to FastAPI", "score": 1, "id": "11332r2", "url": "https://bitestreams.com/blog/fastapi_sqlalchemy/", "comms_num": 0, "created": 1676481432.0, "body": ""}, {"title": "cyDoomGeneric: write your own doom ports in python!", "score": 17, "id": "1131y8s", "url": "https://www.reddit.com/r/Python/comments/1131y8s/cydoomgeneric_write_your_own_doom_ports_in_python/", "comms_num": 0, "created": 1676478510.0, "body": "&#x200B;\n\n[DooM Running in LibreOffice Calc](https://preview.redd.it/9pqytimbodia1.png?width=880&format=png&auto=webp&v=enabled&s=88168eb832c8f1dde5f7c82e74fd42d7b56c4511)\n\nDooM is a game that is famous for being able to run on any platform if given enough manpower to write a port. Well, porting doom has just become a whole lot easier, as you can now create your own port in python with just a couple dozen lines of code!\n\nCheck it out here: [https://github.com/wojciech-graj/cydoomgeneric](https://github.com/wojciech-graj/cydoomgeneric)\n\nThis project is NOT a re-write of the doom engine in Python. Instead, I have written python bindings for doomgeneric using cython, allowing you to implement doom with I/O of your own choosing. All you need to do is implement a couple of functions.\n\nCurrently, only \\*NIX systems are supported, but if anyone has any experience with C and Cython build systems on Windows (or any other platform for that matter) and has the patience to write one, I will gladly accept any pull requests.\n\n&#x200B;\n\n[DooM Running in Matplotlib's Pyplot](https://preview.redd.it/p2otxrgoodia1.png?width=648&format=png&auto=webp&v=enabled&s=d37445ce25969f369eb6e19daa3ba28400f0914c)"}, {"title": "A new Python package for working with 3D data", "score": 13, "id": "1131i0k", "url": "https://www.reddit.com/r/Python/comments/1131i0k/a_new_python_package_for_working_with_3d_data/", "comms_num": 0, "created": 1676477299.0, "body": "I created a new Python package which started off just as a few functions for my work, now restructured into a package seeing the use I have had for this.  The 3D Transforms package allows you to easily work with 3D data and make 3D transformations: work with sparse tensors, differentiate 3D operations, GPU acceleration, and more.\n\n[https://github.com/Rishit-dagli/3d-transforms](https://github.com/Rishit-dagli/3d-transforms)"}, {"title": "Linear and Binary Search Algorithms explained", "score": 0, "id": "112zwuw", "url": "https://youtu.be/u46nNK4lmeE", "comms_num": 0, "created": 1676473059.0, "body": ""}, {"title": "OAuth 1.0a Protocol with the HMAC-SHA1 signature using python.", "score": 0, "id": "112yh2w", "url": "https://www.reddit.com/r/Python/comments/112yh2w/oauth_10a_protocol_with_the_hmacsha1_signature/", "comms_num": 4, "created": 1676469140.0, "body": "Hey, How can i implement oauth 1.0a with hmac-sha1 signature for authentication and post request to tumbler /posts endpoint.\n\nI am using Tumblr api and trying to post new blog on the /posts endpoint but i am enable to do this. it says unauthorized in the response can any body guide me to a link or tutorial for this i have searched on internet not found any thing."}, {"title": "PEP 706: Filter for tarfile.extractall", "score": 5, "id": "112yeou", "url": "https://peps.python.org/pep-0706/", "comms_num": 1, "created": 1676468940.0, "body": ""}, {"title": "Textual 0.11.0 adds a beautiful Markdown widget", "score": 222, "id": "112xpuc", "url": "https://textual.textualize.io/blog/2023/02/15/textual-0110-adds-a-beautiful-markdown-widget/", "comms_num": 19, "created": 1676466857.0, "body": ""}, {"title": "Python Parquet and Arrow: Using PyArrow with Pandas", "score": 0, "id": "112wzpx", "url": "https://www.reddit.com/r/Python/comments/112wzpx/python_parquet_and_arrow_using_pyarrow_with_pandas/", "comms_num": 1, "created": 1676464465.0, "body": "I'm proud to say that PyCoders picked up another article of mine, [Python Parquet and Arrow: Using PyArrow with Pandas](https://codesolid.com/python-pyarrow-and-parquet/).  In it, we dig into using PyArrow with Pandas, and compare Pandas DataFrames and PyArrow tables.  We also spend some time comparing Parquet with other storage formats."}, {"title": "How many of you are involved in GUI development with Python?", "score": 81, "id": "112vw9s", "url": "https://www.reddit.com/r/Python/comments/112vw9s/how_many_of_you_are_involved_in_gui_development/", "comms_num": 90, "created": 1676460546.0, "body": "How long have you been in GUI development ?\nWhich one do you prefer Tkinter, PyQt or Kivy?"}, {"title": "I made an open-source tool to build, test, and deploy algotrading strategies!", "score": 27, "id": "112viv7", "url": "https://www.reddit.com/r/Python/comments/112viv7/i_made_an_opensource_tool_to_build_test_and/", "comms_num": 6, "created": 1676459104.0, "body": "Hi everyone,\n\n&#x200B;\n\nTL;DR: Check out the tool at [https://github.com/Finned-Digital-Solutions/hft-ext](https://github.com/Finned-Digital-Solutions/hft-ext)! Feel free to drop a \u2b50! Or just join the Discord: (see repo Discord badge on GitHub for link), your choice.\n\n&#x200B;\n\nI'm Finn - a Pythonista, part-time algotrader, and open-source enthusiast. Recently, I've built an open-source tool which allows anyone to get started algotrading on a paper or live account for free. The tool includes everything you need to get started with aggregating and analyzing data through the Yahoo Finance and Alpaca APIs, and on top of that is completely free! It supports new strategies in an easily extensible way, meaning that you can get your own strategies up, running, and tested in just minutes.\n\n&#x200B;\n\nMy goal was initially to test out some high frequency trading strategies that I came up with, but along the way I realized that I could add methods on to support any custom strategy. Now that I feel confident with the documentation I've written, the code, and the GUI, I want to\n\nshare it with all of you. \n\n&#x200B;\n\nSome cool features that I haven't mentioned already are:\n\n\\- realtime: monitors stocks by the minute to buy, sell, and hold based on a strategy.\n\n\\- oh, and the stocks it monitors are completely configurable: currently, the defaults are about 500 of the largest companies by market cap.\n\n\\- comes out of the box with an ARIMA strategy: basically determines the probability of increase or decrease to influence actions.\n\n\\- growing community on Discord.\n\n\\- free, open-source, and non-tracking. Other tools are expensive, log your data and/or strategies, or just are a black-box for extensibility.\n\n&#x200B;\n\nI'd really appreciate your support on this, either through suggesting features in Discord or starring the repo. I plan to enter talks with a venture capital firm where I'd pitch this tool to fund continued development; So the larger the community I can show, the better!"}, {"title": "Python Developers Beware: Clipper Malware Found in 450+ PyPI Packages!", "score": 32, "id": "112vgw5", "url": "https://www.reddit.com/r/Python/comments/112vgw5/python_developers_beware_clipper_malware_found_in/", "comms_num": 15, "created": 1676458892.0, "body": "apologies, post form didn't parse the link or I just simply forgot to post the link.  \nLink: [https://thehackernews.com/2023/02/python-developers-beware-clipper.html](https://thehackernews.com/2023/02/python-developers-beware-clipper.html)"}, {"title": "Built a little evolution simulator in python and pygame!", "score": 12, "id": "112uxkk", "url": "https://www.reddit.com/r/Python/comments/112uxkk/built_a_little_evolution_simulator_in_python_and/", "comms_num": 2, "created": 1676456810.0, "body": "[https://two119.itch.io/dynasty](https://two119.itch.io/dynasty)\n\nThe world is dangerous. Anyone can\u00a0starve, get eaten, lost, outcompeted or outrun\u00a0 - and the answer to all these problems is to evolve! Look down upon your beings like a god and watch them struggle to survive over the generations. Join them yourself and see how long your bloodline survives! Fill the world with deadly predators, or give your creatures free reign in a paradise. The choice is yours!\u00a0\n\nSource on github: [https://github.com/Two119/Dynasty](https://github.com/Two119/Dynasty)\n\nhttps://preview.redd.it/k7wr0v98xbia1.png?width=1260&format=png&auto=webp&v=enabled&s=ff7bdb2a94f2d802d97b5e87a3b94cee03336ff4"}, {"title": "From \u201ciron manual\u201d to \u201cironman\u201d \u2014 augmenting GPT for fast editable memory to enable context aware question & answering", "score": 243, "id": "112tsgr", "url": "https://www.reddit.com/r/Python/comments/112tsgr/from_iron_manual_to_ironman_augmenting_gpt_for/", "comms_num": 8, "created": 1676452129.0, "body": "**TL;DR** We show how an update-able and domain specific memory (via an external knowledge base) can be added to GPT to perform question and answering for products and chat agents. Some very humorous interactions arise when GPT is connected to an external knowledge base and forced to use irrelevant context in answering questions.\n\nArticle: [https://www.marqo.ai/blog/from-iron-manual-to-ironman-augmenting-gpt-with-marqo-for-fast-editable-memory-to-enable-context-aware-question-answering](https://www.marqo.ai/blog/from-iron-manual-to-ironman-augmenting-gpt-with-marqo-for-fast-editable-memory-to-enable-context-aware-question-answering)  \nCode: [https://github.com/marqo-ai/marqo/tree/mainline/examples/GPT-examples](https://github.com/marqo-ai/marqo/tree/mainline/examples/GPT-examples)\n\nhttps://i.redd.it/noemv004jbia1.gif\n\n**HUMAN**:are you scared of anything?\n\n**SUPERHERO**:No, nothing can stop me! However, I do try to avoid using chemicals such acetone, benzene, scouring cleaning agents, etc. on my steam iron as these may cause damage to the soleplate.\n\n**HUMAN**:where did you grow up?\n\n**SUPERHERO**:Well, I grew up around the world, training my powers of steam ironing and self-cleaning. I've learned a lot of tips and tricks from different cultures on how to iron fabrics of various fibres without causing them any damage.\\*\n\nhttps://i.redd.it/c3z5sry6jbia1.gif\n\nHi all,\n\nI have been playing around with LLM's for retrieval augmented generation/augmented retrieval. Conditioning the prompts for GPT in this way for question and answering works really well! I am really interested to hear other peoples experience developing here. I found getting around the context limits required some care and is domain specific. I settled on using highlights and then growing the text around this while respecting exact token limits. Other approaches of doing summaries was taking a while and could lose some context in the process. I suspect this approach will get better though, particularly as more open source models become available.\n\nGetting GPT to cite the references in the answer was a bit unreliable. I settled on using a cross-encoder (used for re-ranking) to score the retrieved sources of information with GPT's answer. I think this has some promise and takes much less time than the GPT response itself. GPT still cited sources even though it was not asked too, I wonder if this is in response to it being used that way a lot.\n\nFinally, does anyone have recommendations for GPT3 like performance for open-source models? It seems flan-t5 and its variants are the way to go - any other ones?"}, {"title": "Console (TUI) password manager written in python", "score": 13, "id": "112rppp", "url": "https://www.reddit.com/r/Python/comments/112rppp/console_tui_password_manager_written_in_python/", "comms_num": 2, "created": 1676443715.0, "body": "Hi there!\n\nI created a crossplatform password manager with terminal user interface (for the guys who loves terminal-stuff as well as I do). It's absolutely free and open source.\n\nThere is the [repository](https://github.com/doopath/PasswordManager) and the [PyPI page](https://pypi.org/project/doopass).\n\nWhen this project was just a cli tool I posted it in the python subreddit and a few guys told me how to enhance the encrypting algorithm. So if you have any questions or ideas please tell me (on reddit, email or smth), that will make the **doopass** better."}, {"title": "Secure a Python3 Flask API with Authentication and Authorization", "score": 74, "id": "112o6d4", "url": "https://www.reddit.com/r/Python/comments/112o6d4/secure_a_python3_flask_api_with_authentication/", "comms_num": 5, "created": 1676431203.0, "body": "This example shows you how to secure a Python3 Flask API with both authentication and authorization using ZITADEL. ZITADEL is an IAM solution, which offers a SaaS and is also opensource if you want to self-host and need more flexibility. Supports both B2C and B2B.\n\nThe Python API will have public, private, and private-scoped routes and check if a user is authenticated and authorized to access the routes. The private routes expect an authorization header with a valid access token in the request. The access token is used as a bearer token to authenticate the user when calling the API. The API will validate the access token on the [introspect endpoint](https://zitadel.com/docs/apis/openidoauth/endpoints#introspection_endpoint) and will receive the user's roles from ZITADEL.\n\nLink - [https://zitadel.com/docs/examples/secure-api/python-flask](https://zitadel.com/docs/examples/secure-api/python-flask)"}, {"title": "Wednesday Daily Thread: Beginner questions", "score": 2, "id": "112k5lb", "url": "https://www.reddit.com/r/Python/comments/112k5lb/wednesday_daily_thread_beginner_questions/", "comms_num": 4, "created": 1676419210.0, "body": "New to Python and have questions? Use this thread to ask anything about Python, there are no bad questions!\n\nThis thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response."}, {"title": "How did you cement your skills?", "score": 52, "id": "112h42i", "url": "https://www.reddit.com/r/Python/comments/112h42i/how_did_you_cement_your_skills/", "comms_num": 47, "created": 1676411250.0, "body": "I\u2019ve been learning Python for a long time but I feel like I am constantly googling the basics and get lost with intermediate and advanced tasks. Please tell me- what did you do to cement your skills? I keep hearing people say that it\u2019s an easy language to learn and while I can read it, it\u2019s a different thing to just solve problems with it and I\u2019m started to feel like an idiot."}, {"title": "A Comprehensive Guide & Hand-Curated Resource List for Prompt Engineering and LLMs on Github", "score": 0, "id": "112ed7k", "url": "https://www.reddit.com/r/Python/comments/112ed7k/a_comprehensive_guide_handcurated_resource_list/", "comms_num": 0, "created": 1676404218.0, "body": "Greetings,\n\nExcited to share with all those interested in Prompt Engineering and Large Language Models (LLMs)!\n\nWe've hand-curated a comprehensive, Free & Open Source resource list on Github that includes everything related to Prompt Engineering, LLMs, and all related topics. We've covered most things, from papers and articles to tools and code!\n\nHere you will find:\n\n* \ud83d\udcc4 Papers in different categories such as Prompt Engineering Techniques, Text to Image Generation, Text Music/Sound Generation, Text Video Generation etc.\n* \ud83d\udd27 Tools & code to build different GPT-based applications\n* \ud83d\udcbb Open-Source & Paid APIs\n* \ud83d\udcbe Datasets\n* \ud83e\udde0 Prompt-Based Models\n* \ud83d\udcda Tutorials from Beginner to Advanced level\n* \ud83c\udfa5 Videos\n* \ud83e\udd1d Prompt-Engineering Communities and Groups for discussion\n\n**Resource list**: [https://github.com/promptslab/Awesome-Prompt-Engineering](https://github.com/promptslab/Awesome-Prompt-Engineering)\n\nWe hope it will help you to get started & learn more about Prompt-Engineering. If you have questions, Join our discord for Prompt-Engineering, LLMs and other latest research discussions\n\n[https://discord.com/invite/m88xfYMbK6](https://discord.com/invite/m88xfYMbK6)\n\nThank you :)  \n\n\nhttps://preview.redd.it/solryj7c86ia1.png?width=1770&format=png&auto=webp&v=enabled&s=6028f85731b044f2d245c033bd41bf761b022b89"}, {"title": "Why you should not use JWT for authentication, along with Flask implementation of session cookies", "score": 3, "id": "112e83v", "url": "https://blog.muhib.me/why-you-should-not-use-jwt-for-authentication", "comms_num": 5, "created": 1676403856.0, "body": ""}, {"title": "A Comprehensive Guide & Hand-Curated Resource List for Prompt Engineering and LLMs on Github", "score": 0, "id": "112e685", "url": "https://www.reddit.com/r/Python/comments/112e685/a_comprehensive_guide_handcurated_resource_list/", "comms_num": 0, "created": 1676403720.0, "body": "Greetings,\n\nExcited to share with all those interested in Prompt Engineering and Large Language Models (LLMs)!\n\nWe've hand-curated a comprehensive, Free & Open Source resource list on Github that includes everything related to Prompt Engineering, LLMs, and all related topics. We've covered most things, from papers and articles to tools and code!\n\nHere you will find:\n\n* \ud83d\udcc4 Papers in different categories such as Prompt Engineering Techniques, Text to Image Generation, Text Music/Sound Generation, Text Video Generation etc.\n* \ud83d\udd27 Tools & code to build different GPT-based applications\n* \ud83d\udcbb Open-Source & Paid APIs\n* \ud83d\udcbe Datasets\n* \ud83e\udde0 Prompt-Based Models\n* \ud83d\udcda Tutorials from Beginner to Advanced level\n* \ud83c\udfa5 Videos\n* \ud83e\udd1d Prompt-Engineering Communities and Groups for discussion\n\n**Resource list**: [https://github.com/promptslab/Awesome-Prompt-Engineering](https://github.com/promptslab/Awesome-Prompt-Engineering)\n\nWe hope it will help you to get started & learn more about Prompt-Engineering. If you have questions, Join our discord for Prompt-Engineering, LLMs and other latest research discussions\n\n[https://discord.com/invite/m88xfYMbK6](https://discord.com/invite/m88xfYMbK6)\n\nThank you :)  \n\n\nhttps://preview.redd.it/solryj7c86ia1.png?width=1770&format=png&auto=webp&v=enabled&s=6028f85731b044f2d245c033bd41bf761b022b89"}, {"title": "A Comprehensive Guide & Hand-Curated Resource List for Prompt Engineering and LLMs on Github", "score": 0, "id": "112dhlv", "url": "https://www.reddit.com/r/Python/comments/112dhlv/a_comprehensive_guide_handcurated_resource_list/", "comms_num": 0, "created": 1676401965.0, "body": "Greetings,\n\nExcited to share with all those interested in Prompt Engineering and Large Language Models (LLMs)!\n\nWe've hand-curated a comprehensive, Free & Open Source resource list on Github that includes everything related to Prompt Engineering, LLMs, and all related topics. We've covered most things, from papers and articles to tools and code!\n\nHere you will find:\n\n* \ud83d\udcc4 Papers in different categories such as Prompt Engineering Techniques, Text to Image Generation, Text Music/Sound Generation, Text Video Generation etc.\n* \ud83d\udd27 Tools & code to build different GPT-based applications\n* \ud83d\udcbb Open-Source & Paid APIs\n* \ud83d\udcbe Datasets\n* \ud83e\udde0 Prompt-Based Models\n* \ud83d\udcda Tutorials from Beginner to Advanced level\n* \ud83c\udfa5 Videos\n* \ud83e\udd1d Prompt-Engineering Communities and Groups for discussion\n\n**Resource list**: [https://github.com/promptslab/Awesome-Prompt-Engineering](https://github.com/promptslab/Awesome-Prompt-Engineering)\n\nWe hope it will help you to get started & learn more about Prompt-Engineering. If you have questions, Join our discord for Prompt-Engineering, LLMs and other latest research discussions\n\n[https://discord.com/invite/m88xfYMbK6](https://discord.com/invite/m88xfYMbK6)\n\nThank you :)  \n\n\nhttps://preview.redd.it/solryj7c86ia1.png?width=1770&format=png&auto=webp&v=enabled&s=6028f85731b044f2d245c033bd41bf761b022b89"}, {"title": "How's The World, a sentiment analysis news aggregator app that generates happiness indices", "score": 11, "id": "112c7b3", "url": "https://www.reddit.com/r/Python/comments/112c7b3/hows_the_world_a_sentiment_analysis_news/", "comms_num": 4, "created": 1676398789.0, "body": "Hello boys and girls,  \nAround a month ago i started working pretty intensively on a news aggregating and data displaying web app. I invite you to give it a look. I am actively looking for contributors to the project to make it bigger and more efficient. the codebase is rather clean and any little improvement (or star) is more than welcome!\n\nI am convinced that this tool is something that can do good to the world if implemented correctly. The backend is a simple Flask app and the front is done with React (boooooh, I know)\n\nPlease contact me if you are even remotely interested. Thanks in advance <3\n\nHere are the links :  \n[https://github.com/TerenceGrover/HSTW](https://github.com/TerenceGrover/HSTW)  \n[https://hstw.io/](https://hstw.io/)\n\nCheers <3"}, {"title": "2d arrays in Python, Introduction and Explained", "score": 0, "id": "112bvmi", "url": "https://youtu.be/D5SkwIEpZY8", "comms_num": 0, "created": 1676397983.0, "body": ""}, {"title": "Migrating from Flask to FastAPI, Part 2", "score": 89, "id": "112btdf", "url": "https://www.reddit.com/r/Python/comments/112btdf/migrating_from_flask_to_fastapi_part_2/", "comms_num": 13, "created": 1676397829.0, "body": "I don't have chocolates for you all, but you might like this \ud83c\udf6b\n\n\ud83c\udf81 Migrating from Flask to FastAPI, Part 2\n\nThis is the juicy part, all the main code changes from Flask to FastAPI, including some auth and dependencies.\n\nFrom Forethought with love \u2764\ufe0f\n\n[https://engineering.forethought.ai/blog/2023/02/14/migrating-from-flask-to-fastapi-part-2/](https://engineering.forethought.ai/blog/2023/02/14/migrating-from-flask-to-fastapi-part-2/)\n\nFor the advanced stuff, including the g pseudo-global variable, more techniques migrating from Flask to FastAPI, and mixing async and await with blocking code, wait for the next part. \ud83d\ude0e"}, {"title": "I created a Python CLI for help me track my time on tasks.", "score": 1, "id": "112ad1v", "url": "https://www.reddit.com/r/Python/comments/112ad1v/i_created_a_python_cli_for_help_me_track_my_time/", "comms_num": 5, "created": 1676394167.0, "body": "Hey everyone!\n\nI wasn't exactly happy with existing task tracking solutions out there (some did not have all the features I wanted and some had way too many features) so I created a Python CLI to help me track my time on tasks. It can be found on [https://github.com/kkin1995/WorkTimeCLI](https://github.com/kkin1995/WorkTimeCLI)\n\nAs an overview, it gives you four options when you start: 1. Add a task, 2. Add an end time for an existing task, 3. Create a summary of recently completed tasks and 4. Exit. In option 1, it asks you for the task name and logs the start time from the current time. In option 2, it asks which task do you want to mark as complete and it logs the end time from the current time. And, in option 3, it creates a basic summary of recent tasks (number of hours spent on tasks) in a text file.\n\nI would love to have feedback and improvements, so if you are interested in trying it out, do let me know. Thanks for reading !"}, {"title": "Evaluating the Pros and Cons of Popular Data Pipeline Libraries in Python", "score": 2, "id": "1129q4s", "url": "https://youtube.com/watch?v=mi9f9zOaqM8&feature=shares", "comms_num": 1, "created": 1676392570.0, "body": ""}, {"title": "Python News: What's New From January 2023 \u2013 Real Python", "score": 8, "id": "1126wlc", "url": "https://realpython.com/python-news-january-2023/", "comms_num": 0, "created": 1676385485.0, "body": ""}, {"title": "Introducing \"Keyframed\" - simple, expressive datatypes for defining and manipulating curves", "score": 10, "id": "1126bnr", "url": "https://www.reddit.com/r/Python/comments/1126bnr/introducing_keyframed_simple_expressive_datatypes/", "comms_num": 0, "created": 1676383960.0, "body": "[Keyframed](https://github.com/dmarx/keyframed) is a library for working with curves that are parameterized by a handful of values (keyframes) and rules for traversing between those defined values (interpolators). The motivating use case is parameterizing generative art animations, but I tried to keep the scope on this project pretty narrow to encourage constructing generally useful abstractions. I'm currently working on an extension library built on top of this which implements some generative animation building blocks: this library just captures the logic for specifying and manipulating curves.\n\nEnough talk, let's see some examples!\n\n    from keyframed import Curve, SmoothCurve, ParameterGroup, Composition\n    \n    # zero valued up to t=10, then 10 valued from t=10 onwards\n    step_function_at_ten = Curve({0:0, 10:10})\n    \n    # linearly interpolate from 0 to 10, then 10 valued onwards\n    linear_to_ten = Curve({0:0, 10:10}, default_interpolation='linear')\n\n    # why stop at ten? Let's just define the curve via a lambda\n    linear = Curve.from_function(lambda x, _: x)\n    \n    # make it a sawtooth wave by adding looping\n    sawtooth = Curve({0:0, 10:10}, default_interpolation='linear', loop=True)\n    \n    # or a triangle wave by adding \"bounce\" looping\n    triangle = Curve({0:0, 10:10}, default_interpolation='linear', bounce=True)\n    \n    # we can do arithmetic directly on Curve objects\n    linear_to_ten_then_jump_to_twenty = step_function_at_ten + linear_to_ten\n    \n    # we can group curves together and do arithmetic on them as a unit\n    amplified_jagged_waves = ParameterGroup((sawtooth, triangle)) * linear_to_ten\n    \n    # or combine grouped curves using reduction operations\n    who_even_knows = Composition(amplified_jagged_waves, reduction='sum')\n    \n    # built-in plotting for convenience\n    who_even_knows.plot()\n\nExample of some generative art made using this: [https://twitter.com/DigThatData/status/1622884425364275201](https://twitter.com/DigThatData/status/1622884425364275201)\n\npretty picture for the thumbnail\n\nhttps://preview.redd.it/57rzglu1v5ia1.png?width=640&format=png&auto=webp&v=enabled&s=923a357dfd29573edbe3a74fae53505165de6280"}, {"title": "On migrating from data analysis to web programming", "score": 30, "id": "1125p07", "url": "https://www.reddit.com/r/Python/comments/1125p07/on_migrating_from_data_analysis_to_web_programming/", "comms_num": 15, "created": 1676382240.0, "body": "Hello! \n\nI write Python code for \\~5 years now, mostly oriented to data analysis projects, so I have a nice grasp of syntax, logic, dependencies and so on - pandas, numpy, charts and etc. \n\nCurrently I'm looking to take a different approach to Python, leaving the \"data things\" behind and approaching a new area to me which is web development.\n\nInstead of learning a new language from scratch (like Javascript or even Rust, which I tried), I guess it makes more sense keeping my things in Python. But I simply don't know where to begin. I spent a few weeks working with Flask/Django to learn the basics of back-end but I feel it's not enough. Tried to figure my way in [roadmap.sh](https://roadmap.sh) but, again, everything seems so blurry to me.\n\nI think my experience coding data projects brought me to a place where I know how to program but I don't have the \"good habits\" like using git properly, writing clean code and so on. I would like to know anybody in this /r that has experienced this and, specially, data coders who migrated to web development with Python to exchange a few words and get a \"real world\" example.\n\nMuch appreciated."}, {"title": "Visual Studio Extension Recommendations", "score": 28, "id": "1124vvr", "url": "https://www.reddit.com/r/Python/comments/1124vvr/visual_studio_extension_recommendations/", "comms_num": 15, "created": 1676379802.0, "body": "Setting up a new development environment and I'm curious about what Visual Studio (and Python) extensions everybody uses and recommends, both paid and free. I've personally never delved into extensions in the past, so any help at all would be greatly appreciated!"}, {"title": "Caching a lot of methods in Python", "score": 1, "id": "1124vr5", "url": "https://death.andgravity.com/caching-methods", "comms_num": 0, "created": 1676379790.0, "body": ""}, {"title": "Create Data Web Apps in Jupyter Notebook", "score": 3, "id": "1124nxw", "url": "https://www.reddit.com/r/Python/comments/1124nxw/create_data_web_apps_in_jupyter_notebook/", "comms_num": 0, "created": 1676379128.0, "body": "Have you ever want to share your Python notebook with non-technical users? It is now possible with open-source Mercury framework! You can turn your notebooks to web apps.\n\nMercury offers you set of interactive widgets, so your users can interact with notebook. Cells are automatically re-executed after widget update. There is an option to hide code, export notebook to PDF or share multiple notebooks.\n\nMercury source code is available at [GitHub](https://github.com/mljar/mercury)."}, {"title": "Data Classification (should @dataclass be the default?)", "score": 5, "id": "1122lt2", "url": "https://blog.glyph.im/2023/02/data-classification.html", "comms_num": 5, "created": 1676372168.0, "body": ""}, {"title": "Question Answering On Domain Knowledge With Semantic Search And Text Generation", "score": 1, "id": "11214cr", "url": "https://www.reddit.com/r/Python/comments/11214cr/question_answering_on_domain_knowledge_with/", "comms_num": 0, "created": 1676369421.0, "body": "Hello all,\n\nAnswering questions based on domain knowledge (like internal documentation,  contracts, books, etc.) is challenging because of the size of the domain  knowledge.\n\nAs you might know, Transformer-based NLP models are limited in terms of input size (most of the  time it's hard to use more than 2048 tokens). So you cannot really do  question answering on a huge knowledge base with these models.\n\nYou  can try to fine-tune your own text generation model for that (like GPT-3, GPT-J, etc.) but results are sometimes disappointing as the  fine-tuned models tends to forget some of the facts mentioned in the  dataset...\n\nThe strategy I prefer is about mixing semantic search and question answering. Here is a quick article about how to do it in Python:\n\n[https://nlpcloud.com/question-answering-on-domain-knowledge-with-semantic-search-and-text-generation.html](https://nlpcloud.com/question-answering-on-domain-knowledge-with-semantic-search-and-text-generation.html?utm_source=reddit&utm_campaign=h5d7a9cc-3816-11ed-a261-0242ac140009)\n\nAs far as I know, this is the best way to get both a fluent and user friendly answer while being very accurate.\n\nI would love to hear your thoughts on this. Can you think of a better strategy for question answering on very large documents in Python?\n\nJulien"}, {"title": "Python projects with best practices on Github?", "score": 569, "id": "111y9o2", "url": "https://www.reddit.com/r/Python/comments/111y9o2/python_projects_with_best_practices_on_github/", "comms_num": 69, "created": 1676365679.0, "body": "I'm always finding ways to upskill my coding skills with Python and write refactored code the right way. After just diving deep into Python, I've been looking around Github for Python projects that are examples of best practices and ones with a strong and well built architecture. I want ones that are organized and have proper documentation.\n\nFinding the ones that I really want might take some time, and I might end up getting something I don't want in the end. However, I did notice a few mentions of certain well-known ones in the sub. So with that being said, the ones that I believe match what I'm searching for are these repos:\n\n* [DocArray](https://github.com/docarray/docarray): It\u2019s a nested multimodal data structure library.\n* [scikit-learn](https://github.com/scikit-learn/scikit-learn): A machine learning module for SciPy.\n* [Production Tools](https://github.com/thuijskens/production-tools): It\u2019s a python repo used for data science projects.\n* [Requests](https://github.com/psf/requests): Simple HTTP library for Python.\n\nIf you've got any more links to  that you think would be worth checking out, that would be nice. Thanks in advance to anyone who can suggest."}, {"title": "How to use MQTT in Python (Paho)", "score": 7, "id": "111y7om", "url": "https://www.emqx.com/en/blog/how-to-use-mqtt-in-python", "comms_num": 1, "created": 1676365445.0, "body": ""}, {"title": "Scrape Indeed.com Job Portal using Python", "score": 7, "id": "111vrq3", "url": "https://www.scrapingdog.com/blog/scrape-indeed-using-python/", "comms_num": 2, "created": 1676355749.0, "body": ""}, {"title": "Tuesday Daily Thread: Advanced questions", "score": 3, "id": "111o7di", "url": "https://www.reddit.com/r/Python/comments/111o7di/tuesday_daily_thread_advanced_questions/", "comms_num": 0, "created": 1676332811.0, "body": "Have some burning questions on advanced Python topics? Use this thread to ask more advanced questions related to Python.\n\n**If your question is a beginner question we hold a beginner Daily Thread tomorrow (Wednesday) where you can ask any question! We may remove questions here and ask you to resubmit tomorrow.**\n\nThis thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response."}, {"title": "About copies and views in pandas", "score": 101, "id": "111n7lu", "url": "https://www.reddit.com/r/Python/comments/111n7lu/about_copies_and_views_in_pandas/", "comms_num": 7, "created": 1676330217.0, "body": "Get rid of SettingWithCopyWarning in pandas with Copy on Write\n\nHi,\n\nI am a member of the pandas core team (phofl on github). After writing about Copy on Write in pandas close to Christmas, I got some mixed feedback and saw quite some confusion about copies and views in pandas. I wrote a quick post explaining how to get views and when you get back a copy. This is meant for beginners in pandas/intermediate users that are not familiar with copies vs views. It is meant as a Ressource for users to quickly check if a operation is supposed to return a view vs a copy. I focused on stuff that will stay relevant with Copy on write, that is why you won\u2019t find any stuff about setting with copy warning and friends in there.\n\nhttps://medium.com/@patrick_hoefler/a-guide-to-efficient-data-selection-in-pandas-ea6dab640604\n\nHappy to have a discussion here or on medium."}, {"title": "Appreciating Design", "score": 7, "id": "111jfjk", "url": "https://lucumr.pocoo.org/2012/2/11/appreciating-design/", "comms_num": 0, "created": 1676320996.0, "body": ""}, {"title": "Big-O: How Code Slows as Data Grows", "score": 6, "id": "111jd5w", "url": "https://nedbatchelder.com/text/bigo.html", "comms_num": 0, "created": 1676320827.0, "body": ""}, {"title": "Snake Microbit card with Custom Engine", "score": 10, "id": "111icn4", "url": "https://www.reddit.com/r/Python/comments/111icn4/snake_microbit_card_with_custom_engine/", "comms_num": 0, "created": 1676318302.0, "body": "I made Snake on a Microbit card using My own Engine : [https://github.com/menitoon/Oz-Engine](https://github.com/menitoon/Oz-Engine) (Please Give feedback on the Github page or on the project)\n\nhttps://reddit.com/link/111icn4/video/sex1oxbah0ia1/player"}, {"title": "Passy (simple menubar password creator)", "score": 65, "id": "111i8wk", "url": "https://www.reddit.com/r/Python/comments/111i8wk/passy_simple_menubar_password_creator/", "comms_num": 16, "created": 1676318043.0, "body": "I made a small menubar app (Mac) that creates a random 16 digit password (letters, numbers, and special characters) and copies it to your clipboard.\n\nThe modules I used were: Rumps (menubar), strings (list of character options), secrets (randomization), pyperclip (copy), py2app (packaging)\n\nI'm still really new to Python as a whole and would appreciate any advice/tips you might have or what you think! \ud83d\ude42\n\n&#x200B;\n\nLink to Download: [https://www.mediafire.com/file/jjmvnwoy2u4oe1x/passy.zip/file](https://www.mediafire.com/file/jjmvnwoy2u4oe1x/passy.zip/file)\n\nLink to Code: [https://github.com/CoderEgloo/Passy](https://github.com/CoderEgloo/Passy)\n\n(Also if you want the app to stay in the menubar go to settings and set the app to \"Open on Login\")\n\n[Passy in action!](https://preview.redd.it/lq3mt4rvd0ia1.png?width=288&format=png&auto=webp&v=enabled&s=d3d074306a8c1c51eb4bcc30fd14d5933a77da61)"}, {"title": "Automating Spreadsheets with Python 101", "score": 19, "id": "111e4i0", "url": "https://blog.trymito.io/automating-spreadsheets-with-python-101/", "comms_num": 0, "created": 1676307777.0, "body": ""}, {"title": "3rd Party Streaming App", "score": 2, "id": "111crrs", "url": "https://www.reddit.com/r/Python/comments/111crrs/3rd_party_streaming_app/", "comms_num": 4, "created": 1676304425.0, "body": "Is it even legal to make a 3rd party app for something like Netflix,? For instance Reddit has Apollo, but Ive never seen something for a streaming service like Netflix. I would love to play around with making an app like this, particularly one that lets me access all my streaming content in one place. So I guess I have two questions? Are there examples of this I can look at? And is there a reason this idea isn\u2019t already wildly popular? Seems like a no brainer"}, {"title": "lord-of-the-clips (lotc): CLI app to download, trim/clip, and merge videos. Supports lots of sites. Downloads/trims at multiple points. Merges multiple clips.", "score": 25, "id": "111c8dn", "url": "https://www.reddit.com/r/Python/comments/111c8dn/lordoftheclips_lotc_cli_app_to_download_trimclip/", "comms_num": 1, "created": 1676303116.0, "body": "As per the [Pareto Principle](https://en.wikipedia.org/wiki/Pareto_principle), a video usually has its best parts. Hence, Reels/Stories/Shorts are popular nowadays. Likewise, I frequently download videos from various sites (e.g. YouTube, Facebook, Reddit, etc) using **various** online video downloaders, then I clip the most interesting/funniest/best parts only which is usually shared in private/chat groups or posted in social media sites. \n\nGot tired of these chores eventually, and I want a tool that given a URL and timestamps/durations will download the video AND auto-clip them at the desired segments in a single command AND should support multiple sites. This is the missing tool that I wanted. In the simplest case, this `lotc` CLI app will download the full video and could trim/merge the saved videos.\n\nThis app leverages these powerful libraries:\n- [yt-dlp](https://github.com/yt-dlp/yt-dlp): video downloader\n- [moviepy](https://github.com/Zulko/moviepy): video trimmer/merger\n- [click](https://github.com/pallets/click/): CLI app creator\n- [rich](https://github.com/Textualize/rich) / [rich-click](https://github.com/ewels/rich-click/): CLI app styler\n\nThe app supports YouTube, Facebook, Reddit, Twitter, TikTok, Instagram, LinkedIn, 9GAG, [etc](https://github.com/yt-dlp/yt-dlp/blob/master/supportedsites.md). It also uses subcommands for better separation of concerns, just like the `git`, `pyenv`, `docker`, or `kubectl` commands and their subcommand. \n\nMore details:\n- [GitHub](https://github.com/ranelpadon/lord-of-the-clips/)\n- [PyPI](https://pypi.org/project/lord-of-the-clips/)\n\n[Demo](https://github.com/ranelpadon/lord-of-the-clips/#-demo)"}, {"title": "GeoSpatial Analysis Using GeoPandas In Python", "score": 11, "id": "111c7xb", "url": "https://www.reddit.com/r/Python/comments/111c7xb/geospatial_analysis_using_geopandas_in_python/", "comms_num": 0, "created": 1676303084.0, "body": "&#x200B;\n\n[GeoSpatial Analysis Using GeoPandas In Python](https://preview.redd.it/vk26lom58zha1.jpg?width=334&format=pjpg&auto=webp&v=enabled&s=ba0a2a80b55e1a777911f0f28e866e72e05ce64a)\n\n[GeoSpatial Analysis Using GeoPandas In Python](https://spatial-dev.guru/2023/02/05/geospatial-analysis-using-geopandas-in-python/)"}, {"title": "GitHub - trytoolchest/lug: Run Python functions locally or in the cloud. Built for computational science.", "score": 6, "id": "1118zuq", "url": "https://github.com/trytoolchest/lug", "comms_num": 0, "created": 1676297081.0, "body": ""}, {"title": "Unit testing in Python", "score": 37, "id": "1116jo4", "url": "https://www.reddit.com/r/Python/comments/1116jo4/unit_testing_in_python/", "comms_num": 44, "created": 1676289524.0, "body": "Sorry if this is a silly question but I have a tiny amount of experience using Ruby in Visual Studio and in that I had access to irb for unit testing. Is there an equivalent for Python?"}, {"title": "Milli-py: Python bindings for Milli, an embeddable high-performance search engine", "score": 205, "id": "1116gav", "url": "https://github.com/AlexAltea/milli-py", "comms_num": 22, "created": 1676289180.0, "body": ""}, {"title": "will requests-html library work as selenium", "score": 0, "id": "1115k67", "url": "https://www.reddit.com/r/Python/comments/1115k67/will_requestshtml_library_work_as_selenium/", "comms_num": 15, "created": 1676285805.0, "body": "Hello, i have a doubt is it possible to use request-html library as a selinium. Like i want it to click on a particular button is it possible in request-html if so can anyone suggest me how that can be done or if you could point to an article would be much appreciated. Thanks on advance."}, {"title": "[Object Detection/ Class/ MOT Tracking/ REID/ RTSP]Human&Vehicle AI Analysis Toolbox", "score": 7, "id": "1113zmn", "url": "https://www.reddit.com/r/Python/comments/1113zmn/object_detection_class_mot_tracking_reid/", "comms_num": 0, "created": 1676279559.0, "body": "Hello everyone,\n\n\ud83d\ude03PaddleDetection have open-sourced Human&Vehicle Analysis Toolbox, with key features including \ud83c\udfc2**Human Behavior Analysis**(Smoking, Calling, Falling, Fighting...)/ **Attribute Analysis**(Gender, Age, Glasses, Tops, Shoes, Hats, Backpacks...)/ **In-Out Counting**/ **REID** and \ud83d\ude97**Vehicle Attribute Analysis**(Color, Type, Class...)/ **License Plate-Recognition**/ **Illegal Parking Analysis**/ **Vehicle Tracking**/ **Traffic flow Statistics**...We also integrate \ud83d\udcf7**rtsp** push&pull function! Quickly Experience in \u261e:\n\n[https://github.com/.../2.5/deploy/pipeline/README\\_en.md](https://github.com/PaddlePaddle/PaddleDetection/blob/release/2.5/deploy/pipeline/README_en.md?fbclid=IwAR0xsYyaPWSbzd2XRjfHTZbcEaqSO9oBVZUyWnf3sh5lrJCFkdRVPPVUi7k)\n\n&#x200B;\n\nhttps://preview.redd.it/nanci44x9xha1.png?width=1774&format=png&auto=webp&v=enabled&s=737d4ccb4c4590457aa4cc3962e7bf9875b273b6"}, {"title": "Use redis as session store. Does it actual improve performance ?", "score": 0, "id": "1112hen", "url": "https://www.reddit.com/r/Python/comments/1112hen/use_redis_as_session_store_does_it_actual_improve/", "comms_num": 10, "created": 1676273586.0, "body": ""}, {"title": "Monday Daily Thread: Project ideas!", "score": 2, "id": "110u5ze", "url": "https://www.reddit.com/r/Python/comments/110u5ze/monday_daily_thread_project_ideas/", "comms_num": 0, "created": 1676246410.0, "body": "Comment any project ideas beginner or advanced in this thread for others to give a try! If you complete one make sure to reply to the comment with how you found it and attach some source code! If you're looking for project ideas, you might be interested in checking out Al Sweigart's, [\"The Big Book of Small Python Projects\"](https://inventwithpython.com/bigbookpython/) which provides a list of projects and the code to make them work."}, {"title": "EOmaps v6.0 released!", "score": 14, "id": "110s83m", "url": "https://www.reddit.com/r/Python/comments/110s83m/eomaps_v60_released/", "comms_num": 0, "created": 1676241025.0, "body": "I just released EOmaps v6.0 !\n\nTurn your matplotlib/cartopy maps into interactive data-analysis widgets!\n\nSome of the highlights coming with v6.0:\n\n* Data is now dynamically pre-selected based on the visible extent.\n* Combine / stack or (transparently) overlay layers without having to re-draw the plot.\n* Use the QT5 companion widget to interact with the maps.\n* See how things are done in the extensive [documentation](https://eomaps.readthedocs.io/en/latest/?badge=latest).\n\nFor more info, checkout the GitHub repo: [https://github.com/raphaelquast/EOmaps](https://github.com/raphaelquast/EOmaps)\n\nLet me know what you think!\n\n&#x200B;\n\nhttps://i.redd.it/i6l0we5g3uha1.gif"}, {"title": "Testing a game through BDD methodology using Gherkin and Pytest-BDD", "score": 6, "id": "110pv6x", "url": "https://www.reddit.com/r/Python/comments/110pv6x/testing_a_game_through_bdd_methodology_using/", "comms_num": 2, "created": 1676234907.0, "body": "Hi, I have created an article on the topic of testing a game using the BDD methodology. Would appreciate it if you could check it out.  This article explains how we have automated testing of the game to a level where testers are almost not needed. \n\n&#x200B;\n\n[https://medium.com/@mirexiksi/testing-a-game-through-bdd-methodology-using-gherkin-and-pytest-bdd-e803874c7931](https://medium.com/@mirexiksi/testing-a-game-through-bdd-methodology-using-gherkin-and-pytest-bdd-e803874c7931)"}, {"title": "Automated WordPress post Generation from your CLI, using OpenAI GPT-3", "score": 6, "id": "110oy8z", "url": "https://www.reddit.com/r/Python/comments/110oy8z/automated_wordpress_post_generation_from_your_cli/", "comms_num": 5, "created": 1676232598.0, "body": "As a SEO guy I was always interested about how AI generated content would rank in the SERPs.\n\nSo I created a tool which generates it with an easy CLI command\n\nGitHub: https://github.com/grumpyp/blogging-with-ai\n\nYouTube: https://youtu.be/TlKTIwGa-S4"}, {"title": "random chat web app in flask", "score": 4, "id": "110n7u3", "url": "https://www.reddit.com/r/Python/comments/110n7u3/random_chat_web_app_in_flask/", "comms_num": 0, "created": 1676228139.0, "body": "Random chat web application using Flask and flask-socketio\n\nSupport string message and file sharing as attachment\n\nHere's the link of GitHub repo: https://github.com/hakiKhuva/random-chat"}, {"title": "Researchers Uncover Obfuscated Malicious Code in PyPI Python Packages", "score": 713, "id": "110l7ag", "url": "https://thehackernews.com/2023/02/researchers-uncover-obfuscated.html", "comms_num": 102, "created": 1676223094.0, "body": ""}, {"title": "Learning python and hopefully getting a job using Intel Celeron n4020", "score": 36, "id": "110hhvn", "url": "https://www.reddit.com/r/Python/comments/110hhvn/learning_python_and_hopefully_getting_a_job_using/", "comms_num": 36, "created": 1676213615.0, "body": "Hello everyone! So I wanted to know is it possible to learn python,django and work as a junior python developer using a low-end laptop of Intel(R) Celeron(R) N4020 CPU 1.10 GHz, 4 GB RAM, 120 GB SSD and 1 TB hdd. Please don't mock me if it's a sily question. I'm new to coding and I don't know much about CPU. Thank you in advance."}, {"title": "Fine-Tuning a Pre-trained BERT Transformer Model For Your Own Dataset", "score": 4, "id": "110f1mm", "url": "https://www.ai-contentlab.com/2023/02/bert-stands-for-bidirectional-encoder.html?m=1", "comms_num": 1, "created": 1676206340.0, "body": ""}, {"title": "GitHub - entropicalabs/openqaoa: Multi-backend SDK for quantum optimisation", "score": 3, "id": "110erdo", "url": "https://github.com/entropicalabs/openqaoa", "comms_num": 0, "created": 1676205366.0, "body": ""}, {"title": "Shared hosting that supports python!?", "score": 5, "id": "110e9d6", "url": "https://www.reddit.com/r/Python/comments/110e9d6/shared_hosting_that_supports_python/", "comms_num": 19, "created": 1676203673.0, "body": " Hello! i've just made a web bot i want to test but it's nowhere worth buying a vps for also i want it to be atleast 99% of the month working, ik it seems impossible but some guys gave me 3 websites that did it for 1\\~2$ like less than a month ago however i can't find the stuff he sent me."}, {"title": "Trees in Python explained !", "score": 12, "id": "110cekn", "url": "https://www.reddit.com/r/Python/comments/110cekn/trees_in_python_explained/", "comms_num": 0, "created": 1676196722.0, "body": "Hey guys, I wrote this article about trees in Python, I hope this is of use to some of you and also if you see any mistakes or improvements feel free to point it out  \nhttps://azizbelaweid.medium.com/597a91c93872"}, {"title": "Secret Santa From a Google Form With Python \ud83c\udf85", "score": 9, "id": "110bq8m", "url": "https://betterprogramming.pub/secret-santa-from-a-google-form-32841566d984", "comms_num": 0, "created": 1676194137.0, "body": ""}, {"title": "Python Interfaces: Choose Protocols Over ABC", "score": 63, "id": "1109kkx", "url": "https://levelup.gitconnected.com/python-interfaces-choose-protocols-over-abc-3982e112342e", "comms_num": 22, "created": 1676185368.0, "body": ""}, {"title": "YOLO-OpenAI-GPT3:A platform to test the integration between Yolo algorithm and OpenAI-GPT3", "score": 4, "id": "110864b", "url": "https://www.reddit.com/r/Python/comments/110864b/yoloopenaigpt3a_platform_to_test_the_integration/", "comms_num": 2, "created": 1676180203.0, "body": "Github Repo: [https://github.com/zawawiAI/yolo\\_gpt](https://github.com/zawawiAI/yolo_gpt)\n\nYou can change the Yolo pretrained models and OpenAI -GPT3 prompts\n\nhttps://reddit.com/link/110864b/video/1z600ilw3pha1/player"}, {"title": "Set not included in books as data type", "score": 0, "id": "1106svh", "url": "https://www.reddit.com/r/Python/comments/1106svh/set_not_included_in_books_as_data_type/", "comms_num": 6, "created": 1676175390.0, "body": "Hello everyone. I have noticed that set is not included in books such as Python Basics by Real Python and Python for Everybody by Dr. Chuck. These two have received good reviews on Amazon, by the way. Lists, tuple and dictionary are mentioned in both of the books but there is not a single word for set. I'm surprised as I expect such books to be fully comprehensive. Is set not so important as a data type? Why do you think this common omission is?"}, {"title": "How does colab connect to the cloud so fast", "score": 20, "id": "1105vap", "url": "https://www.reddit.com/r/Python/comments/1105vap/how_does_colab_connect_to_the_cloud_so_fast/", "comms_num": 4, "created": 1676172285.0, "body": "When I use GCP to deploy to python it takes time - how is google colab able to upload code install requirements and run code in the cloud so fast"}, {"title": "Learn how to scrape WordPress website posts and publish to your WP website(educational purposes only)", "score": 0, "id": "11049zb", "url": "https://www.reddit.com/r/Python/comments/11049zb/learn_how_to_scrape_wordpress_website_posts_and/", "comms_num": 1, "created": 1676167217.0, "body": "Hi Guys,\n\nVideo tutorial on how to run this script:\n\nYou will need to install all the necessary python libraries first.\n\n[https://www.youtube.com/watch?v=Md7cH3u3IcQ](https://www.youtube.com/watch?v=Md7cH3u3IcQ)\n\nand here is the actual Python code that scrapes WP website post IDs\n\n    import requests\n    import json\n    \n    headers ={\n        \"accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\",\n        \"accept-language\": \"ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7,de;q=0.6\",\n        \"cache-control\": \"max-age=0\",\n        \"sec-ch-ua\": \"\\\" Not A;Brand\\\";v=\\\"99\\\", \\\"Chromium\\\";v=\\\"101\\\", \\\"Google Chrome\\\";v=\\\"101\\\"\",\n        \"sec-ch-ua-mobile\": \"?0\",\n        \"sec-ch-ua-platform\": \"\\\"Windows\\\"\",\n        \"sec-fetch-dest\": \"document\",\n        \"sec-fetch-mode\": \"navigate\",\n        \"sec-fetch-site\": \"none\",\n        \"sec-fetch-user\": \"?1\",\n        \"upgrade-insecure-requests\": \"1\"\n      }\n    for i in range(1,10000):\n        try:\n            g = requests.get(\"https://example.com/wp-json/wp/v2/posts/?page=\"+str(i) , headers=headers)\n            js = g.json()\n            for j in js:\n                print(\"\"+str(j['id']))\n        except:\n            None\n\nJust change [example.com](https://example.com) with the WP website you want to scrape.Now when you run the script and you copy and paste all IDs, save them to a .txt file.\n\nThis is the code that takes all IDs from your .txt file and publish them to your WP website\n\n    import html\n    import json\n    import requests\n    import re\n    from slugify import slugify\n    from bs4 import BeautifulSoup\n    #def cleatattrs(html):\n        #g = requests.post(\"url\", data={\"userName\":html},verify=False)\n       # return g.text\n    \n    def pop(file):\n        with open(file, 'r+') as f: # open file in read / write mode\n            firstLine = f.readline() # read the first line and throw it out\n            data = f.read() # read the rest\n            f.seek(0) # set the cursor to the top of the file\n            f.write(data) # write the data back\n            f.truncate() # set the file size to the current size\n            return firstLine\n    \n    first = pop('test.txt')\n    \n    \n    def loadJson(url,id):\n        g1_post = json.loads( requests.get(\"https://\"+str(url).strip().rstrip().lstrip()+\"/wp-json/wp/v2/posts/\"+str(id).strip().rstrip().lstrip(),verify=False).text )\n        title   =  re.sub('&(.*?);','',str(g1_post['title']['rendered']))\n        try:\n            soup = BeautifulSoup(str(g1_post['content']['rendered']),\"html.parser\")\n            f = soup.find('div', attrs={\"id\":\"toc_container\"})\n            f.decompose()\n            content = str(soup)\n        except:\n            content = g1_post['content']['rendered']\n        #content =  cleatattrs( content )\n        cat_id = g1_post['categories'][0]\n        g1_cat = json.loads( requests.get(\"https://\"+url+\"/wp-json/wp/v2/Categories/\"+str(cat_id),verify=False).text )\n        cat_title = g1_cat['name']\n        return {\"title\":html.unescape(title).replace('[','').replace(']','').replace('/','').replace('SOLVED','').replace('Solved','').replace('\u201d','').replace('\u2019','').replace('-','').replace(':','').replace('\u201c','').replace('(','').replace(')','').replace('-',''),\"slug\":slugify(html.unescape(title).replace('[','').replace(']','').replace('/','').replace('SOLVED','').replace('Solved','').replace('\u201d','').replace('\u2019','').replace('-','').replace(':','').replace('\u201c','').replace('(','').replace(')','').replace('-','')),\"content\":content,\"cat_title\":cat_title,\"cat_slug\":slugify(cat_title)}\n    \n    data = loadJson(\"example.com\",first)\n    \n    \n    \n    from wordpress_xmlrpc import WordPressPost\n    from wordpress_xmlrpc import Client, WordPressPost\n    from wordpress_xmlrpc.methods import posts\n    from wordpress_xmlrpc.methods.posts import GetPosts, NewPost\n    from wordpress_xmlrpc.methods.users import GetUserInfo\n    from wordpress_xmlrpc import Client, WordPressPost\n    from wordpress_xmlrpc.compat import xmlrpc_client\n    from wordpress_xmlrpc.methods import media, posts\n    \n    \n    client = Client('https://yoururl/xmlrpc.php', 'username', 'pass')\n    post = WordPressPost()\n    post.title = data['title']\n    post.content = data['content']\n    post.terms_names = {\n      'category': [data['cat_title']]\n    }\n    post.id = client.call(posts.NewPost(post))\n    post.post_status = 'publish'\n    client.call(posts.EditPost(post.id, post))\n\nYou will just need to edit [example.com](https://example.com) again with the website you are scraping and your WP login details.\n\n&#x200B;\n\nThat's it.\n\n&#x200B;\n\nHappy coding"}, {"title": "How to Build a Dividend Investing Dashboard in Python and Streamlit", "score": 95, "id": "1103zrs", "url": "https://medium.com/@dreamferus/how-to-build-a-dividend-investing-dashboard-in-python-and-streamlit-a9ad2714c76b?sk=e4770b6ff9219ba2b94ec0f08a49af7c", "comms_num": 18, "created": 1676166346.0, "body": ""}, {"title": "Sunday Daily Thread: What's everyone working on this week?", "score": 11, "id": "1101tck", "url": "https://www.reddit.com/r/Python/comments/1101tck/sunday_daily_thread_whats_everyone_working_on/", "comms_num": 9, "created": 1676160008.0, "body": "Tell /r/python what you're working on this week! You can be bragging, grousing, sharing your passion, or explaining your pain. Talk about your current project or your pet project; whatever you want to share."}, {"title": "Which speciality of Python has highest demand?", "score": 46, "id": "10zz8ng", "url": "https://www.reddit.com/r/Python/comments/10zz8ng/which_speciality_of_python_has_highest_demand/", "comms_num": 50, "created": 1676152985.0, "body": "Machine Learning, Automatation, Web Development, Data Analysis, etc... There are so many, there are many courses also, so many options, so many paths."}, {"title": "Slooooowly gathering space / astronomy related Python libraries", "score": 14, "id": "10zy5w4", "url": "https://www.reddit.com/r/Python/comments/10zy5w4/slooooowly_gathering_space_astronomy_related/", "comms_num": 10, "created": 1676150133.0, "body": "Hey there,\n\n*before you comment that the markdown is almost blank please wait for a second!*\n\nI just created a small repository where I'd like to add Python related libraries (and also other FOSS tools) in a single markdown file. I think that way, every Python + Space interested person has a nice \"ground truth\" to look for and as far as I can tell, there is no such repo, yet.\n\nEvery library will get a short description and I'll also add a small video about its capabilities and functionalities on my channel.\n\nAnyway, for know I just added [Skyfield](https://rhodesmill.org/skyfield/) as a starting point. Astropy, SPICE, spiceypy, astroquery, and many more will be added shortly.\n\nIf you'd like to add tools or software, please open an Issue with the software's title + link.\n\nHope it'll grow over time!\n\nBest,\n\nThomas\n\n[https://github.com/ThomasAlbin/Space-Tools](https://github.com/ThomasAlbin/Space-Tools)"}, {"title": "Does anyone use python debugger?", "score": 68, "id": "10zuyqf", "url": "https://www.reddit.com/r/Python/comments/10zuyqf/does_anyone_use_python_debugger/", "comms_num": 111, "created": 1676141826.0, "body": "If so, how do you use it? Personally I have not seen anyone using it."}, {"title": "Setting Up VSCode For Python: A Complete Guide", "score": 1, "id": "10ztfh7", "url": "https://www.datacamp.com/tutorial/setting-up-vscode-python", "comms_num": 5, "created": 1676137884.0, "body": ""}, {"title": "Predicting New Chemicals With Machine Learning", "score": 2, "id": "10zt0d5", "url": "https://www.reddit.com/r/Python/comments/10zt0d5/predicting_new_chemicals_with_machine_learning/", "comms_num": 0, "created": 1676136786.0, "body": "I'm using python to predict new compounds as alternatives for perfluoroalkyls (PFAS). Once I recorded all the emerging useful compounds to us, I found a machine learning package to start generating new fragments. \n\n[https://sulstice.medium.com/lecture-003-approaching-machine-learning-as-an-organic-chemist-6fd9c9818e3](https://sulstice.medium.com/lecture-003-approaching-machine-learning-as-an-organic-chemist-6fd9c9818e3)\n\nI think it would be cool to extend these pipelines from the model into things like toxicity flags for chemicals."}, {"title": "The Heisenbug lurking in your async code", "score": 418, "id": "10zsuun", "url": "https://textual.textualize.io/blog/2023/02/11/the-heisenbug-lurking-in-your-async-code/", "comms_num": 48, "created": 1676136398.0, "body": ""}, {"title": "Just added voice support to ChatGPT to practice my english!", "score": 4, "id": "10znncf", "url": "https://www.reddit.com/r/Python/comments/10znncf/just_added_voice_support_to_chatgpt_to_practice/", "comms_num": 1, "created": 1676122122.0, "body": "This script allows users to interact with ChatGPT through voice commands and receive spoken responses. This can be useful for people who are trying to learn/practice English (like me) or just want to have a fun conversation with a chat bot without having to type anything.\n\nCheck it out at [chatgpt-voice-assistant](https://github.com/fabioo29/chatgpt-voice-assistant) and feel free to contribute (tested on Ubuntu 18 only)."}, {"title": "Python Packaging is Confusing - What can we Learn from Node.js?", "score": 0, "id": "10zmxr6", "url": "https://www.youtube.com/watch?v=n81PF514wYY", "comms_num": 9, "created": 1676119946.0, "body": ""}, {"title": "Distance and proximity analysis in Python", "score": 1, "id": "10zgpro", "url": "https://walker-data.com/posts/proximity-analysis/", "comms_num": 0, "created": 1676106365.0, "body": ""}, {"title": "Google Python Style Guide", "score": 22, "id": "10zfpj4", "url": "https://google.github.io/styleguide/pyguide.html", "comms_num": 10, "created": 1676102473.0, "body": ""}, {"title": "Rememberer package", "score": 4, "id": "10zfaxp", "url": "https://www.reddit.com/r/Python/comments/10zfaxp/rememberer_package/", "comms_num": 8, "created": 1676100928.0, "body": "Introducing Rememberer, a powerful tool for improving the performance of your Python functions!\n\nWith Rememberer, your functions will be able to remember their previous results, saving time and resources when your code is run again. Unlike other memoization packages, Rememberer's results persist even if your program is killed or the Python interpreter is restarted.\n\nSimply install via\n\n    pip install rememberer\n\nGive Rememberer a try today and see the difference it can make!\n\nGithub repositiry: [https://github.com/ChamRun/rememberer](https://github.com/ChamRun/rememberer)\n\n&#x200B;\n\n\\#Python #PerformanceOptimization #Memoization #FunctionalProgramming #PythonPackage"}, {"title": "Why Type Hinting Sucks!", "score": 928, "id": "10zdidm", "url": "https://www.reddit.com/r/Python/comments/10zdidm/why_type_hinting_sucks/", "comms_num": 302, "created": 1676094359.0, "body": "Type hints are great! But I was [playing Devil's advocate](https://www.reddit.com/r/Python/comments/10vh1v5/mypy_10_released/j7igi8q/?context=3) on a thread recently where I claimed actually type hinting can be legitimately annoying, especially to old school Python programmers.\n\nBut I think a lot of people were skeptical, so let's go through a made up scenario trying to type hint a simple Python package. Go to the end for a TL;DR.\n\n# The scenario \n\nThis is completely made up, all the events are fictitious unless explicitly stated otherwise (also editing this I realized attempts 4-6 have even more mistakes in them than intended but I'm not rewriting this again):\n\n**You** maintain a popular third party library `slowadd`, your library has many supporting functions, decorators, classes, and metaclasses, but your main function is:\n\n    def slow_add(a, b):\n        time.sleep(0.1)\n        return a + b\n\nYou've always used traditional Python duck typing, if a and b don't add then the function throws an exception. But you just dropped support for Python 2 and your users are demanding type hinting, so it's your next major milestone.\n\n# First attempt at type hinting\n\nYou update your function:\n\n    def slow_add(a: int, b: int) -> int:\n        time.sleep(0.1)\n        return a + b\n\nAll your tests pass, mypy passes against your personal code base, so you ship with the release note \"Type Hinting Support added!\"\n\n# Second attempt at type hinting\n\nUsers immediately flood your GitHub issues with complaints! MyPy is now failing for them because they pass floats to `slow_add`, build processes are broken, they can't downgrade because of internal Enterprise policies of always having to increase type hint coverage, their weekend is ruined from this issue.\n\nYou do some investigating and find that MyPy supports [Duck type compatibility](https://mypy.readthedocs.io/en/latest/duck_type_compatibility.html) for `ints -> floats -> complex`. That's cool! New release:\n\n    def slow_add(a: complex, b: complex) -> complex:\n        time.sleep(0.1)\n        return a + b\n\nFunny that this is a MyPy note and not a PEP standard...\n\n# Third attempt at type hinting\n\nYour users thank you for your quick release, but a couple of days later one user asks why you no longer support `Decimal`. You replace `complex` with `Decimal` but now your other MyPy tests are failing.\n\nYou remember Python 3 added [Numeric abstract base classes](https://docs.python.org/3/library/numbers.html), what a perfect use case, just type hint everything as `numbers.Number`.\n\nHmmm, MyPy doesn't consider any of integers, or floats, or Decimals to be numbers :(.\n\nAfter reading through [typing](https://docs.python.org/3/library/typing.html) you guess you'll just `Union` in the Decimals:\n\n    def slow_add(\n        a: Union[complex, Decimal], b: Union[complex, Decimal]\n    ) -> Union[complex, Decimal]:\n        time.sleep(0.1)\n        return a + b\n\nOh no! MyPy is complaining that you can't add your other number types to Decimals, well that wasn't your intention anyway...\n\nMore reading later and you try overload:\n\n    @overload\n    def slow_add(a: Decimal, b: Decimal) -> Decimal:\n        ...\n\n    @overload\n    def slow_add(a: complex, b: complex) -> complex:\n        ...\n\n    def slow_add(a, b):\n        time.sleep(0.1)\n        return a + b\n\nBut MyPy on strict is complaining that `slow_add` is missing a type annotation, after reading [this issue](https://github.com/python/mypy/issues/3360) you realize that `@overload` is only useful for users of your function but the body of your function will not be tested using `@overload`. Fortunately in the discussion on that issue there is an alternative example of how to implement:\n\n\n    T = TypeVar(\"T\", Decimal, complex)\n\n    def slow_add(a: T, b: T) -> T:\n        time.sleep(0.1)\n        return a + b\n\n# Fourth attempt at type hinting\n\nYou make a new release, and a few days later more users start complaining. A very passionate user explains the super critical use case of adding tuples, e.g. `slow_add((1, ), (2, ))`\n\nYou don't want to start adding each type one by one, there must be a better way! You learn about Protocols, and Type Variables, and positional only parameters, *phew*, this is a lot but this should be perfect now:\n\n\n    T = TypeVar(\"T\")\n\n    class Addable(Protocol):\n        def __add__(self: T, other: T, /) -> T:\n            ...\n\n    def slow_add(a: Addable, b: Addable) -> Addable:\n        time.sleep(0.1)\n        return a + b\n\n\n# A mild diversion\n\nYou make a new release noting \"now supports any addable type\".\n\nImmediately the tuple user complains again and says type hints don't work for longer Tuples: `slow_add((1, 2), (3, 4))`. That's weird because you tested multiple lengths of Tuples and MyPy was happy.\n\nAfter debugging the users environment, via a series of \"back and forth\"s over GitHub issues, you discover that pyright is throwing this as an error but MyPy is not (even in strict mode). You **assume** MyPy is correct and move on in bliss ignoring there is actually a fundamental mistake in your approach so far.\n\n(**Author Side Note** - It's not clear [if MyPy is wrong](https://github.com/python/mypy/issues/14679) but it defiantly makes sense for Pyright to throw an error here, I've filed issues against both projects and a pyright maintainer has [explained the gory details](https://github.com/microsoft/pyright/issues/4613/) if you're interested. Unfortunately this was not really addressed in this story until the \"Seventh attempt\")\n\n\n# Fifth attempt at type hinting\n\nA week later a user files an issue, the most recent release said that \"now supports any addable type\" but they have a bunch of classes that can *only* be implemented using `__radd__` and the new release throws typing errors.\n\nYou try a few approaches and find this seems to best solve it:\n\n    T = TypeVar(\"T\")\n\n    class Addable(Protocol):\n        def __add__(self: T, other: T, /) -> T:\n            ...\n\n    class RAddable(Protocol):\n        def __radd__(self: T, other: Any, /) -> T:\n            ...\n\n    @overload\n    def slow_add(a: Addable, b: Addable) -> Addable:\n        ...\n\n    @overload\n    def slow_add(a: Any, b: RAddable) -> RAddable:\n        ...\n\n    def slow_add(a: Any, b: Any) -> Any:\n        time.sleep(0.1)\n        return a + b\n\nAnnoyingly there is now no consistent way for MyPy to do anything with the body of the function. Also you weren't able to fully express that when b is \"RAddable\" that \"a\" should not be the same type because Python type annotations don't yet support being able to exclude types.\n\n# Sixth attempt at type hinting\n\nA couple of days later a new user complains they are getting type hint errors when trying to raise the output to a power, e.g. `pow(slow_add(1, 1), slow_add(1, 1))`. Actually this one isn't too bad, you quick realize the problem is your annotating Protocols, but really you need to be annotating Type Variables, easy fix:\n\n    T = TypeVar(\"T\")\n\n    class Addable(Protocol):\n        def __add__(self: T, other: T, /) -> T:\n            ...\n\n    A = TypeVar(\"A\", bound=Addable)\n\n    class RAddable(Protocol):\n        def __radd__(self: T, other: Any, /) -> T:\n            ...\n\n    R = TypeVar(\"R\", bound=RAddable)\n\n    @overload\n    def slow_add(a: A, b: A) -> A:\n        ...\n\n    @overload\n    def slow_add(a: Any, b: R) -> R:\n        ...\n\n    def slow_add(a: Any, b: Any) -> Any:\n        time.sleep(0.1)\n        return a + b\n\n\n# Seventh attempt at type hinting\n\nTuple user returns! He says MyPy in strict mode is now complaining with the expression `slow_add((1,), (2,)) == (1, 2)` giving the error:\n\n> Non-overlapping equality check (left operand type: \"Tuple[int]\", right operand type: \"Tuple[int, int]\")\n\nYou realize you can't actually guarantee anything about the return type from some arbitrary `__add__` or `__radd__`, so you starting throwing `Any` Liberally around:\n\n    class Addable(Protocol):\n        def __add__(self: \"Addable\", other: Any, /) -> Any:\n            ...\n\n    class RAddable(Protocol):\n        def __radd__(self: \"RAddable\", other: Any, /) -> Any:\n            ...\n\n    @overload\n    def slow_add(a: Addable, b: Any) -> Any:\n        ...\n\n    @overload\n    def slow_add(a: Any, b: RAddable) -> Any:\n        ...\n\n    def slow_add(a: Any, b: Any) -> Any:\n        time.sleep(0.1)\n        return a + b\n\n\n# Eighth attempt at type hinting\n\nUsers go crazy! The nice autosuggestions their IDE provided them in the previous release have all gone! Well you can't type hint the world, but I guess you could include type hints for the built-in types and *maybe* some Standard Library types like Decimal:\n\nYou think you can rely on some of that MyPy duck typing but you test:\n\n    @overload\n    def slow_add(a: complex, b: complex) -> complex:\n        ...\n\nAnd realize that MyPy throws an error on something like `slow_add(1, 1.0).as_integer_ratio()`. So much for that nice duck typing article on MyPy you read earlier.\n\nSo you end up implementing:\n\n    class Addable(Protocol):\n        def __add__(self: \"Addable\", other: Any, /) -> Any:\n            ...\n\n    class RAddable(Protocol):\n        def __radd__(self: \"RAddable\", other: Any, /) -> Any:\n            ...\n\n    @overload\n    def slow_add(a: int, b: int) -> int:\n        ...\n\n    @overload\n    def slow_add(a: float, b: float) -> float:\n        ...\n\n    @overload\n    def slow_add(a: complex, b: complex) -> complex:\n        ...\n\n    @overload\n    def slow_add(a: str, b: str) -> str:\n        ...\n\n    @overload\n    def slow_add(a: tuple[Any, ...], b: tuple[Any, ...]) -> tuple[Any, ...]:\n        ...\n\n    @overload\n    def slow_add(a: list[Any], b: list[Any]) -> list[Any]:\n        ...\n\n    @overload\n    def slow_add(a: Decimal, b: Decimal) -> Decimal:\n        ...\n\n    @overload\n    def slow_add(a: Fraction, b: Fraction) -> Fraction:\n        ...\n\n    @overload\n    def slow_add(a: Addable, b: Any) -> Any:\n        ...\n\n    @overload\n    def slow_add(a: Any, b: RAddable) -> Any:\n        ...\n\n    def slow_add(a: Any, b: Any) -> Any:\n        time.sleep(0.1)\n        return a + b\n\nAs discussed earlier MyPy doesn't use the signature of any of the overloads and compares them to the body of the function, so all these type hints have to manually validated as accurate by you.\n\n# Ninth attempt at type hinting\n\nA few months later a user says they are using an embedded version of Python and it hasn't implemented the Decimal module, they don't understand why your package is even importing it given it doesn't use it. So finally your code looks like:\n\n    from __future__ import annotations\n\n    import time\n    from typing import TYPE_CHECKING, Any, Protocol, TypeVar, overload\n\n    if TYPE_CHECKING:\n        from decimal import Decimal\n        from fractions import Fraction\n\n\n    class Addable(Protocol):\n        def __add__(self: \"Addable\", other: Any, /) -> Any:\n            ...\n\n    class RAddable(Protocol):\n        def __radd__(self: \"RAddable\", other: Any, /) -> Any:\n            ...\n\n    @overload\n    def slow_add(a: int, b: int) -> int:\n        ...\n\n    @overload\n    def slow_add(a: float, b: float) -> float:\n        ...\n\n    @overload\n    def slow_add(a: complex, b: complex) -> complex:\n        ...\n\n    @overload\n    def slow_add(a: str, b: str) -> str:\n        ...\n\n    @overload\n    def slow_add(a: tuple[Any, ...], b: tuple[Any, ...]) -> tuple[Any, ...]:\n        ...\n\n    @overload\n    def slow_add(a: list[Any], b: list[Any]) -> list[Any]:\n        ...\n\n    @overload\n    def slow_add(a: Decimal, b: Decimal) -> Decimal:\n        ...\n\n    @overload\n    def slow_add(a: Fraction, b: Fraction) -> Fraction:\n        ...\n\n    @overload\n    def slow_add(a: Addable, b: Any) -> Any:\n        ...\n\n    @overload\n    def slow_add(a: Any, b: RAddable) -> Any:\n        ...\n\n    def slow_add(a: Any, b: Any) -> Any:\n        time.sleep(0.1)\n        return a + b\n\n\n# TL;DR\n\nTurning even the simplest function that relied on Duck Typing into a Type Hinted function that is useful can be painfully difficult.\n\nPlease always put on your empathetic hat first when asking someone to update their code to how you think it should work.\n\nIn writing up this post I learnt a lot about type hinting, please try and find edge cases where my type hints are wrong or could be improved, it's a good exercise.\n\n**Edit:** Had to fix a broken link.\n\n**Edit 2:** It was late last night and I gave up on fixing everything, some smart people nicely spotted the errors!\n\nI have a \"tenth attempt\" to address these error. But pyright complains about it because my overloads overlap, however I don't think there's a way to express what I want in Python annotations without overlap. Also Mypy complains about some of the user code I posted earlier giving the error [comparison-overlap](https://mypy.readthedocs.io/en/stable/error_code_list2.html#check-that-comparisons-are-overlapping-comparison-overlap), interestingly though pyright seems to be able to detect here that the types don't overlap in the user code.\n\nI'm going to file issues on pyright and mypy, but fundamentally they might be design choices rather than strictly bugs and therefore a limit on the current state of Python Type Hinting:\n\n    T = TypeVar(\"T\")\n\n    class SameAddable(Protocol):\n        def __add__(self: T, other: T, /) -> T:\n            ...\n\n    class Addable(Protocol):\n        def __add__(self: \"Addable\", other: Any, /) -> Any:\n            ...\n\n    class SameRAddable(Protocol):\n        def __radd__(self: T, other: Any, /) -> T:\n            ...\n\n    class RAddable(Protocol):\n        def __radd__(self: \"RAddable\", other: Any, /) -> Any:\n            ...\n\n    SA = TypeVar(\"SA\", bound=SameAddable)\n    RA = TypeVar(\"RA\", bound=SameRAddable)\n\n\n    @overload\n    def slow_add(a: SA, b: SA) -> SA:\n        ...\n\n    @overload\n    def slow_add(a: Addable, b: Any) -> Any:\n        ...\n\n    @overload\n    def slow_add(a: Any, b: RA) -> RA:\n        ...\n\n    @overload\n    def slow_add(a: Any, b: RAddable) -> Any:\n        ...\n\n    def slow_add(a: Any, b: Any) -> Any:\n        time.sleep(0.1)\n        return a + b"}, {"title": "sys Library in Python: Understanding Fundamentals", "score": 0, "id": "10zau08", "url": "https://technicbate.blogspot.com/2023/02/sys-library-python.html", "comms_num": 0, "created": 1676085544.0, "body": ""}, {"title": "Users of functools.cached_property, your feedback is requested", "score": 98, "id": "10z9rpx", "url": "https://discuss.python.org/t/finding-a-path-forward-for-functools-cached-property/23757/1", "comms_num": 9, "created": 1676082112.0, "body": ""}, {"title": "Programming with MIDI in Python | Getting started and sending MIDI Messages", "score": 30, "id": "10z8tkn", "url": "https://youtu.be/JYslZkc90GI", "comms_num": 6, "created": 1676079212.0, "body": ""}, {"title": "Saturday Daily Thread: Resource Request and Sharing! Daily Thread", "score": 0, "id": "10z6vol", "url": "https://www.reddit.com/r/Python/comments/10z6vol/saturday_daily_thread_resource_request_and/", "comms_num": 6, "created": 1676073610.0, "body": "Found a neat resource related to Python over the past week? Looking for a resource to explain a certain topic?\n\nUse this thread to chat about and share Python resources!"}, {"title": "A cli app to increase dev productivity.", "score": 0, "id": "10z1v1g", "url": "https://www.reddit.com/r/Python/comments/10z1v1g/a_cli_app_to_increase_dev_productivity/", "comms_num": 3, "created": 1676060280.0, "body": "freshenv is a command line application to provision and manage local developer environments. Build and develop your projects in completely isolated environments. Save, switch and restart your environments. Push and fetch developer environments from the cloud. Choose from a wide variety of flavours to get the developer tools you need.\nCheck it out at https://github.com/raiyanyahya/freshenv ."}, {"title": "Release John Snow Labs Spark-NLP 4.3.0: New HuBERT for speech recognition, new Swin Transformer for Image Classification, new Zero-shot annotator for Entity Recognition, CamemBERT for question answering, new Databricks and EMR with support for Spark 3.3, 1000+ state-of-the-art models and many more!", "score": 1, "id": "10z0v0w", "url": "https://github.com/JohnSnowLabs/spark-nlp/releases/tag/4.3.0", "comms_num": 0, "created": 1676057939.0, "body": ""}, {"title": "Visual GUI Desing.", "score": 15, "id": "10z045n", "url": "https://www.reddit.com/r/Python/comments/10z045n/visual_gui_desing/", "comms_num": 11, "created": 1676056169.0, "body": "Any recommendations for a visual GUI designer,  i know about qt but i'm looking for something easier."}, {"title": "Coding the Self-Attention Mechanism of Large Language Models in Python From Scratch", "score": 61, "id": "10yxzls", "url": "https://sebastianraschka.com/blog/2023/self-attention-from-scratch.html", "comms_num": 3, "created": 1676050990.0, "body": ""}, {"title": "Building REST Apis with Python Flask", "score": 0, "id": "10yx6pc", "url": "https://python-hosted.com/building-rest-apis-with-python-flask", "comms_num": 0, "created": 1676048903.0, "body": ""}, {"title": "Faster poetry?", "score": 3, "id": "10ywh7h", "url": "https://www.reddit.com/r/Python/comments/10ywh7h/faster_poetry/", "comms_num": 16, "created": 1676047087.0, "body": "Is there probably some faster fork of poetry? The dependency resolution takes soo long."}, {"title": "Business Process Models With Python", "score": 5, "id": "10yuyd4", "url": "https://www.reddit.com/r/Python/comments/10yuyd4/business_process_models_with_python/", "comms_num": 0, "created": 1676043275.0, "body": "Had the honor of talking to Christopher on the Real Python Podcast, which came out today.  We talk about our open source project SpiffWorkflow - but also about good programming practices, The No-Code systems out there and how the relate to the Python language, and well, just generally have a really good time.  Christopher is the best.  \n\n[https://realpython.com/podcasts/rpp/144/](https://realpython.com/podcasts/rpp/144/)"}, {"title": "5 years automotive experience wanting to change career path.", "score": 25, "id": "10yur8i", "url": "https://www.reddit.com/r/Python/comments/10yur8i/5_years_automotive_experience_wanting_to_change/", "comms_num": 43, "created": 1676042815.0, "body": "As the title says I've been in the automotive industry for the past five years and I achieved my \"dream job\" working on luxury European vehicles. But I'm wanting to shift gears into a computer science/coding role in hopes of a better work life balance. I love the problem solving aspect of working in automotive, I love the puzzle of disassembling and reassembling engines and the satisfaction of being presented with a problem and being able to solve and fix said problem. But I have some issues as well, mainly being the physical labor aspect causing wear and tear on my back and body overall. But also the 50+ hour work weeks, coming home looking and smelling like a pig, it's l and honestly the monotony of showing up to the same shop day after day is driving me a little crazy. \n\nI don't know much about coding/programing but it seems to align more with my values in life than automotive. I've started taking Harvard's CS50 course online in my free time, as well as doing some basic step by step python walkthroughs on YouTube creating a rock paper scissors game and some other basic programs. As I said above, I enjoy critical thinking and problem solving. I like the idea of my job being more mentally demanding than it is physically demanding, I'd love to work 40 or less hours a week and the idea of being able to work from a home office, cafe or a hotel room sounds life changing.\n\nSo I wanted to ask a couple questions to people with experience in the industry, firstly are my romanticized expectations listed above unrealistic? I don't want to work for Google or be a part of the next great innovation. I don't even care about the salary, my average automotive salary has been more than enough for me. I'm just searching for some quality of life improvements, more freedom to travel and still make an income, having more time and energy to spend with my wife.\n\nSecond, the tech industry is vast. \"Computer science\" is a broad term with many different jobs like software engineer, web development, data engineer, cyber security, front end developer, back end developer etc. I've done some research on the many different roles but I am having a hard time figuring out a goal to strive for. I found it easier to motivate myself through my automotive career, starting at a tire shop, when I had the end goal to work on Porsche's, BMWs and Mercedes. So my second question is, if my desires and expectations of this industry aren't unrealistic, what positions in your opinion would line up best with my values listed above?  \n\nThank you for taking the time to read this and I look forward to reading everyone's replies. \n\nTldr: Achieved my goals and ran my course through the automotive industry. Now wanting some quality of life improvements that seem achievable with a career shift to the tech industry. Looking for some advice and insight starting this new journey in life."}, {"title": "ChatGPT-like GPT-3 chatbot that allows you to have a spoken conversation, build robo-familiarity, and customize bot", "score": 5, "id": "10yumvp", "url": "https://www.reddit.com/r/Python/comments/10yumvp/chatgptlike_gpt3_chatbot_that_allows_you_to_have/", "comms_num": 2, "created": 1676042526.0, "body": "&#x200B;\n\n[Interface example \\(bot chose name wiseTech, but default name is AI\\)](https://preview.redd.it/qfb9umpjpdha1.jpg?width=1536&format=pjpg&auto=webp&v=enabled&s=6df84d7d75a46aa85f2ec9200daaf615f427ce25)\n\n&#x200B;\n\nDisclaimer: I'm technically not a *beginner*\\-beginner, but def think that I still suck wayyy too much to feel good calling myself intermediate. There's no in-between flair, so I'll just error with beginner.\n\nThis chatbot was made using GPT-3 with the hope of emulating ChatGPT and adding some features that I wanted for myself. You can find the code at this repo: [https://github.com/Adri6336/gpt3-speech-to-text-chatbot](https://github.com/Adri6336/gpt3-speech-to-text-chatbot)\n\nThe main feature that sets it apart from ChatGPT is its speech-to-text interface and its text-to-speech output. What I mostly wanted was a more natural way of conversing with the bot, so I made it so that you can speak to it and have it reply back to you outloud. The speech recognition uses Google's speech recognition tech, and the bot's spoken output can be one of three options:\n\n1. Google's text to speech module.\n2. ElevenLabs' text-to-speech API. I added this as an option because it sounds real as heck and is perfect for my bot's purpose (aside from the latency).\n3. Your native TTS program (robospeak). On Windows, you'll already have one installed. On Linux, you'll need to install one.\n\nThe other features that set it apart from ChatGPT are its ability to create a memory of you (if you want it to), the ability to set a preset (something automatically loaded that alters her behavior), modify response tokens, and change the bot's name. The memory file was designed to include info to allow the bot to better serve you and build a lasting pseudo-robo-relationship. The preset modifies her behavior (so long as it complies with OpenAI's usage policy) to whatever you like (I have her set to speak to me like I have severe ADHD, which may or may not make her responses easier for me to understand). Response token length changing can be useful when you want the bot to write you something a bit large (like a script, sea chanty, or story). Finally, the name changing ability does what it says: it will change the name regardless of your place in the conversation, making the bot think it was always called that.\n\nThis is still a work in progress. One thing that I am aiming to implement soon is token recycling. Eventually a conversation is bound to hit the 4000 token limit, and I want to ensure that the conversation can be continued with the bot still having an awareness of what was previously discussed."}, {"title": "Inheritance In Python - Single, Multiple, Multi-level Inheritance And More", "score": 16, "id": "10ytgve", "url": "https://www.reddit.com/r/Python/comments/10ytgve/inheritance_in_python_single_multiple_multilevel/", "comms_num": 2, "created": 1676039589.0, "body": "&#x200B;\n\nhttps://preview.redd.it/2icorh6kgdha1.png?width=1600&format=png&auto=webp&v=enabled&s=d55c725c9f56e4aa27acc1424509284448102304\n\n**Inheritance** can be defined as the mechanism that permits the newly created classes to inherit the methods and attributes of the existing class or parent class. The classes that inherit the methods and attributes from the parent class are called **subclass** and the existing class is called a **superclass**. \n\nInheritance helps us reduce the effort that we put into writing the same logic again and again and makes it easy to maintain and update the code. \n\nDifferent types of inheritance:\n\n* **Single Inheritance**\n* **Multiple Inheritance**\n* **Multilevel Inheritance**\n* **Hierarchical Inheritance**\n* **Hybrid Inheritance**\n\n**Learn about the different types of inheritance and how to perform it in Python\ud83d\udc47\ud83d\udc47**\n\n[Class inheritance in Python - Single, Multiple, Multi-level inheritance and more](https://geekpython.in/class-inheritance-in-python)."}, {"title": "Places where chatGPT is actually useful", "score": 37, "id": "10ytgkk", "url": "https://www.reddit.com/r/Python/comments/10ytgkk/places_where_chatgpt_is_actually_useful/", "comms_num": 87, "created": 1676039567.0, "body": "By now, amongst developers the hype surrounding chatGPT is starting to set, and we better understand how we can use AI effectively in our day to day tasks.\n\nWhile we can't sit down and ask it to spit out a finished product, and it seems a little unlikely that we ever will, I am finding a few use cases. One place that I do find useful is with list and dictionary transformations:\n\n>Consider the following:  \n>  \n>\\[{\"A\": \\[10, 13\\]}, {\"A\": \\[50, 17\\]}, {\"B\": \\[17, 18\\]}, {\"B\": \\[4, 90\\]}\\]  \n>  \n>How can I translate this to:  \n>  \n>{A: \\[10, 13, 50, 17\\], B: \\[17, 18, 4, 90\\]}\n\nChatGPT does a really good job with these kinds of questions. It also does a good job of taking a traditional list or dictionary iterator and converting it into a comprehension.\n\nWhile this example isn't too complicated, it'd have taken me much more time to write a solution than it did to write the prompt. Of course you'll want to test the code, but any case limitations are easy enough to bring back into ChatGPT using a similar format.\n\nCoPilot seems to get less out into the weeds; With CoPilot, I am finding it useful to write a prompt as a comment, and often it will do a great job at writing the next few lines to get the answer you want, and this seems to improve as you're working on the project. It gives a better sense for what you need. Copilot is also good at documentation; Often, it can be a bit vague, but it usually offers a good starting point for adding clarity which is good for people like me who aren't all that experienced in writing documentation.\n\nHow are you using AI? What kinds of prompts are most helpful?"}, {"title": "Is learning Flask before Django or FastAPI a good way to introduce myself in Python Web Development?", "score": 234, "id": "10ypnnn", "url": "https://www.reddit.com/r/Python/comments/10ypnnn/is_learning_flask_before_django_or_fastapi_a_good/", "comms_num": 86, "created": 1676028532.0, "body": "I'm currently working as PHP Full Stack Intern, but I plan to work with Python someday. I already started a project to do a ToDo app in Flask to get introduced to the framework, am I doing a good choice to start learning Python Web Development for real?"}, {"title": "Use TOML for .env files?", "score": 10, "id": "10ynazn", "url": "https://snarky.ca/use-toml-for-env-files/", "comms_num": 12, "created": 1676022643.0, "body": ""}, {"title": "How to Build a XSS Vulnerability Scanner in Python", "score": 6, "id": "10ym4vj", "url": "https://www.codelivly.com/how-to-build-a-xss-vulnerability-scanner-in-python/", "comms_num": 0, "created": 1676020458.0, "body": ""}, {"title": "Using Copilot with Python apps", "score": 3, "id": "10yk4q9", "url": "http://blog.pamelafox.org/2023/01/using-copilot-with-python-apps.html", "comms_num": 3, "created": 1676016538.0, "body": ""}, {"title": "Spotify Instrumental Playlist Generator", "score": 27, "id": "10yiz0b", "url": "https://www.reddit.com/r/Python/comments/10yiz0b/spotify_instrumental_playlist_generator/", "comms_num": 24, "created": 1676013161.0, "body": "To download :  [GitHub Release](https://github.com/Dius21/Spotify-Instrumental-playlist-Generator/releases/tag/release)\n\nTo view code: [Source code, Python](https://github.com/Dius21/Spotify-Instrumental-playlist-Generator)\n\nHere's a tool for Spotify Instrumental Playlist generation, source code written entirely in python.\n\nIt requires the link to the playlist and a little time - and generates a Instrumental Version of the playlist (and adds to your spotify library) for all songs it can find instrumental versions of.\n\nHope you like it!!\n\nFeel free to comment critiques, bugs, suggestions, or questions."}, {"title": "lovely valentine message generator", "score": 0, "id": "10ygfpf", "url": "https://codehs.com/sandbox/id/vale-DCa4EI", "comms_num": 0, "created": 1676004175.0, "body": ""}, {"title": "here is a lovely valentine message generator", "score": 0, "id": "10yge81", "url": "https://www.reddit.com/r/Python/comments/10yge81/here_is_a_lovely_valentine_message_generator/", "comms_num": 1, "created": 1676004035.0, "body": "\\# Valentine's Day message generator\n\ndef valentine\\_message(lovely):\n\nmessages = \\[\n\n\"Roses are red, violets are blue, I'm so lucky to have a partner like you.\",\n\n\"You light up my life like nobody else, happy Valentine's Day, my love.\",\n\n\"I never knew what love was until I met you, here's to a lifetime of happiness.\",\n\n\"Every moment with you is like a fairytale come true, happy Valentine's Day, my love.\",\n\n\"You bring joy to my life and make every day special, I love you more than words can say.\",\n\n\"Happy Valentine's Day to the person who completes me, I love you more and more each day.\"\n\n\\]\n\nimport random\n\nmessage = random.choice(messages)\n\nreturn message.replace(\"you\", lovely)\n\n&#x200B;\n\nprint(valentine\\_message(\"your mum\"))"}, {"title": "UPDATED WEBSITE", "score": 0, "id": "10y8hr3", "url": "https://www.reddit.com/r/Python/comments/10y8hr3/updated_website/", "comms_num": 0, "created": 1675982167.0, "body": "https://www.pythonbytesize.com/\nIt now has 275 detailed Python video tutorials with a combined runtime duration of over 50 hours. In addition, it has 49 one-minute Python video shorts. It also has a new navigation system with 17 sections (topic areas) related to the Python programming language. To help support the future development of the material I would be grateful if you could share the website on social media with your colleagues, students, pupils, teachers, lecturers etc. Also encouraging others to subscribe to the YouTube channel will also help maintain the free nature of the material."}, {"title": "\ud83d\udc0d Python 3.11.2 Leaks Info About A Humble Performance Improvement", "score": 159, "id": "10y71e4", "url": "https://tomaszs2.medium.com/python-3-11-2-leaks-info-about-a-humble-performance-improvement-c3d477b172d9", "comms_num": 41, "created": 1675978741.0, "body": ""}, {"title": "Eliza - A Pioneering Natural Language Processing Program in Python", "score": 6, "id": "10y59zr", "url": "https://keithmfoster.com/eliza-a-pioneering-natural-language-processing-program/", "comms_num": 1, "created": 1675974565.0, "body": ""}, {"title": "I wrote about the tools I recommend for building geospatial web applications", "score": 7, "id": "10y57bb", "url": "https://medium.com/@ramizsami/webgis-development-in-2023-a-guide-to-the-tools-and-technologies-i-use-for-building-advanced-9bd3277b10dd", "comms_num": 0, "created": 1675974386.0, "body": ""}, {"title": "complex http server?", "score": 0, "id": "10y56z4", "url": "https://www.reddit.com/r/Python/comments/10y56z4/complex_http_server/", "comms_num": 18, "created": 1675974364.0, "body": "i know python has a built in \"simple\" http server that I can run by doing \\`python3 -m http.server\\`. but is there a \"complex\" http server that I can use? \n\nAlso, I wanted to know if there was a better alternative to the package called \\`videoboard\\` in python. that package is quite old and has not been updated in years. so if a newer alternative that works better is available, I would appreciate it."}, {"title": "\ud83e\udde9 [WIP update] drag\u2019n drop Python GUI in VS Code", "score": 0, "id": "10xzmv5", "url": "https://www.youtube.com/watch?v=7QsJ6KcG3gw", "comms_num": 5, "created": 1675961710.0, "body": ""}, {"title": "12 Python Libraries that everyone should know", "score": 0, "id": "10xye9i", "url": "https://medium.com/@cyberdioxide/12-python-libraries-that-everyone-should-know-9aa5b170489a", "comms_num": 2, "created": 1675958673.0, "body": ""}, {"title": "Teacher restricts use of break statements.", "score": 324, "id": "10xy3is", "url": "https://www.reddit.com/r/Python/comments/10xy3is/teacher_restricts_use_of_break_statements/", "comms_num": 303, "created": 1675957963.0, "body": "Hello, I'm taking an intro class in Python and I was just wondering what my professors reasoning behind not letting students use break statements would be? Any ideas? They seem like a simple and fundamental concept but perhaps I'm missing something"}, {"title": "I just released ThatMetricTimeline (TMT), version 0.1.8, a KISS library to keep track of machine learning experiments", "score": 8, "id": "10xx7tj", "url": "https://www.reddit.com/r/Python/comments/10xx7tj/i_just_released_thatmetrictimeline_tmt_version/", "comms_num": 0, "created": 1675955732.0, "body": "Hello, everyone!\n\nAs per the title, I've just released (a few days ago actually) a new version of my [TMT](https://github.com/levnikmyskin/that_metric_timeline) library and I would like to have your feedbacks :)\n\nWhat is TMT? It is a small and simple library to track code, results and metrics for machine learning experiments (or at least, that's what it's thought for). It is similar, in principle to what [wandb](https://wandb.ai/site) does, but it's much simpler, completely open source, completely free and much more \"bare bones\" (i.e., no web UIs, plots and so on). It can be used easily on a server from a terminal, and in general, should be easy to \"hack\" since the codebase is pretty small.\n\nMore in details, TMT:\n\n* Gives you a decorator that you can use to keep track of experiments, giving a name to this experiment, a description and much more;\n* Takes a \"snapshot\" of your project every time you run an experiment, so that you can easily go back to the code that produced that metric (snapshots are easy on disks, since only changed files are saved every time). You can also use a `.gitignore` to exclude undesired files from being backed up;\n* Saves whatever metric(s) you return from the decorated function, or nothing at all;\n* Has a TUI (Terminal User Interface) to take a look and navigate through your experiments;\n   * Also exposes a `TmtManager` utility that lets you do the same, but from code.\n\nThere's a much more complete description of it on the [github](https://github.com/levnikmyskin/that_metric_timeline) page or on [readthedocs](https://thatmetrictimeline.readthedocs.io/en/latest/). If you're interested, here's the [original reddit post](https://www.reddit.com/r/learnmachinelearning/comments/vl36ro/tmt_a_kiss_library_to_keep_track_of_experiments/) back when I first published the library.\n\nThe library is available on PyPI, and can be installed with:\n\n    pip install ThatMetricTimeline\n\n&#x200B;\n\nWhat is new in this 0.1.8 version?\n\nWell just small changes, but I think they enhance (at least a little) the usability of the library:\n\n* The library now supports custom saving function (by default, it uses pickle, but now you can use `numpy.save` or whatever else you wish to use);\n* The library now supports duplicate names for experiments (experiments are identified by a unique UUID), and several options are available to handle duplicates;\n* There is now a `description` argument in `tmt_recorder` which allows to set long descriptions for an experiment;\n* When searching for experiments in the TUI (Terminal User Interface), the date when the results were saved is now also shown.\n\nIf you think this is a nice project and you want to try it out, feel free to give me any feedback :)"}, {"title": "How to Automate the Creation of Shorts Videos using OpenAI and MoviePy", "score": 3, "id": "10xwo8c", "url": "https://www.reddit.com/r/Python/comments/10xwo8c/how_to_automate_the_creation_of_shorts_videos/", "comms_num": 0, "created": 1675954404.0, "body": "As someone who loves to create short videos, I wanted to find a way to automate the process and save time. That's why I developed a [simple script](https://github.com/dravicenna/youtube-gpt-content-maker) that uses the OpenAI API and the MoviePy library to generate videos quickly and easily. In this post, I'll share my journey and explain how you can use my tool to create your own videos. Final videos you can find on [Youtube](https://www.youtube.com/channel/UC1CEqxquyFegNANRFQH-YmQ) and [Tiktok](https://www.tiktok.com/@historyfactstv)\n\n# Step 1: Set Up the Model in the OpenAI Playground\n\nThe first step was to set up the model in the [OpenAI playground](https://platform.openai.com/playground/). I chose the \"text-davinci-003\" model and customized the settings to suit my needs, including temperature, max\\_tokens, frequency\\_penalty, and presence\\_penalty. I also wrote a prompt that described the type of content I wanted to generate. In my case, I asked the API to generate 12 historical, unique, and memorable facts about a person or event that happened on a specified date. I asked the API to use irony, puns, and word play to create entertaining and easily understandable facts, without requiring any references or sources.\n\n**You can find all setting in** [this config.py file](https://github.com/dravicenna/youtube-gpt-content-maker/blob/main/config.py)\n\n# Step 2: Download Templates\n\nNext, I downloaded a background video and music files that I could use as templates. These templates would be used as the backgrounds for my final videos.\n\n# Step 3: Write the Python Script\n\nWith my model set up and templates in hand, I was ready to write the Python script that would bring everything together. Using the MoviePy library, I created a script that would make a request to the OpenAI API with my prompt, receive a response with the 12 history facts, and generate a video by pasting the text onto the background video and applying the music file. The final step was to save all the generated videos in a separate folder.\n\n# Step 4: Start Generating Videos\n\nWith my script all set, I was able to start generating videos! Although GPT-3 may not be the best option for generating factual content, the outcome was still a series of amusing and informative videos that I was able to share with my network. It was a fun experiment and the results were impressive.\n\n# Some ideas for videos:\n\n\\- Ask GPT-3 to generate a daily jokes\n\n\\- Ask GPT-3 to generate daily motivation story\n\n\\- Ask GPT-3 to write a daily recipe\n\n# Conclusion\n\nI hope that this article has given you an idea of how you can use OpenAI and MoviePy to automate the process of creating short videos. I'm excited to share my source code with you, so feel free to check it out on Github: [**https://github.com/dravicenna/youtube-gpt-content-maker**](https://github.com/dravicenna/youtube-gpt-content-maker). If you have any questions or feedback, please let me know in the comments."}, {"title": "How to Split a Python List or Iterable Into Chunks \u2013 Real Python", "score": 53, "id": "10xwbof", "url": "https://realpython.com/how-to-split-a-python-list-into-chunks/", "comms_num": 3, "created": 1675953532.0, "body": ""}, {"title": "Install and Run Python Applications with pyenv!", "score": 24, "id": "10xw36p", "url": "https://www.reddit.com/r/Python/comments/10xw36p/install_and_run_python_applications_with_pyenv/", "comms_num": 7, "created": 1675952931.0, "body": "I wrote a small wrapper script over `pyenv` to install CLI and GUIs tools I need locally in separate `venvs`, while still retaining all the features of `pyenv`. \n\nAs a result, I can avoid cluttering my `$HOME` and not having to install everything through the distribution's package manager.\nSomething similar is done by `pipx`, but it lags behind `pyenv` in terms of features.\n\nIf you have any suggestions for improvement, you're welcome. PRs are also welcome!\n\nhttps://github.com/afaikiac/pyenvx"}, {"title": "psychopg2 to psychopg3 Upgrade", "score": 2, "id": "10xvpt1", "url": "https://www.reddit.com/r/Python/comments/10xvpt1/psychopg2_to_psychopg3_upgrade/", "comms_num": 1, "created": 1675951939.0, "body": "Are there any gotchas you need to look out for when upgrading? I'm going to implement all the new features over time, but are there any backward compatibility issues I need to watch out for."}, {"title": "Documenting Python Code and Projects", "score": 7, "id": "10xvjmd", "url": "https://testdriven.io/blog/documenting-python/", "comms_num": 3, "created": 1675951486.0, "body": ""}, {"title": "best python book that covers everything, from beginner to expert?", "score": 0, "id": "10xv3l6", "url": "https://www.reddit.com/r/Python/comments/10xv3l6/best_python_book_that_covers_everything_from/", "comms_num": 14, "created": 1675950294.0, "body": "I wanna be completely fluent in python and i heard of some good books, the problem is that i want a book to teach me everything all the way to expert techniques and help me become a python pro. (i know enough basic python to make small games with pygame)"}, {"title": "Python ideas for upcoming semester?", "score": 0, "id": "10xtzcr", "url": "https://www.reddit.com/r/Python/comments/10xtzcr/python_ideas_for_upcoming_semester/", "comms_num": 1, "created": 1675947045.0, "body": "I just started programming about half a year ago and built a Dataset explorer using streamlit as part of a HBO uni task.\n\nNow in the upcoming semester I want to extend my Python knowledge however for the upcoming semester on my HBO uni we have to use our own creativity to develop something. I got all the tools\u2026 but I don\u2019t know what to create! It needs to be something useful with a \u201cbusiness justification\u201d behind it (so not just a calculator, etc). \n\nAny help?"}, {"title": "Course that can help you with the deployment part of things", "score": 152, "id": "10xttnu", "url": "https://www.reddit.com/r/Python/comments/10xttnu/course_that_can_help_you_with_the_deployment_part/", "comms_num": 22, "created": 1675946557.0, "body": "Hello everyone,\n\nI've created a course that I thing might be of use to some of you who are interested in the deployment part of things.\nIt's a DevOps course and it has a section where I dockerize a Python application,\ncreate a CI/CD pipeline in GitLab, and then run the program on the VPS via GitLab Runner.\n\nIf you want to check the whole course, there are some prerequisites - if you've never even heard of Docker, if you don't know at least something about DNS, or if you don't have any experience with Linux, this course is probably not for you. That being said, I do explain the basics too, but probably not in enough detail for a complete beginner.\n\nHere's a 100% OFF coupon if you want to check it out:\n\n~~https://www.udemy.com/course/real-world-devops-project-from-start-to-finish/?couponCode=FREEDEVOPS2302FIAPO~~\n\n~~https://www.udemy.com/course/real-world-devops-project-from-start-to-finish/?couponCode=FREEDEVOPS2302POIQV~~\n\nBe sure to BUY the course for $0, and not sign up for Udemy's subscription plan. The Subscription plan is selected by default, but you want the BUY checkbox. If you see a price other than $0, chances are that all coupons have been used already.\n\nThe goal of the course is to create an easily deployable and reproducible server which will have \"everything\" a startup or a small company will need - VPN, mail, Git, CI/CD, messaging, hosting websites and services, sharing files, calendar, etc. It can also be useful to individuals who want to self-host all of those - I ditched Google 99.9% and other than that being a good feeling, I'm not worried that some AI bug will lock my account with no one to talk to about resolving the issue.\n\nConsidering that it covers a wide variety of topics, it doesn't go in depth in any of those. Think of it as going down a highway towards the end destination, but on the way there I show you all the junctions where I think it's useful to do more research on the subject.\n\nWe'll deploy services inside Docker and LXC (Linux Containers). Those will include a mail server (iRedMail), Zulip (Slack and Microsoft Teams alternative), GitLab (with GitLab Runner and CI/CD), Nextcloud (file sharing, calendar, contacts, etc.), checkmk (monitoring solution), Pi-hole (ad blocking on DNS level), Traefik with Docker and file providers (a single HTTP/S entry point with automatic routing and TLS certificates).\n\nWe'll set up WireGuard, a modern and fast VPN solution for secure access to VPS' internal network, and I'll also show you how to get a wildcard TLS certificate with certbot and DNS provider.\n\nTo wrap it all up, we'll write a simple Python application that will compare a list of the desired backups with the list of finished backups, and send a result to a Zulip stream. We'll write the application, do a 'git push' to GitLab which will trigger a CI/CD pipeline that will build a Docker image, push it to a private registry, and then, with the help of the GitLab runner, run it on the VPS and post a result to a Zulip stream with a webhook.\n\nWhen done, you'll be equipped to add additional services suited for your needs.\n\nIf this doesn't appeal to you, please leave the coupon for the next guy :)\n\nI hope that you'll find it useful!\n\n\nHappy learning,\nPredrag"}, {"title": "How to Scrape Realtor.com Property Data using Python", "score": 3, "id": "10xs226", "url": "https://www.scrapingdog.com/blog/web-scraping-realtor/", "comms_num": 1, "created": 1675940523.0, "body": ""}, {"title": "Creating a CS club in Highschool", "score": 2, "id": "10xo2z2", "url": "https://www.reddit.com/r/Python/comments/10xo2z2/creating_a_cs_club_in_highschool/", "comms_num": 3, "created": 1675925766.0, "body": "I'm interested in creating a CS club utilizing Python in my high school, but my only experience with programming is in ADST and online resources. Although I've had experience leading other clubs such as Student Council and the Social Justice Committee, I fear that my lack of CODING expertise would make for a lackluster club.\n\nI've created an outline for what we can achieve and it involves small game projects in Pygame and Roblox scripting in Lua. I also want to involve a social service aspect, engagement with the school / outside community through a group project.\n\nMy sponsor teacher is adept at programming so she can provide some counsel moving forward, but I wanted to get some public input on what I should do, regarding the club's future. Many Thanks!"}, {"title": "Python deserves a good in-memory cache library!", "score": 106, "id": "10xnpjh", "url": "https://www.reddit.com/r/Python/comments/10xnpjh/python_deserves_a_good_inmemory_cache_library/", "comms_num": 33, "created": 1675924461.0, "body": "If you know [Caffeine(Java)](https://github.com/ben-manes/caffeine)/[Ristretto(Go)](https://github.com/dgraph-io/ristretto)/[Moka(Rust)](https://github.com/moka-rs/moka), you know what [Theine](https://github.com/Yiling-J/theine) is.  Python deserves a good in-memory cache library.\n\nTheine: [https://github.com/Yiling-J/theine](https://github.com/Yiling-J/theine)\n\n* High performance [Rust core](https://github.com/Yiling-J/theine-core)\n* High hit ratio with [W-TinyLFU eviction policy](https://arxiv.org/pdf/1512.00727.pdf)\n* Expired data are removed automatically using [hierarchical timer wheel](http://www.cs.columbia.edu/~nahum/w6998/papers/ton97-timing-wheels.pdf)\n* Simple API\n* Django cache backend\n\nAlso if you are looking for a good cache framework, maybe [Cacheme](https://github.com/Yiling-J/cacheme) can help you."}, {"title": "A Crypto Portfolio Tracker Built using Python by a CS Student! [With Video Demonstration]", "score": 3, "id": "10xm11y", "url": "https://www.reddit.com/r/Python/comments/10xm11y/a_crypto_portfolio_tracker_built_using_python_by/", "comms_num": 5, "created": 1675919037.0, "body": "I hope you're all doing well! I'm a 3rd-year computer science student and I've been working on a little project that I think could be really helpful for those of you into crypto trading. I have built a desktop application that lets you track your crypto portfolio with ease!\n\nI put together a video to show you all what the application is all about, and I hope you're gonna love it:\nhttps://youtube.com/watch?v=4kB29bUKd4I&feature=share\n\n It's got a clean and simple design, and all the features someone would need to keep track of their investments.\n\nThe application has been built using Python, so it's fast, reliable, and super user-friendly. I've been trading crypto for a while now and I noticed there wasn't a single desktop app out there that could do everything I needed, so I made one!\n\nBut before I release the application to the public for completely free, I want to know what you guys think. Do you like what you see in the video? Is there anything you'd add to the app? I'm all ears! I want the application to be the best it can be and I know I can't do it without your help.\n\nPlease let me know in the comments."}, {"title": "How do you work with Python Datetime and MySql Datetime", "score": 2, "id": "10xlo9n", "url": "https://www.reddit.com/r/Python/comments/10xlo9n/how_do_you_work_with_python_datetime_and_mysql/", "comms_num": 2, "created": 1675917963.0, "body": "Hey all.\n\nI'm working on a personal project (React + Flask + MySql). Let's say my web frontend sends to Flask a JSON object with a Date field. The Flask endpoint converts the JSON object into a dataclass and persists it to MySql. Without doing anything extra, the datetime is usually represented in ISO8601 UTC (YYYY-MM-DDThh:mm:ss.123Z).\n\nSince MySql does not naturally handle this datetime format, I'm now curious how people work with persisting a datetime to MySql.\n\nNote: I'm aware that one can send timestamps, use formatting & other ways to make it work. What I'm looking for is what's generally a good practice/a common approach that people take when handling datetimes.\n\nThanks :)"}, {"title": "Is it a good practice to have multiple functions doing mostly the same things with slight differences?", "score": 14, "id": "10xln1i", "url": "https://www.reddit.com/r/Python/comments/10xln1i/is_it_a_good_practice_to_have_multiple_functions/", "comms_num": 20, "created": 1675917864.0, "body": "Hello, let's say I have 3 different data files (A,B,C) stored in 3 CSVs. CSV formats are very similar. maybe a few extra different columns. Importing those CSV files is the same, and preprocessing data is almost same with minor differences (if it is A, multiply it by 2 , or for B divide it by 3, ...). Now, I have 3 different functions reading and processing A, B and C. \n\nI want to learn what the best practice is. Is it a good practice to merge these 3 functions into a single function? or keep them separate? or have another wrapper function?"}, {"title": "Trying to install Python (Flask) via OpenAI instructions", "score": 0, "id": "10xkrlq", "url": "https://www.reddit.com/r/Python/comments/10xkrlq/trying_to_install_python_flask_via_openai/", "comms_num": 13, "created": 1675915249.0, "body": "I have the following version of Python 3.11.1.  \nI have the following version of Numpy 1.24.2.\n\nWhen I try to install pip install -r requirements.txt, I am getting the following error messages\n\nERROR: Ignored the following versions that require a different python version: 1.21.2 Requires-Python >=3.7,<3.11; 1.21.3 Requires-Python >=3.7,<3.11; 1.21.4 Requires-Python >=3.7,<3.11; 1.21.5 Requires-Python >=3.7,<3.11; 1.21.6 Requires-Python >=3.7,<3.11\n\nERROR: Could not find a version that satisfies the requirement numpy==1.21.3 (from versions: 1.3.0, 1.4.1, 1.5.0, 1.5.1, 1.6.0, 1.6.1, 1.6.2, 1.7.0, 1.7.1, 1.7.2, 1.8.0, 1.8.1, 1.8.2, 1.9.0, 1.9.1, 1.9.2, 1.9.3, 1.10.0.post2, 1.10.1, 1.10.2, 1.10.4, 1.11.0, 1.11.1, 1.11.2, 1.11.3, 1.12.0, 1.12.1, 1.13.0, 1.13.1, 1.13.3, 1.14.0, 1.14.1, 1.14.2, 1.14.3, 1.14.4, 1.14.5, 1.14.6, 1.15.0, 1.15.1, 1.15.2, 1.15.3, 1.15.4, 1.16.0, 1.16.1, 1.16.2, 1.16.3, 1.16.4, 1.16.5, 1.16.6, 1.17.0, 1.17.1, 1.17.2, 1.17.3, 1.17.4, 1.17.5, 1.18.0, 1.18.1, 1.18.2, 1.18.3, 1.18.4, 1.18.5, 1.19.0, 1.19.1, 1.19.2, 1.19.3, 1.19.4, 1.19.5, 1.20.0, 1.20.1, 1.20.2, 1.20.3, 1.21.0, 1.21.1, 1.22.0, 1.22.1, 1.22.2, 1.22.3, 1.22.4, 1.23.0rc1, 1.23.0rc2, 1.23.0rc3, 1.23.0, 1.23.1, 1.23.2, 1.23.3, 1.23.4, 1.23.5, 1.24.0rc1, 1.24.0rc2, 1.24.0, 1.24.1, 1.24.2)\n\nERROR: No matching distribution found for numpy==1.21.3\n\nCan someone please help me figure out why the terminal is not accepting the numpy version I have? I think its the most dated version."}, {"title": "Data Structures in python", "score": 0, "id": "10xik4n", "url": "https://cdn.paulponraj.com/ib/TeIR8ariFF", "comms_num": 4, "created": 1675909138.0, "body": ""}, {"title": "How to scrape Amazon with Scrapy", "score": 0, "id": "10xids2", "url": "https://ginjarcodes.hashnode.dev/how-to-scrape-amazon-with-scrapy", "comms_num": 0, "created": 1675908675.0, "body": ""}, {"title": "in need of a pure python crypto library", "score": 0, "id": "10xg72e", "url": "https://www.reddit.com/r/Python/comments/10xg72e/in_need_of_a_pure_python_crypto_library/", "comms_num": 12, "created": 1675902982.0, "body": "I am working on a project where I need to be able to encrypt and decrypt a few kilobytes of text. The problem is that my org does not allow any compiled python libraries so I am in need of a trusted, maintained, and pure python library to do encryption. I looked at pyaes and it would be perfect for my needs, but it isn't being maintained. Does anyone know of a library that would work?\n\nUpdate: I found what I needed with the oscrypto library."}, {"title": "Thursday Daily Thread: Python Careers, Courses, and Furthering Education!", "score": 2, "id": "10xfavm", "url": "https://www.reddit.com/r/Python/comments/10xfavm/thursday_daily_thread_python_careers_courses_and/", "comms_num": 0, "created": 1675900811.0, "body": "Discussion of using Python in a professional environment, getting jobs in Python as well as ask questions about courses to further your python education!\n\n**This thread is not for recruitment, please see** r/PythonJobs **or the thread in the sidebar for that.**"}, {"title": "Python raytracer optimizations and improvements", "score": 4, "id": "10xer29", "url": "https://www.reddit.com/r/Python/comments/10xer29/python_raytracer_optimizations_and_improvements/", "comms_num": 6, "created": 1675899479.0, "body": "I recently wrote a raytracer based on Peter Shirley's wonderful raytracing book series. \n\nIt's working but, as it's written in Python, it's slow compared to other compiled language raytracers. I've managed to make two improvements to the speed:\n\n1.) Use PyPy\n\n2.) Use multiprocessing in the renderer\n\nIf anybody has any other optimizations they would like to suggest, I would greatly appreciate it!\n\nThe link to the repo is below. Feel free to check it out:\n\n[https://github.com/SeanJxie/raytracing-in-python](https://github.com/SeanJxie/raytracing-in-python)"}, {"title": "C2-continuous spline from a point set", "score": 0, "id": "10xe7xs", "url": "https://www.reddit.com/r/Python/comments/10xe7xs/c2continuous_spline_from_a_point_set/", "comms_num": 0, "created": 1675898213.0, "body": "I've been working with these functions for a while now. Put them on pypi tonight. Probably the simplest way to make an attractive (c2 is very smooth) curve in SVG or other vector formats. Using them today for graphs that don't have to be perfectly representative, but **do** have to be pretty.\n\nDead simple. Points in, spline out. One parameter (control points). Always C2 continuous.\n\n[ShayHill/cubic\\_bezier\\_spline: Create C2-continuous, non-rational cubic B\u00e9zier splines. In other words, this will approximate or interpolate a sequence of points into a sequence of non-rational cubic B\u00e9zier curves. (github.com)](https://github.com/ShayHill/cubic_bezier_spline) \n\nhttps://preview.redd.it/rqftw2kpr1ha1.png?width=4032&format=png&auto=webp&v=enabled&s=d83919266aac73bdd0731c12f2eeb974a67187c7"}, {"title": "BEM: Build from Blocks with Modifiers", "score": 0, "id": "10xbaq9", "url": "https://www.reddit.com/r/Python/comments/10xbaq9/bem_build_from_blocks_with_modifiers/", "comms_num": 1, "created": 1675891567.0, "body": "[https://github.com/fefa4ka/bempy](https://github.com/fefa4ka/bempy)\n\nbempy provides approach for block composition that allows you to tackle a wide range of tasks with ease. Whether you're generating intricate `Character(...)` designs for video games, constructing robust `Server(...)` infrastructure for your backend systems, placing precise `Resistor(...)` configurations for your electronics projects, or creating interactive `Button(...)` interfaces for your frontend applications, bempy has you covered.\n\nAdditionally, with the ability to define complex `Model(...)` structures for advanced data processing and science computing.\n\nThe blocks are stored in a specific directory structure:\n\n    blocks/\n        game/\n            Character/\n                _gender/\n                    male.py\n                    female.py\n                    non-binary.py\n                _race/\n                    human.py\n                    elf.py\n                    orc.py\n                _abilities/\n                    agility.py\n                    intelligence.py\n                __init__.py      \n\nWith these modificators, you can create any combination of characters that represent the type of person you want in the game. In the example, the `Character` block is stored in the `game` directory, and it has several modificators such as `_gender`, `_race`, and `_abilities`.\n\nTo use the `Character` block in your game, you can create an instance of the block with specific modificator values. For example:\n\n    from bem.game import Character\n    \n    FemaleElf = Character(\n        gender='female',\n        race='elf',\n        abilities=['agility', 'intelligence']\n    )\n    \n    gamer = FemaleElf(\n        level=3,\n        fertility=75,\n        mana=50\n    )\n\nREPL Example:\n\n    >>> from bempy.game import Character\n    >>> FemaleElf = Character(gender='female', race='elf')\n    >>> gamer = FemaleElf(level=10, fertility=75, mana=50)\n    game.Character: Character created with level = 10\n    game.Character: Female created with fertility = 75\n    game.Character: Elf created with mana = 50\n    \n    \n    >>> Female = Character(gender='female', race='human')\n    >>> ma = Female(level=86, fertility=100)\n    game.Character: Character created with level = 86\n    game.Character: Female created with fertility = 100"}, {"title": "Introducing Scovie: A Digital Signage Solution for High Schools Built with Python and Django", "score": 18, "id": "10x7yqa", "url": "https://www.reddit.com/r/Python/comments/10x7yqa/introducing_scovie_a_digital_signage_solution_for/", "comms_num": 8, "created": 1675883775.0, "body": "Hi everyone!\n\n[Digital Signage](https://preview.redd.it/cutwvp35b6ha1.png?width=1914&format=png&auto=webp&v=enabled&s=dd1509fa5bef6e2266f5c295b2e6a39bad9eed99)\n\nI'm excited to announce the launch of Scovie, a digital signage solution designed specifically for high schools. Built using Python and Django, Scovie offers a streamlined platform for creating and displaying information and updates in schools like media diffusion, classroom organization and announcements like missing teachers.\n\nScovie provides a user-friendly interface for users to create and display eye-catching content on a network of screens throughout the school.\n\n[Administration of Scovie](https://preview.redd.it/z1mory6yb6ha1.png?width=1920&format=png&auto=webp&v=enabled&s=a772317b51f9137b741f9bc3f836e721d1e25d4e)\n\nWe believe that Scovie has the potential to improve communication and information sharing in high schools. If you're interested in learning more, please check out our github or send us a message.\n\nThanks for your time, and we hope to hear from you soon!\n\n[Our GitHub](https://www.github.com/eldertek/scovie)"}, {"title": "What have you \"washed your hands of\" in Python?", "score": 98, "id": "10x6yyz", "url": "https://www.reddit.com/r/Python/comments/10x6yyz/what_have_you_washed_your_hands_of_in_python/", "comms_num": 196, "created": 1675881388.0, "body": "What are those things you've spent an afternoon on then just said \"F\\*\\*\\* it!\" and decided to avoid rather than confront for the foreseeable future?\n\nHere are a couple of mine:\n\n* decorators: too limited with type hints. There is often either no solution or the solution is uglier than just \"decorating\" your functions from the inside. That situation is improving quickly, but I'm waiting for a simple solution to changing argument types.\n* MyPy plugins: Didn't spend a ton of time on this, but I never did manage to get it working. IIRC, what aggravated me the most was only being able to find 2 paragraphs of hints across the entire Internet.\n\nWhat are yours? You'd have gotten them in time, but it just didn't seem worth it."}, {"title": "[Tutorial] Creating a UUID from a string like \"this is unique ID based string\"", "score": 0, "id": "10x6yur", "url": "https://samos-it.com/posts/python-create-uuid-from-random-string-of-words.html", "comms_num": 0, "created": 1675881380.0, "body": ""}, {"title": "Stream Responses from OpenAI API with Python: A Step-by-Step Guide", "score": 9, "id": "10x6633", "url": "https://youtu.be/x8uwwLNxqis", "comms_num": 0, "created": 1675879400.0, "body": ""}, {"title": "Build a Regular Expression Engines with Python", "score": 3, "id": "10x5gvu", "url": "https://build-your-own.org/b2a/r0_intro", "comms_num": 0, "created": 1675877734.0, "body": ""}, {"title": "A primer on using CNCF's OpenTelemetry in Python with Jaeger.", "score": 18, "id": "10x576x", "url": "https://python.plainenglish.io/opentelemetry-in-python-a-full-guide-98fef9b500a1", "comms_num": 0, "created": 1675877100.0, "body": ""}, {"title": "Read Raster Data From Postgis Using Python", "score": 27, "id": "10x53ah", "url": "https://www.reddit.com/r/Python/comments/10x53ah/read_raster_data_from_postgis_using_python/", "comms_num": 0, "created": 1675876833.0, "body": "&#x200B;\n\n[Read Raster Data From Postgis Using Python](https://preview.redd.it/nque38pp00ha1.png?width=597&format=png&auto=webp&v=enabled&s=5e8e26b3e7454b7acb28684c8d666e97eb249486)\n\n[Read Raster Data From Postgis Using Python](https://spatial-dev.guru/2023/02/04/read-raster-data-from-postgis-using-python/)"}, {"title": "A Comprehensive Guide to Logging in Python", "score": 130, "id": "10x421b", "url": "https://betterstack.com/community/guides/logging/how-to-start-logging-with-python/", "comms_num": 48, "created": 1675874418.0, "body": ""}, {"title": "I remade the classic Flash Gam 'Helicopter' using python and the PyGame framework!", "score": 26, "id": "10wxl3n", "url": "https://www.reddit.com/r/Python/comments/10wxl3n/i_remade_the_classic_flash_gam_helicopter_using/", "comms_num": 5, "created": 1675865272.0, "body": "This was a pretty easy game to put together with just a few tricky path generation items, but it barely took and hour and 100 lines of code! I made a showcase and tutorial for anyone interested:\n\n[https://www.youtube.com/watch?v=W-3okcjOFnY](https://www.youtube.com/watch?v=W-3okcjOFnY)\n\nAnd the code is available here - cheers!\n\n[https://github.com/plemaster01/pythonHelicopter](https://github.com/plemaster01/pythonHelicopter)"}, {"title": "Announcing Blackfire middleware support for WSGI Python applications", "score": 0, "id": "10wvgi7", "url": "https://www.reddit.com/r/Python/comments/10wvgi7/announcing_blackfire_middleware_support_for_wsgi/", "comms_num": 1, "created": 1675859375.0, "body": "WSGI is the Web Server Gateway Interface. It is a convention that describes how a web server communicates with web applications and how those can be organized to process one request.\n\nDjango, Flask, and many other popular Python frameworks are WSGI-based. Blackfire has dedicated support for Django, Flask, and Odoo. **Our new custom** **middleware** **aims at easing the configuration of other WSGI applications.**\n\n[BlackfireWSGIMiddleware](https://blog.blackfire.io/announcing-blackfire-middleware-support-for-wsgi-python-applications.html?utm_source=blackfire&utm_medium=organic_social&utm_campaign=Blackfire_Blog) to the rescue!"}, {"title": "Paaster v2 \u2013 New UI and ChaCha20 \u2013 E2EE Pastebin \u2013 Docker Deployable", "score": 3, "id": "10wtrr5", "url": "https://www.reddit.com/r/Python/comments/10wtrr5/paaster_v2_new_ui_and_chacha20_e2ee_pastebin/", "comms_num": 1, "created": 1675853897.0, "body": "Recently I've updated paaster to use ChaCha20-Poly1305 instead of AES, brand new UI & lots of quality of life improvements.\n\n&#x200B;\n\n[Desktop preview](https://i.redd.it/4ag9mt784yga1.gif)\n\nGithub: [https://github.com/WardPearce/paaster](https://github.com/WardPearce/paaster)  \nSite: [https://paaster.io/](https://paaster.io/)"}, {"title": "custom 6 bit encryption", "score": 0, "id": "10ws5fo", "url": "https://www.reddit.com/r/Python/comments/10ws5fo/custom_6_bit_encryption/", "comms_num": 4, "created": 1675847622.0, "body": "i made a encryption program, is uses a new dictionary every time, this might be a beginner showcase, but idk \n\nlink: [github repo](https://github.com/Ficolats/python6bit)"}, {"title": "How to reverse Numpy Array in Hindi | Numpy flip() function", "score": 0, "id": "10ws4ob", "url": "https://youtu.be/6ZOoSrANpRw", "comms_num": 0, "created": 1675847535.0, "body": ""}, {"title": "GitHub - withlogicco/django-prose: Wonderful rich-text editing for your Django project", "score": 3, "id": "10wrq2h", "url": "https://github.com/withlogicco/django-prose", "comms_num": 0, "created": 1675845902.0, "body": ""}, {"title": "Aura Text: Text Editor made with Tkinter and Python", "score": 11, "id": "10wptcn", "url": "https://www.reddit.com/r/Python/comments/10wptcn/aura_text_text_editor_made_with_tkinter_and_python/", "comms_num": 4, "created": 1675838831.0, "body": "&#x200B;\n\n[Aura Text UI](https://preview.redd.it/gqe2sx1quwga1.png?width=1706&format=png&auto=webp&v=enabled&s=253d26715de9a69a923279360fdc50d8bc3bf53e)\n\n* Well, edit text files\n* Auto Completion (Python only as of v1.1.0)\n* Highlighter\n* Text Encrypt and Decrypt\n* Text to Speech\n* Syntax Highlighting\n* Auto Indent\n* Summary mode to see the entire data of your file(s)\n* Google search for a specific keyword from the notes\n* Instantly get an article from Wikipedia about the selected word from the notes, without even leaving the app\n* Universal dark mode\n* Adjust the window's transparency so that you can copy text from another app without even closing or minimizing the Notes.\n* Always on-top functionality\n* Search for words on sites like Google, Stackoverflow and GitHub\n\n&#x200B;\n\n[Code Completion](https://preview.redd.it/nqe0rozmvwga1.png?width=1670&format=png&auto=webp&v=enabled&s=615e51f7d960834e431bff96a21a39e4f892779d)\n\n&#x200B;\n\nGitHub: [https://github.com/rohankishore/Aura-Text](https://github.com/rohankishore/Aura-Text)\n\nDownload Now: [https://github.com/rohankishore/Aura-Text/releases/tag/v1.1.0](https://github.com/rohankishore/Aura-Text/releases/tag/v1.1.0)"}]